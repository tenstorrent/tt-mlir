name: Build

on:
  workflow_dispatch:
  workflow_call:

jobs:

  build-and-test:

    strategy:
      fail-fast: false
      matrix:
        build: [
          {build_type: Release, enable_runtime: OFF},
          {build_type: Release, enable_runtime: ON},
        ]

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest

    steps:
    - uses: actions/checkout@v4

    - name: Display working directory
      run: |
        echo "Current working directory: $(pwd)"
        echo "GitHub workspace: ${{ github.workspace }}"

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      shell: bash
      run: |
        source env/activate
        cmake -G Ninja \
        -B ${{ steps.strings.outputs.build-output-dir }} \
        -DCMAKE_CXX_COMPILER=clang++ \
        -DCMAKE_C_COMPILER=clang \
        -DCMAKE_BUILD_TYPE=${{ matrix.build.build_type }} \
        -DTTMLIR_ENABLE_RUNTIME=${{ matrix.build.enable_runtime }} \
        -DTTMLIR_ENABLE_RUNTIME_TESTS=${{ matrix.build.enable_runtime }} \
        -S ${{ github.workspace }}

    - name: Build
      shell: bash
      run: |
        source env/activate
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build.build_type }}

    - name: Lint
      shell: bash
      run: |
        source env/activate
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build.build_type }} -- clang-tidy

    - name: Run Test
      shell: bash
      run: |
        source env/activate
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build.build_type }} -- check-ttmlir

    - name: Upload Test Report
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: build/test/report.xml

    - name: Show Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: build/test/report.xml
        check_name: MLIR Tests
