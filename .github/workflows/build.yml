name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [macos-latest]
        c_compiler: [clang]
        include:
          #- os: ubuntu-latest
          #  c_compiler: clang
          #  cpp_compiler: clang++
          #  build_type: Release
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            build_type: Release

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v3
    - uses: pre-commit/action@v3.0.1

    - name: mkdir /opt/ttmlir-toolchain
      shell: bash
      run: |
        sudo mkdir -p /opt/ttmlir-toolchain
        sudo chown -R ${USER} /opt/ttmlir-toolchain

    - name: Cache ttmlir-toolchain
      uses: actions/cache@v3
      with:
        path: /opt/ttmlir-toolchain
        key: ${{ runner.OS }}-ttmlir-toolchain-cache-${{ hashFiles('env/**') }}
        restore-keys: |
          ${{ runner.OS }}-ttmlir-toolchain-cache-

    - name: Build ttmlir-toolchain
      shell: bash
      run: |
        source env/activate
        cmake -B env/build env
        cmake --build env/build

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      shell: bash
      run: |
        source env/activate
        cmake -G Ninja \
        -B ${{ steps.strings.outputs.build-output-dir }} \
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
        -S ${{ github.workspace }}

    - name: Build
      shell: bash
      run: |
        source env/activate
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Lint
      shell: bash
      run: |
        source env/activate
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} -- clang-tidy

    - name: Test
      shell: bash
      run: |
        source env/activate
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} -- check-ttmlir
