// REQUIRES: opmodel, regression
// RUN: ttmlir-opt --ttir-to-ttnn-backend-pipeline="system-desc-path=%system_desc_path% enable-optimizer=true memory-layout-analysis-enabled=false enable-fusing-pass=true" -o yolo_v8_ttnn.mlir %s
// RUN: ttmlir-translate --ttnn-to-flatbuffer yolo_v8_ttnn.mlir > %t.ttnn
#loc = loc("YOLOv8":0:0)
module @YOLOv8 {
  func.func @forward(%arg0: tensor<1x3x640x640xbf16> {ttcore.argument_type = #ttcore.argument_type<input>, ttir.name = "input_1"} loc("YOLOv8":0:0), %arg1: tensor<1x2x8400xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_add_1644"} loc("YOLOv8":0:0), %arg2: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_3"} loc("YOLOv8":0:0), %arg3: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_3_fork_clone2431"} loc("YOLOv8":0:0), %arg4: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_19"} loc("YOLOv8":0:0), %arg5: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_19_fork_clone2349"} loc("YOLOv8":0:0), %arg6: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_35"} loc("YOLOv8":0:0), %arg7: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_35_fork_clone2112"} loc("YOLOv8":0:0), %arg8: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_53"} loc("YOLOv8":0:0), %arg9: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_53_fork_clone2354"} loc("YOLOv8":0:0), %arg10: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_69"} loc("YOLOv8":0:0), %arg11: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_69_fork_clone2117"} loc("YOLOv8":0:0), %arg12: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_86"} loc("YOLOv8":0:0), %arg13: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_86_fork_clone2359"} loc("YOLOv8":0:0), %arg14: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_102"} loc("YOLOv8":0:0), %arg15: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_102_fork_clone2122"} loc("YOLOv8":0:0), %arg16: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_119"} loc("YOLOv8":0:0), %arg17: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_119_fork_clone2364"} loc("YOLOv8":0:0), %arg18: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_135"} loc("YOLOv8":0:0), %arg19: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_135_fork_clone2127"} loc("YOLOv8":0:0), %arg20: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_153"} loc("YOLOv8":0:0), %arg21: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_153_fork_clone1730"} loc("YOLOv8":0:0), %arg22: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_169"} loc("YOLOv8":0:0), %arg23: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_169_fork_clone1508"} loc("YOLOv8":0:0), %arg24: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_185"} loc("YOLOv8":0:0), %arg25: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_185_fork_clone1250"} loc("YOLOv8":0:0), %arg26: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_203"} loc("YOLOv8":0:0), %arg27: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_203_fork_clone1513"} loc("YOLOv8":0:0), %arg28: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_219"} loc("YOLOv8":0:0), %arg29: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_219_fork_clone1255"} loc("YOLOv8":0:0), %arg30: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_236"} loc("YOLOv8":0:0), %arg31: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_236_fork_clone1518"} loc("YOLOv8":0:0), %arg32: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_252"} loc("YOLOv8":0:0), %arg33: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_252_fork_clone1260"} loc("YOLOv8":0:0), %arg34: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_269"} loc("YOLOv8":0:0), %arg35: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_269_fork_clone1523"} loc("YOLOv8":0:0), %arg36: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_285"} loc("YOLOv8":0:0), %arg37: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_285_fork_clone1265"} loc("YOLOv8":0:0), %arg38: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_302"} loc("YOLOv8":0:0), %arg39: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_302_fork_clone1528"} loc("YOLOv8":0:0), %arg40: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_318"} loc("YOLOv8":0:0), %arg41: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_318_fork_clone1270"} loc("YOLOv8":0:0), %arg42: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_335"} loc("YOLOv8":0:0), %arg43: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_335_fork_clone1533"} loc("YOLOv8":0:0), %arg44: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_351"} loc("YOLOv8":0:0), %arg45: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_351_fork_clone1275"} loc("YOLOv8":0:0), %arg46: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_368"} loc("YOLOv8":0:0), %arg47: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_368_fork_clone1538"} loc("YOLOv8":0:0), %arg48: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_384"} loc("YOLOv8":0:0), %arg49: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_384_fork_clone1280"} loc("YOLOv8":0:0), %arg50: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_402"} loc("YOLOv8":0:0), %arg51: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_402_fork_clone951"} loc("YOLOv8":0:0), %arg52: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_418"} loc("YOLOv8":0:0), %arg53: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_418_fork_clone2190"} loc("YOLOv8":0:0), %arg54: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_434"} loc("YOLOv8":0:0), %arg55: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_434_fork_clone1899"} loc("YOLOv8":0:0), %arg56: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_452"} loc("YOLOv8":0:0), %arg57: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_452_fork_clone2195"} loc("YOLOv8":0:0), %arg58: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_468"} loc("YOLOv8":0:0), %arg59: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_468_fork_clone1904"} loc("YOLOv8":0:0), %arg60: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_485"} loc("YOLOv8":0:0), %arg61: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_485_fork_clone2200"} loc("YOLOv8":0:0), %arg62: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_501"} loc("YOLOv8":0:0), %arg63: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_501_fork_clone1909"} loc("YOLOv8":0:0), %arg64: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_518"} loc("YOLOv8":0:0), %arg65: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_518_fork_clone2205"} loc("YOLOv8":0:0), %arg66: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_534"} loc("YOLOv8":0:0), %arg67: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_534_fork_clone1914"} loc("YOLOv8":0:0), %arg68: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_551"} loc("YOLOv8":0:0), %arg69: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_551_fork_clone2210"} loc("YOLOv8":0:0), %arg70: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_567"} loc("YOLOv8":0:0), %arg71: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_567_fork_clone1919"} loc("YOLOv8":0:0), %arg72: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_584"} loc("YOLOv8":0:0), %arg73: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_584_fork_clone2215"} loc("YOLOv8":0:0), %arg74: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_600"} loc("YOLOv8":0:0), %arg75: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_600_fork_clone1924"} loc("YOLOv8":0:0), %arg76: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_617"} loc("YOLOv8":0:0), %arg77: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_617_fork_clone2220"} loc("YOLOv8":0:0), %arg78: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_633"} loc("YOLOv8":0:0), %arg79: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_633_fork_clone1929"} loc("YOLOv8":0:0), %arg80: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_651"} loc("YOLOv8":0:0), %arg81: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_651_fork_clone1596"} loc("YOLOv8":0:0), %arg82: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_667"} loc("YOLOv8":0:0), %arg83: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_667_fork_clone2090"} loc("YOLOv8":0:0), %arg84: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_683"} loc("YOLOv8":0:0), %arg85: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_683_fork_clone1810"} loc("YOLOv8":0:0), %arg86: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_701"} loc("YOLOv8":0:0), %arg87: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_701_fork_clone2095"} loc("YOLOv8":0:0), %arg88: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_717"} loc("YOLOv8":0:0), %arg89: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_717_fork_clone1815"} loc("YOLOv8":0:0), %arg90: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_734"} loc("YOLOv8":0:0), %arg91: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_734_fork_clone2100"} loc("YOLOv8":0:0), %arg92: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_750"} loc("YOLOv8":0:0), %arg93: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_750_fork_clone1820"} loc("YOLOv8":0:0), %arg94: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_767"} loc("YOLOv8":0:0), %arg95: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_767_fork_clone2105"} loc("YOLOv8":0:0), %arg96: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_783"} loc("YOLOv8":0:0), %arg97: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_783_fork_clone1825"} loc("YOLOv8":0:0), %arg98: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_801"} loc("YOLOv8":0:0), %arg99: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_801_fork_clone1501"} loc("YOLOv8":0:0), %arg100: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_817"} loc("YOLOv8":0:0), %arg101: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_817_fork_clone1245"} loc("YOLOv8":0:0), %arg102: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_837"} loc("YOLOv8":0:0), %arg103: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_837_fork_clone996"} loc("YOLOv8":0:0), %arg104: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_855"} loc("YOLOv8":0:0), %arg105: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_855_fork_clone1285"} loc("YOLOv8":0:0), %arg106: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_873"} loc("YOLOv8":0:0), %arg107: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_873_fork_clone1481"} loc("YOLOv8":0:0), %arg108: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_889"} loc("YOLOv8":0:0), %arg109: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_889_fork_clone1230"} loc("YOLOv8":0:0), %arg110: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_905"} loc("YOLOv8":0:0), %arg111: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_905_fork_clone1486"} loc("YOLOv8":0:0), %arg112: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_921"} loc("YOLOv8":0:0), %arg113: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_921_fork_clone1235"} loc("YOLOv8":0:0), %arg114: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_937"} loc("YOLOv8":0:0), %arg115: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_937_fork_clone1491"} loc("YOLOv8":0:0), %arg116: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_953"} loc("YOLOv8":0:0), %arg117: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_953_fork_clone1240"} loc("YOLOv8":0:0), %arg118: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_970"} loc("YOLOv8":0:0), %arg119: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_970_fork_clone974"} loc("YOLOv8":0:0), %arg120: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_988"} loc("YOLOv8":0:0), %arg121: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_988_fork_clone631"} loc("YOLOv8":0:0), %arg122: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1006"} loc("YOLOv8":0:0), %arg123: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1006_fork_clone833"} loc("YOLOv8":0:0), %arg124: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1022"} loc("YOLOv8":0:0), %arg125: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1022_fork_clone578"} loc("YOLOv8":0:0), %arg126: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1038"} loc("YOLOv8":0:0), %arg127: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1038_fork_clone838"} loc("YOLOv8":0:0), %arg128: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1054"} loc("YOLOv8":0:0), %arg129: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1054_fork_clone583"} loc("YOLOv8":0:0), %arg130: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1070"} loc("YOLOv8":0:0), %arg131: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1070_fork_clone843"} loc("YOLOv8":0:0), %arg132: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1086"} loc("YOLOv8":0:0), %arg133: tensor<1x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1086_fork_clone588"} loc("YOLOv8":0:0), %arg134: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1103"} loc("YOLOv8":0:0), %arg135: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1103_fork_clone388"} loc("YOLOv8":0:0), %arg136: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1119"} loc("YOLOv8":0:0), %arg137: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1119_fork_clone274"} loc("YOLOv8":0:0), %arg138: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1135"} loc("YOLOv8":0:0), %arg139: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1135_fork_clone142"} loc("YOLOv8":0:0), %arg140: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1155"} loc("YOLOv8":0:0), %arg141: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1155_fork_clone279"} loc("YOLOv8":0:0), %arg142: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1171"} loc("YOLOv8":0:0), %arg143: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1171_fork_clone147"} loc("YOLOv8":0:0), %arg144: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1193"} loc("YOLOv8":0:0), %arg145: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1193_fork_clone966"} loc("YOLOv8":0:0), %arg146: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1210"} loc("YOLOv8":0:0), %arg147: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1210_fork_clone651"} loc("YOLOv8":0:0), %arg148: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1228"} loc("YOLOv8":0:0), %arg149: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1228_fork_clone855"} loc("YOLOv8":0:0), %arg150: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1244"} loc("YOLOv8":0:0), %arg151: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1244_fork_clone597"} loc("YOLOv8":0:0), %arg152: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1260"} loc("YOLOv8":0:0), %arg153: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1260_fork_clone860"} loc("YOLOv8":0:0), %arg154: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1276"} loc("YOLOv8":0:0), %arg155: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1276_fork_clone602"} loc("YOLOv8":0:0), %arg156: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1292"} loc("YOLOv8":0:0), %arg157: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1292_fork_clone865"} loc("YOLOv8":0:0), %arg158: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1308"} loc("YOLOv8":0:0), %arg159: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1308_fork_clone607"} loc("YOLOv8":0:0), %arg160: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1325"} loc("YOLOv8":0:0), %arg161: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1325_fork_clone400"} loc("YOLOv8":0:0), %arg162: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1341"} loc("YOLOv8":0:0), %arg163: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1341_fork_clone286"} loc("YOLOv8":0:0), %arg164: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1357"} loc("YOLOv8":0:0), %arg165: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1357_fork_clone152"} loc("YOLOv8":0:0), %arg166: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1377"} loc("YOLOv8":0:0), %arg167: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1377_fork_clone291"} loc("YOLOv8":0:0), %arg168: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1393"} loc("YOLOv8":0:0), %arg169: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1393_fork_clone157"} loc("YOLOv8":0:0), %arg170: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1415"} loc("YOLOv8":0:0), %arg171: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1415_fork_clone989"} loc("YOLOv8":0:0), %arg172: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1432"} loc("YOLOv8":0:0), %arg173: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1432_fork_clone671"} loc("YOLOv8":0:0), %arg174: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1450"} loc("YOLOv8":0:0), %arg175: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1450_fork_clone877"} loc("YOLOv8":0:0), %arg176: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1466"} loc("YOLOv8":0:0), %arg177: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1466_fork_clone616"} loc("YOLOv8":0:0), %arg178: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1482"} loc("YOLOv8":0:0), %arg179: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1482_fork_clone882"} loc("YOLOv8":0:0), %arg180: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1498"} loc("YOLOv8":0:0), %arg181: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1498_fork_clone621"} loc("YOLOv8":0:0), %arg182: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1514"} loc("YOLOv8":0:0), %arg183: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1514_fork_clone887"} loc("YOLOv8":0:0), %arg184: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1530"} loc("YOLOv8":0:0), %arg185: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1530_fork_clone626"} loc("YOLOv8":0:0), %arg186: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1547"} loc("YOLOv8":0:0), %arg187: tensor<1x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1547_fork_clone412"} loc("YOLOv8":0:0), %arg188: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1563"} loc("YOLOv8":0:0), %arg189: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1563_fork_clone298"} loc("YOLOv8":0:0), %arg190: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1579"} loc("YOLOv8":0:0), %arg191: tensor<1x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1579_fork_clone162"} loc("YOLOv8":0:0), %arg192: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1599"} loc("YOLOv8":0:0), %arg193: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1599_fork_clone303"} loc("YOLOv8":0:0), %arg194: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1615"} loc("YOLOv8":0:0), %arg195: tensor<1x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_0_divide_1615_fork_clone167"} loc("YOLOv8":0:0), %arg196: tensor<1x16x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_1_conv2d_1639"} loc("YOLOv8":0:0), %arg197: tensor<1xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_1_divide_1646"} loc("YOLOv8":0:0), %arg198: tensor<1x8400xbf16> {ttcore.argument_type = #ttcore.argument_type<constant>, ttir.name = "input_1_multiply_1649"} loc("YOLOv8":0:0), %arg199: tensor<80x3x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.0.conv.weight"} loc("YOLOv8":0:0), %arg200: tensor<160x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.1.conv.weight"} loc("YOLOv8":0:0), %arg201: tensor<160x160x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv1.conv.weight"} loc("YOLOv8":0:0), %arg202: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.0.cv1.conv.weight"} loc("YOLOv8":0:0), %arg203: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.0.cv2.conv.weight"} loc("YOLOv8":0:0), %arg204: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.1.cv1.conv.weight"} loc("YOLOv8":0:0), %arg205: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.1.cv2.conv.weight"} loc("YOLOv8":0:0), %arg206: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.2.cv1.conv.weight"} loc("YOLOv8":0:0), %arg207: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.m.2.cv2.conv.weight"} loc("YOLOv8":0:0), %arg208: tensor<160x400x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.2.cv2.conv.weight"} loc("YOLOv8":0:0), %arg209: tensor<320x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.3.conv.weight"} loc("YOLOv8":0:0), %arg210: tensor<320x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv1.conv.weight"} loc("YOLOv8":0:0), %arg211: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.0.cv1.conv.weight"} loc("YOLOv8":0:0), %arg212: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.0.cv2.conv.weight"} loc("YOLOv8":0:0), %arg213: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.1.cv1.conv.weight"} loc("YOLOv8":0:0), %arg214: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.1.cv2.conv.weight"} loc("YOLOv8":0:0), %arg215: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.2.cv1.conv.weight"} loc("YOLOv8":0:0), %arg216: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.2.cv2.conv.weight"} loc("YOLOv8":0:0), %arg217: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.3.cv1.conv.weight"} loc("YOLOv8":0:0), %arg218: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.3.cv2.conv.weight"} loc("YOLOv8":0:0), %arg219: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.4.cv1.conv.weight"} loc("YOLOv8":0:0), %arg220: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.4.cv2.conv.weight"} loc("YOLOv8":0:0), %arg221: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.5.cv1.conv.weight"} loc("YOLOv8":0:0), %arg222: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.m.5.cv2.conv.weight"} loc("YOLOv8":0:0), %arg223: tensor<320x1280x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.4.cv2.conv.weight"} loc("YOLOv8":0:0), %arg224: tensor<640x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.5.conv.weight"} loc("YOLOv8":0:0), %arg225: tensor<640x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv1.conv.weight"} loc("YOLOv8":0:0), %arg226: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.0.cv1.conv.weight"} loc("YOLOv8":0:0), %arg227: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.0.cv2.conv.weight"} loc("YOLOv8":0:0), %arg228: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.1.cv1.conv.weight"} loc("YOLOv8":0:0), %arg229: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.1.cv2.conv.weight"} loc("YOLOv8":0:0), %arg230: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.2.cv1.conv.weight"} loc("YOLOv8":0:0), %arg231: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.2.cv2.conv.weight"} loc("YOLOv8":0:0), %arg232: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.3.cv1.conv.weight"} loc("YOLOv8":0:0), %arg233: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.3.cv2.conv.weight"} loc("YOLOv8":0:0), %arg234: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.4.cv1.conv.weight"} loc("YOLOv8":0:0), %arg235: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.4.cv2.conv.weight"} loc("YOLOv8":0:0), %arg236: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.5.cv1.conv.weight"} loc("YOLOv8":0:0), %arg237: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.m.5.cv2.conv.weight"} loc("YOLOv8":0:0), %arg238: tensor<640x2560x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.6.cv2.conv.weight"} loc("YOLOv8":0:0), %arg239: tensor<640x640x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.7.conv.weight"} loc("YOLOv8":0:0), %arg240: tensor<640x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv1.conv.weight"} loc("YOLOv8":0:0), %arg241: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.0.cv1.conv.weight"} loc("YOLOv8":0:0), %arg242: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.0.cv2.conv.weight"} loc("YOLOv8":0:0), %arg243: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.1.cv1.conv.weight"} loc("YOLOv8":0:0), %arg244: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.1.cv2.conv.weight"} loc("YOLOv8":0:0), %arg245: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.2.cv1.conv.weight"} loc("YOLOv8":0:0), %arg246: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.m.2.cv2.conv.weight"} loc("YOLOv8":0:0), %arg247: tensor<640x1600x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.8.cv2.conv.weight"} loc("YOLOv8":0:0), %arg248: tensor<320x640x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.9.cv1.conv.weight"} loc("YOLOv8":0:0), %arg249: tensor<640x1280x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.9.cv2.conv.weight"} loc("YOLOv8":0:0), %arg250: tensor<640x1280x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv1.conv.weight"} loc("YOLOv8":0:0), %arg251: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.m.0.cv1.conv.weight"} loc("YOLOv8":0:0), %arg252: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.m.0.cv2.conv.weight"} loc("YOLOv8":0:0), %arg253: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.m.1.cv1.conv.weight"} loc("YOLOv8":0:0), %arg254: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.m.1.cv2.conv.weight"} loc("YOLOv8":0:0), %arg255: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.m.2.cv1.conv.weight"} loc("YOLOv8":0:0), %arg256: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.m.2.cv2.conv.weight"} loc("YOLOv8":0:0), %arg257: tensor<640x1600x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.12.cv2.conv.weight"} loc("YOLOv8":0:0), %arg258: tensor<320x960x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv1.conv.weight"} loc("YOLOv8":0:0), %arg259: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.m.0.cv1.conv.weight"} loc("YOLOv8":0:0), %arg260: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.m.0.cv2.conv.weight"} loc("YOLOv8":0:0), %arg261: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.m.1.cv1.conv.weight"} loc("YOLOv8":0:0), %arg262: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.m.1.cv2.conv.weight"} loc("YOLOv8":0:0), %arg263: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.m.2.cv1.conv.weight"} loc("YOLOv8":0:0), %arg264: tensor<160x160x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.m.2.cv2.conv.weight"} loc("YOLOv8":0:0), %arg265: tensor<320x800x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.15.cv2.conv.weight"} loc("YOLOv8":0:0), %arg266: tensor<80x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.0.0.conv.weight"} loc("YOLOv8":0:0), %arg267: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.0.1.conv.weight"} loc("YOLOv8":0:0), %arg268: tensor<64x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.0.2.weight"} loc("YOLOv8":0:0), %arg269: tensor<1x1x1x64xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.0.2.bias"} loc("YOLOv8":0:0), %arg270: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.0.0.conv.weight"} loc("YOLOv8":0:0), %arg271: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.0.1.conv.weight"} loc("YOLOv8":0:0), %arg272: tensor<80x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.0.2.weight"} loc("YOLOv8":0:0), %arg273: tensor<1x1x1x80xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.0.2.bias"} loc("YOLOv8":0:0), %arg274: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.16.conv.weight"} loc("YOLOv8":0:0), %arg275: tensor<640x960x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv1.conv.weight"} loc("YOLOv8":0:0), %arg276: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.m.0.cv1.conv.weight"} loc("YOLOv8":0:0), %arg277: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.m.0.cv2.conv.weight"} loc("YOLOv8":0:0), %arg278: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.m.1.cv1.conv.weight"} loc("YOLOv8":0:0), %arg279: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.m.1.cv2.conv.weight"} loc("YOLOv8":0:0), %arg280: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.m.2.cv1.conv.weight"} loc("YOLOv8":0:0), %arg281: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.m.2.cv2.conv.weight"} loc("YOLOv8":0:0), %arg282: tensor<640x1600x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.18.cv2.conv.weight"} loc("YOLOv8":0:0), %arg283: tensor<80x640x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.1.0.conv.weight"} loc("YOLOv8":0:0), %arg284: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.1.1.conv.weight"} loc("YOLOv8":0:0), %arg285: tensor<64x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.1.2.weight"} loc("YOLOv8":0:0), %arg286: tensor<1x1x1x64xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.1.2.bias"} loc("YOLOv8":0:0), %arg287: tensor<320x640x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.1.0.conv.weight"} loc("YOLOv8":0:0), %arg288: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.1.1.conv.weight"} loc("YOLOv8":0:0), %arg289: tensor<80x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.1.2.weight"} loc("YOLOv8":0:0), %arg290: tensor<1x1x1x80xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.1.2.bias"} loc("YOLOv8":0:0), %arg291: tensor<640x640x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.19.conv.weight"} loc("YOLOv8":0:0), %arg292: tensor<640x1280x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv1.conv.weight"} loc("YOLOv8":0:0), %arg293: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.m.0.cv1.conv.weight"} loc("YOLOv8":0:0), %arg294: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.m.0.cv2.conv.weight"} loc("YOLOv8":0:0), %arg295: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.m.1.cv1.conv.weight"} loc("YOLOv8":0:0), %arg296: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.m.1.cv2.conv.weight"} loc("YOLOv8":0:0), %arg297: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.m.2.cv1.conv.weight"} loc("YOLOv8":0:0), %arg298: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.m.2.cv2.conv.weight"} loc("YOLOv8":0:0), %arg299: tensor<640x1600x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.21.cv2.conv.weight"} loc("YOLOv8":0:0), %arg300: tensor<80x640x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.2.0.conv.weight"} loc("YOLOv8":0:0), %arg301: tensor<80x80x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.2.1.conv.weight"} loc("YOLOv8":0:0), %arg302: tensor<64x80x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.2.2.weight"} loc("YOLOv8":0:0), %arg303: tensor<1x1x1x64xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv2.2.2.bias"} loc("YOLOv8":0:0), %arg304: tensor<320x640x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.2.0.conv.weight"} loc("YOLOv8":0:0), %arg305: tensor<320x320x3x3xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.2.1.conv.weight"} loc("YOLOv8":0:0), %arg306: tensor<80x320x1x1xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.2.2.weight"} loc("YOLOv8":0:0), %arg307: tensor<1x1x1x80xbf16> {ttcore.argument_type = #ttcore.argument_type<parameter>, ttir.name = "model.model.22.cv3.2.2.bias"} loc("YOLOv8":0:0)) -> (tensor<1x84x8400xbf16> {ttir.name = "YOLOv8.output_concatenate_1652"}, tensor<1x144x80x80xbf16> {ttir.name = "YOLOv8.output_concatenate_1188"}, tensor<1x144x40x40xbf16> {ttir.name = "YOLOv8.output_concatenate_1410"}, tensor<1x144x20x20xbf16> {ttir.name = "YOLOv8.output_concatenate_1632"}) {
    %0 = ttir.empty() : tensor<1x640x3x640xbf16> loc(#loc363)
    %1 = "ttir.transpose"(%arg0, %0) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x3x640x640xbf16>, tensor<1x640x3x640xbf16>) -> tensor<1x640x3x640xbf16> loc(#loc363)
    %2 = ttir.empty() : tensor<1x640x640x3xbf16> loc(#loc364)
    %3 = "ttir.transpose"(%1, %2) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x640x3x640xbf16>, tensor<1x640x640x3xbf16>) -> tensor<1x640x640x3xbf16> loc(#loc364)
    %4 = ttir.empty() : tensor<1x320x320x80xbf16> loc(#loc365)
    %5 = "ttir.conv2d"(%3, %arg199, %4) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x640x640x3xbf16>, tensor<80x3x3x3xbf16>, tensor<1x320x320x80xbf16>) -> tensor<1x320x320x80xbf16> loc(#loc365)
    %6 = ttir.empty() : tensor<1x320x80x320xbf16> loc(#loc366)
    %7 = "ttir.transpose"(%5, %6) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x320x320x80xbf16>, tensor<1x320x80x320xbf16>) -> tensor<1x320x80x320xbf16> loc(#loc366)
    %8 = ttir.empty() : tensor<1x80x320x320xbf16> loc(#loc367)
    %9 = "ttir.transpose"(%7, %8) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x320xbf16>, tensor<1x80x320x320xbf16>) -> tensor<1x80x320x320xbf16> loc(#loc367)
    %10 = ttir.empty() : tensor<1x80x320x320xbf16> loc(#loc2)
    %11 = "ttir.multiply"(%9, %arg2, %10) : (tensor<1x80x320x320xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x320x320xbf16>) -> tensor<1x80x320x320xbf16> loc(#loc2)
    %12 = ttir.empty() : tensor<1x80x320x320xbf16> loc(#loc3)
    %13 = "ttir.add"(%11, %arg3, %12) : (tensor<1x80x320x320xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x320x320xbf16>) -> tensor<1x80x320x320xbf16> loc(#loc3)
    %14 = ttir.empty() : tensor<1x80x320x320xbf16> loc(#loc368)
    %15 = "ttir.sigmoid"(%13, %14) : (tensor<1x80x320x320xbf16>, tensor<1x80x320x320xbf16>) -> tensor<1x80x320x320xbf16> loc(#loc368)
    %16 = ttir.empty() : tensor<1x80x320x320xbf16> loc(#loc369)
    %17 = "ttir.multiply"(%13, %15, %16) : (tensor<1x80x320x320xbf16>, tensor<1x80x320x320xbf16>, tensor<1x80x320x320xbf16>) -> tensor<1x80x320x320xbf16> loc(#loc369)
    %18 = ttir.empty() : tensor<1x320x80x320xbf16> loc(#loc370)
    %19 = "ttir.transpose"(%17, %18) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x320xbf16>, tensor<1x320x80x320xbf16>) -> tensor<1x320x80x320xbf16> loc(#loc370)
    %20 = ttir.empty() : tensor<1x320x320x80xbf16> loc(#loc371)
    %21 = "ttir.transpose"(%19, %20) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x320x80x320xbf16>, tensor<1x320x320x80xbf16>) -> tensor<1x320x320x80xbf16> loc(#loc371)
    %22 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc372)
    %23 = "ttir.conv2d"(%21, %arg200, %22) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x320x320x80xbf16>, tensor<160x80x3x3xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc372)
    %24 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc373)
    %25 = "ttir.transpose"(%23, %24) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc373)
    %26 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc374)
    %27 = "ttir.transpose"(%25, %26) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc374)
    %28 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc4)
    %29 = "ttir.multiply"(%27, %arg4, %28) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc4)
    %30 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc5)
    %31 = "ttir.add"(%29, %arg5, %30) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc5)
    %32 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc224)
    %33 = "ttir.sigmoid"(%31, %32) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc224)
    %34 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc225)
    %35 = "ttir.multiply"(%31, %33, %34) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc225)
    %36 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc551)
    %37 = "ttir.transpose"(%35, %36) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc551)
    %38 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc552)
    %39 = "ttir.transpose"(%37, %38) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc552)
    %40 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc553)
    %41 = "ttir.conv2d"(%39, %arg201, %40) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x160xbf16>, tensor<160x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc553)
    %42 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc554)
    %43 = "ttir.transpose"(%41, %42) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc554)
    %44 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc555)
    %45 = "ttir.transpose"(%43, %44) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc555)
    %46 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc6)
    %47 = "ttir.multiply"(%45, %arg6, %46) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc6)
    %48 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc7)
    %49 = "ttir.add"(%47, %arg7, %48) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc7)
    %50 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc376)
    %51 = "ttir.sigmoid"(%49, %50) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc376)
    %52 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc377)
    %53 = "ttir.multiply"(%49, %51, %52) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc377)
    %54 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc227)
    %55 = "ttir.index"(%53, %54) <{begin = 0 : i32, dim = 1 : i32, end = 80 : i32, step = 1 : i32}> : (tensor<1x160x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc227)
    %56 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc228)
    %57 = "ttir.index"(%53, %56) <{begin = 80 : i32, dim = 1 : i32, end = 160 : i32, step = 1 : i32}> : (tensor<1x160x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc228)
    %58 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc886)
    %59 = "ttir.transpose"(%57, %58) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc886)
    %60 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc887)
    %61 = "ttir.transpose"(%59, %60) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc887)
    %62 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc888)
    %63 = "ttir.conv2d"(%61, %arg202, %62) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc888)
    %64 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc889)
    %65 = "ttir.transpose"(%63, %64) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc889)
    %66 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc890)
    %67 = "ttir.transpose"(%65, %66) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc890)
    %68 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc8)
    %69 = "ttir.multiply"(%67, %arg8, %68) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc8)
    %70 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc9)
    %71 = "ttir.add"(%69, %arg9, %70) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc9)
    %72 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc557)
    %73 = "ttir.sigmoid"(%71, %72) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc557)
    %74 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc558)
    %75 = "ttir.multiply"(%71, %73, %74) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc558)
    %76 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc891)
    %77 = "ttir.transpose"(%75, %76) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc891)
    %78 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc892)
    %79 = "ttir.transpose"(%77, %78) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc892)
    %80 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc893)
    %81 = "ttir.conv2d"(%79, %arg203, %80) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc893)
    %82 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc894)
    %83 = "ttir.transpose"(%81, %82) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc894)
    %84 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc895)
    %85 = "ttir.transpose"(%83, %84) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc895)
    %86 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc10)
    %87 = "ttir.multiply"(%85, %arg10, %86) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc10)
    %88 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc11)
    %89 = "ttir.add"(%87, %arg11, %88) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc11)
    %90 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc560)
    %91 = "ttir.sigmoid"(%89, %90) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc560)
    %92 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc561)
    %93 = "ttir.multiply"(%89, %91, %92) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc561)
    %94 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc380)
    %95 = "ttir.add"(%57, %93, %94) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc380)
    %96 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc896)
    %97 = "ttir.transpose"(%95, %96) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc896)
    %98 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc897)
    %99 = "ttir.transpose"(%97, %98) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc897)
    %100 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc898)
    %101 = "ttir.conv2d"(%99, %arg204, %100) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc898)
    %102 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc899)
    %103 = "ttir.transpose"(%101, %102) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc899)
    %104 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc900)
    %105 = "ttir.transpose"(%103, %104) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc900)
    %106 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc12)
    %107 = "ttir.multiply"(%105, %arg12, %106) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc12)
    %108 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc13)
    %109 = "ttir.add"(%107, %arg13, %108) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc13)
    %110 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc563)
    %111 = "ttir.sigmoid"(%109, %110) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc563)
    %112 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc564)
    %113 = "ttir.multiply"(%109, %111, %112) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc564)
    %114 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc901)
    %115 = "ttir.transpose"(%113, %114) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc901)
    %116 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc902)
    %117 = "ttir.transpose"(%115, %116) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc902)
    %118 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc903)
    %119 = "ttir.conv2d"(%117, %arg205, %118) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc903)
    %120 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc904)
    %121 = "ttir.transpose"(%119, %120) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc904)
    %122 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc905)
    %123 = "ttir.transpose"(%121, %122) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc905)
    %124 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc14)
    %125 = "ttir.multiply"(%123, %arg14, %124) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc14)
    %126 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc15)
    %127 = "ttir.add"(%125, %arg15, %126) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc15)
    %128 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc566)
    %129 = "ttir.sigmoid"(%127, %128) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc566)
    %130 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc567)
    %131 = "ttir.multiply"(%127, %129, %130) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc567)
    %132 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc383)
    %133 = "ttir.add"(%95, %131, %132) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc383)
    %134 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc906)
    %135 = "ttir.transpose"(%133, %134) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc906)
    %136 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc907)
    %137 = "ttir.transpose"(%135, %136) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc907)
    %138 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc908)
    %139 = "ttir.conv2d"(%137, %arg206, %138) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc908)
    %140 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc909)
    %141 = "ttir.transpose"(%139, %140) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc909)
    %142 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc910)
    %143 = "ttir.transpose"(%141, %142) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc910)
    %144 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc16)
    %145 = "ttir.multiply"(%143, %arg16, %144) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc16)
    %146 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc17)
    %147 = "ttir.add"(%145, %arg17, %146) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc17)
    %148 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc569)
    %149 = "ttir.sigmoid"(%147, %148) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc569)
    %150 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc570)
    %151 = "ttir.multiply"(%147, %149, %150) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc570)
    %152 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc911)
    %153 = "ttir.transpose"(%151, %152) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc911)
    %154 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc912)
    %155 = "ttir.transpose"(%153, %154) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc912)
    %156 = ttir.empty() : tensor<1x160x160x80xbf16> loc(#loc913)
    %157 = "ttir.conv2d"(%155, %arg207, %156) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x160x160x80xbf16>) -> tensor<1x160x160x80xbf16> loc(#loc913)
    %158 = ttir.empty() : tensor<1x160x80x160xbf16> loc(#loc914)
    %159 = "ttir.transpose"(%157, %158) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x80xbf16>, tensor<1x160x80x160xbf16>) -> tensor<1x160x80x160xbf16> loc(#loc914)
    %160 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc915)
    %161 = "ttir.transpose"(%159, %160) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc915)
    %162 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc18)
    %163 = "ttir.multiply"(%161, %arg18, %162) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc18)
    %164 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc19)
    %165 = "ttir.add"(%163, %arg19, %164) : (tensor<1x80x160x160xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc19)
    %166 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc572)
    %167 = "ttir.sigmoid"(%165, %166) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc572)
    %168 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc573)
    %169 = "ttir.multiply"(%165, %167, %168) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc573)
    %170 = ttir.empty() : tensor<1x80x160x160xbf16> loc(#loc386)
    %171 = "ttir.add"(%133, %169, %170) : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>) -> tensor<1x80x160x160xbf16> loc(#loc386)
    %172 = ttir.empty() : tensor<1x400x160x160xbf16> loc(#loc232)
    %173 = "ttir.concat"(%55, %57, %95, %133, %171, %172) <{dim = -3 : si32}> : (tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x80x160x160xbf16>, tensor<1x400x160x160xbf16>) -> tensor<1x400x160x160xbf16> loc(#loc232)
    %174 = ttir.empty() : tensor<1x160x400x160xbf16> loc(#loc574)
    %175 = "ttir.transpose"(%173, %174) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x400x160x160xbf16>, tensor<1x160x400x160xbf16>) -> tensor<1x160x400x160xbf16> loc(#loc574)
    %176 = ttir.empty() : tensor<1x160x160x400xbf16> loc(#loc575)
    %177 = "ttir.transpose"(%175, %176) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x400x160xbf16>, tensor<1x160x160x400xbf16>) -> tensor<1x160x160x400xbf16> loc(#loc575)
    %178 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc576)
    %179 = "ttir.conv2d"(%177, %arg208, %178) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x160x160x400xbf16>, tensor<160x400x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc576)
    %180 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc577)
    %181 = "ttir.transpose"(%179, %180) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc577)
    %182 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc578)
    %183 = "ttir.transpose"(%181, %182) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc578)
    %184 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc20)
    %185 = "ttir.multiply"(%183, %arg20, %184) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc20)
    %186 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc21)
    %187 = "ttir.add"(%185, %arg21, %186) : (tensor<1x160x160x160xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc21)
    %188 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc388)
    %189 = "ttir.sigmoid"(%187, %188) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc388)
    %190 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc389)
    %191 = "ttir.multiply"(%187, %189, %190) : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc389)
    %192 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc390)
    %193 = "ttir.transpose"(%191, %192) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc390)
    %194 = ttir.empty() : tensor<1x160x160x160xbf16> loc(#loc391)
    %195 = "ttir.transpose"(%193, %194) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x160x160x160xbf16>, tensor<1x160x160x160xbf16>) -> tensor<1x160x160x160xbf16> loc(#loc391)
    %196 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc392)
    %197 = "ttir.conv2d"(%195, %arg209, %196) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x160x160x160xbf16>, tensor<320x160x3x3xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc392)
    %198 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc393)
    %199 = "ttir.transpose"(%197, %198) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc393)
    %200 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc394)
    %201 = "ttir.transpose"(%199, %200) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc394)
    %202 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc22)
    %203 = "ttir.multiply"(%201, %arg22, %202) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc22)
    %204 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc23)
    %205 = "ttir.add"(%203, %arg23, %204) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc23)
    %206 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc235)
    %207 = "ttir.sigmoid"(%205, %206) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc235)
    %208 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc236)
    %209 = "ttir.multiply"(%205, %207, %208) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc236)
    %210 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc579)
    %211 = "ttir.transpose"(%209, %210) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc579)
    %212 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc580)
    %213 = "ttir.transpose"(%211, %212) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc580)
    %214 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc581)
    %215 = "ttir.conv2d"(%213, %arg210, %214) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<320x320x1x1xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc581)
    %216 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc582)
    %217 = "ttir.transpose"(%215, %216) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc582)
    %218 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc583)
    %219 = "ttir.transpose"(%217, %218) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc583)
    %220 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc24)
    %221 = "ttir.multiply"(%219, %arg24, %220) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc24)
    %222 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc25)
    %223 = "ttir.add"(%221, %arg25, %222) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc25)
    %224 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc396)
    %225 = "ttir.sigmoid"(%223, %224) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc396)
    %226 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc397)
    %227 = "ttir.multiply"(%223, %225, %226) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc397)
    %228 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc238)
    %229 = "ttir.index"(%227, %228) <{begin = 0 : i32, dim = 1 : i32, end = 160 : i32, step = 1 : i32}> : (tensor<1x320x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc238)
    %230 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc239)
    %231 = "ttir.index"(%227, %230) <{begin = 160 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x320x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc239)
    %232 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc916)
    %233 = "ttir.transpose"(%231, %232) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc916)
    %234 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc917)
    %235 = "ttir.transpose"(%233, %234) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc917)
    %236 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc918)
    %237 = "ttir.conv2d"(%235, %arg211, %236) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc918)
    %238 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc919)
    %239 = "ttir.transpose"(%237, %238) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc919)
    %240 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc920)
    %241 = "ttir.transpose"(%239, %240) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc920)
    %242 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc26)
    %243 = "ttir.multiply"(%241, %arg26, %242) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc26)
    %244 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc27)
    %245 = "ttir.add"(%243, %arg27, %244) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc27)
    %246 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc585)
    %247 = "ttir.sigmoid"(%245, %246) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc585)
    %248 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc586)
    %249 = "ttir.multiply"(%245, %247, %248) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc586)
    %250 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc921)
    %251 = "ttir.transpose"(%249, %250) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc921)
    %252 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc922)
    %253 = "ttir.transpose"(%251, %252) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc922)
    %254 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc923)
    %255 = "ttir.conv2d"(%253, %arg212, %254) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc923)
    %256 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc924)
    %257 = "ttir.transpose"(%255, %256) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc924)
    %258 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc925)
    %259 = "ttir.transpose"(%257, %258) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc925)
    %260 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc28)
    %261 = "ttir.multiply"(%259, %arg28, %260) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc28)
    %262 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc29)
    %263 = "ttir.add"(%261, %arg29, %262) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc29)
    %264 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc588)
    %265 = "ttir.sigmoid"(%263, %264) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc588)
    %266 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc589)
    %267 = "ttir.multiply"(%263, %265, %266) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc589)
    %268 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc400)
    %269 = "ttir.add"(%231, %267, %268) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc400)
    %270 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc926)
    %271 = "ttir.transpose"(%269, %270) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc926)
    %272 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc927)
    %273 = "ttir.transpose"(%271, %272) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc927)
    %274 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc928)
    %275 = "ttir.conv2d"(%273, %arg213, %274) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc928)
    %276 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc929)
    %277 = "ttir.transpose"(%275, %276) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc929)
    %278 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc930)
    %279 = "ttir.transpose"(%277, %278) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc930)
    %280 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc30)
    %281 = "ttir.multiply"(%279, %arg30, %280) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc30)
    %282 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc31)
    %283 = "ttir.add"(%281, %arg31, %282) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc31)
    %284 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc591)
    %285 = "ttir.sigmoid"(%283, %284) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc591)
    %286 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc592)
    %287 = "ttir.multiply"(%283, %285, %286) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc592)
    %288 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc931)
    %289 = "ttir.transpose"(%287, %288) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc931)
    %290 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc932)
    %291 = "ttir.transpose"(%289, %290) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc932)
    %292 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc933)
    %293 = "ttir.conv2d"(%291, %arg214, %292) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc933)
    %294 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc934)
    %295 = "ttir.transpose"(%293, %294) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc934)
    %296 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc935)
    %297 = "ttir.transpose"(%295, %296) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc935)
    %298 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc32)
    %299 = "ttir.multiply"(%297, %arg32, %298) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc32)
    %300 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc33)
    %301 = "ttir.add"(%299, %arg33, %300) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc33)
    %302 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc594)
    %303 = "ttir.sigmoid"(%301, %302) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc594)
    %304 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc595)
    %305 = "ttir.multiply"(%301, %303, %304) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc595)
    %306 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc403)
    %307 = "ttir.add"(%269, %305, %306) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc403)
    %308 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc936)
    %309 = "ttir.transpose"(%307, %308) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc936)
    %310 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc937)
    %311 = "ttir.transpose"(%309, %310) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc937)
    %312 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc938)
    %313 = "ttir.conv2d"(%311, %arg215, %312) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc938)
    %314 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc939)
    %315 = "ttir.transpose"(%313, %314) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc939)
    %316 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc940)
    %317 = "ttir.transpose"(%315, %316) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc940)
    %318 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc34)
    %319 = "ttir.multiply"(%317, %arg34, %318) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc34)
    %320 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc35)
    %321 = "ttir.add"(%319, %arg35, %320) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc35)
    %322 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc597)
    %323 = "ttir.sigmoid"(%321, %322) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc597)
    %324 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc598)
    %325 = "ttir.multiply"(%321, %323, %324) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc598)
    %326 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc941)
    %327 = "ttir.transpose"(%325, %326) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc941)
    %328 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc942)
    %329 = "ttir.transpose"(%327, %328) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc942)
    %330 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc943)
    %331 = "ttir.conv2d"(%329, %arg216, %330) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc943)
    %332 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc944)
    %333 = "ttir.transpose"(%331, %332) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc944)
    %334 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc945)
    %335 = "ttir.transpose"(%333, %334) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc945)
    %336 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc36)
    %337 = "ttir.multiply"(%335, %arg36, %336) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc36)
    %338 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc37)
    %339 = "ttir.add"(%337, %arg37, %338) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc37)
    %340 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc600)
    %341 = "ttir.sigmoid"(%339, %340) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc600)
    %342 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc601)
    %343 = "ttir.multiply"(%339, %341, %342) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc601)
    %344 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc406)
    %345 = "ttir.add"(%307, %343, %344) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc406)
    %346 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc946)
    %347 = "ttir.transpose"(%345, %346) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc946)
    %348 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc947)
    %349 = "ttir.transpose"(%347, %348) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc947)
    %350 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc948)
    %351 = "ttir.conv2d"(%349, %arg217, %350) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc948)
    %352 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc949)
    %353 = "ttir.transpose"(%351, %352) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc949)
    %354 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc950)
    %355 = "ttir.transpose"(%353, %354) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc950)
    %356 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc38)
    %357 = "ttir.multiply"(%355, %arg38, %356) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc38)
    %358 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc39)
    %359 = "ttir.add"(%357, %arg39, %358) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc39)
    %360 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc603)
    %361 = "ttir.sigmoid"(%359, %360) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc603)
    %362 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc604)
    %363 = "ttir.multiply"(%359, %361, %362) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc604)
    %364 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc951)
    %365 = "ttir.transpose"(%363, %364) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc951)
    %366 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc952)
    %367 = "ttir.transpose"(%365, %366) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc952)
    %368 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc953)
    %369 = "ttir.conv2d"(%367, %arg218, %368) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc953)
    %370 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc954)
    %371 = "ttir.transpose"(%369, %370) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc954)
    %372 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc955)
    %373 = "ttir.transpose"(%371, %372) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc955)
    %374 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc40)
    %375 = "ttir.multiply"(%373, %arg40, %374) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc40)
    %376 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc41)
    %377 = "ttir.add"(%375, %arg41, %376) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc41)
    %378 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc606)
    %379 = "ttir.sigmoid"(%377, %378) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc606)
    %380 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc607)
    %381 = "ttir.multiply"(%377, %379, %380) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc607)
    %382 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc409)
    %383 = "ttir.add"(%345, %381, %382) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc409)
    %384 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc956)
    %385 = "ttir.transpose"(%383, %384) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc956)
    %386 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc957)
    %387 = "ttir.transpose"(%385, %386) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc957)
    %388 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc958)
    %389 = "ttir.conv2d"(%387, %arg219, %388) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc958)
    %390 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc959)
    %391 = "ttir.transpose"(%389, %390) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc959)
    %392 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc960)
    %393 = "ttir.transpose"(%391, %392) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc960)
    %394 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc42)
    %395 = "ttir.multiply"(%393, %arg42, %394) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc42)
    %396 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc43)
    %397 = "ttir.add"(%395, %arg43, %396) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc43)
    %398 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc609)
    %399 = "ttir.sigmoid"(%397, %398) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc609)
    %400 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc610)
    %401 = "ttir.multiply"(%397, %399, %400) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc610)
    %402 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc961)
    %403 = "ttir.transpose"(%401, %402) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc961)
    %404 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc962)
    %405 = "ttir.transpose"(%403, %404) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc962)
    %406 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc963)
    %407 = "ttir.conv2d"(%405, %arg220, %406) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc963)
    %408 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc964)
    %409 = "ttir.transpose"(%407, %408) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc964)
    %410 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc965)
    %411 = "ttir.transpose"(%409, %410) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc965)
    %412 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc44)
    %413 = "ttir.multiply"(%411, %arg44, %412) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc44)
    %414 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc45)
    %415 = "ttir.add"(%413, %arg45, %414) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc45)
    %416 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc612)
    %417 = "ttir.sigmoid"(%415, %416) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc612)
    %418 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc613)
    %419 = "ttir.multiply"(%415, %417, %418) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc613)
    %420 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc412)
    %421 = "ttir.add"(%383, %419, %420) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc412)
    %422 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc966)
    %423 = "ttir.transpose"(%421, %422) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc966)
    %424 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc967)
    %425 = "ttir.transpose"(%423, %424) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc967)
    %426 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc968)
    %427 = "ttir.conv2d"(%425, %arg221, %426) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc968)
    %428 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc969)
    %429 = "ttir.transpose"(%427, %428) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc969)
    %430 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc970)
    %431 = "ttir.transpose"(%429, %430) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc970)
    %432 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc46)
    %433 = "ttir.multiply"(%431, %arg46, %432) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc46)
    %434 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc47)
    %435 = "ttir.add"(%433, %arg47, %434) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc47)
    %436 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc615)
    %437 = "ttir.sigmoid"(%435, %436) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc615)
    %438 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc616)
    %439 = "ttir.multiply"(%435, %437, %438) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc616)
    %440 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc971)
    %441 = "ttir.transpose"(%439, %440) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc971)
    %442 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc972)
    %443 = "ttir.transpose"(%441, %442) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc972)
    %444 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc973)
    %445 = "ttir.conv2d"(%443, %arg222, %444) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc973)
    %446 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc974)
    %447 = "ttir.transpose"(%445, %446) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc974)
    %448 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc975)
    %449 = "ttir.transpose"(%447, %448) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc975)
    %450 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc48)
    %451 = "ttir.multiply"(%449, %arg48, %450) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc48)
    %452 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc49)
    %453 = "ttir.add"(%451, %arg49, %452) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc49)
    %454 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc618)
    %455 = "ttir.sigmoid"(%453, %454) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc618)
    %456 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc619)
    %457 = "ttir.multiply"(%453, %455, %456) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc619)
    %458 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc415)
    %459 = "ttir.add"(%421, %457, %458) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc415)
    %460 = ttir.empty() : tensor<1x1280x80x80xbf16> loc(#loc246)
    %461 = "ttir.concat"(%229, %231, %269, %307, %345, %383, %421, %459, %460) <{dim = -3 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x1280x80x80xbf16>) -> tensor<1x1280x80x80xbf16> loc(#loc246)
    %462 = ttir.empty() : tensor<1x80x1280x80xbf16> loc(#loc620)
    %463 = "ttir.transpose"(%461, %462) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1280x80x80xbf16>, tensor<1x80x1280x80xbf16>) -> tensor<1x80x1280x80xbf16> loc(#loc620)
    %464 = ttir.empty() : tensor<1x80x80x1280xbf16> loc(#loc621)
    %465 = "ttir.transpose"(%463, %464) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x1280x80xbf16>, tensor<1x80x80x1280xbf16>) -> tensor<1x80x80x1280xbf16> loc(#loc621)
    %466 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc622)
    %467 = "ttir.conv2d"(%465, %arg223, %466) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x1280xbf16>, tensor<320x1280x1x1xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc622)
    %468 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc623)
    %469 = "ttir.transpose"(%467, %468) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc623)
    %470 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc624)
    %471 = "ttir.transpose"(%469, %470) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc624)
    %472 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc50)
    %473 = "ttir.multiply"(%471, %arg50, %472) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc50)
    %474 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc51)
    %475 = "ttir.add"(%473, %arg51, %474) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc51)
    %476 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc417)
    %477 = "ttir.sigmoid"(%475, %476) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc417)
    %478 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc418)
    %479 = "ttir.multiply"(%475, %477, %478) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc418)
    %480 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc419)
    %481 = "ttir.transpose"(%479, %480) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc419)
    %482 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc420)
    %483 = "ttir.transpose"(%481, %482) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc420)
    %484 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc421)
    %485 = "ttir.conv2d"(%483, %arg224, %484) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<640x320x3x3xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc421)
    %486 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc422)
    %487 = "ttir.transpose"(%485, %486) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc422)
    %488 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc423)
    %489 = "ttir.transpose"(%487, %488) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc423)
    %490 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc52)
    %491 = "ttir.multiply"(%489, %arg52, %490) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc52)
    %492 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc53)
    %493 = "ttir.add"(%491, %arg53, %492) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc53)
    %494 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc249)
    %495 = "ttir.sigmoid"(%493, %494) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc249)
    %496 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc250)
    %497 = "ttir.multiply"(%493, %495, %496) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc250)
    %498 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc625)
    %499 = "ttir.transpose"(%497, %498) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc625)
    %500 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc626)
    %501 = "ttir.transpose"(%499, %500) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc626)
    %502 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc627)
    %503 = "ttir.conv2d"(%501, %arg225, %502) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x640x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc627)
    %504 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc628)
    %505 = "ttir.transpose"(%503, %504) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc628)
    %506 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc629)
    %507 = "ttir.transpose"(%505, %506) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc629)
    %508 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc54)
    %509 = "ttir.multiply"(%507, %arg54, %508) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc54)
    %510 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc55)
    %511 = "ttir.add"(%509, %arg55, %510) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc55)
    %512 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc425)
    %513 = "ttir.sigmoid"(%511, %512) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc425)
    %514 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc426)
    %515 = "ttir.multiply"(%511, %513, %514) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc426)
    %516 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc252)
    %517 = "ttir.index"(%515, %516) <{begin = 0 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc252)
    %518 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc253)
    %519 = "ttir.index"(%515, %518) <{begin = 320 : i32, dim = 1 : i32, end = 640 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc253)
    %520 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc976)
    %521 = "ttir.transpose"(%519, %520) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc976)
    %522 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc977)
    %523 = "ttir.transpose"(%521, %522) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc977)
    %524 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc978)
    %525 = "ttir.conv2d"(%523, %arg226, %524) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc978)
    %526 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc979)
    %527 = "ttir.transpose"(%525, %526) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc979)
    %528 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc980)
    %529 = "ttir.transpose"(%527, %528) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc980)
    %530 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc56)
    %531 = "ttir.multiply"(%529, %arg56, %530) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc56)
    %532 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc57)
    %533 = "ttir.add"(%531, %arg57, %532) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc57)
    %534 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc631)
    %535 = "ttir.sigmoid"(%533, %534) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc631)
    %536 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc632)
    %537 = "ttir.multiply"(%533, %535, %536) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc632)
    %538 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc981)
    %539 = "ttir.transpose"(%537, %538) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc981)
    %540 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc982)
    %541 = "ttir.transpose"(%539, %540) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc982)
    %542 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc983)
    %543 = "ttir.conv2d"(%541, %arg227, %542) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc983)
    %544 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc984)
    %545 = "ttir.transpose"(%543, %544) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc984)
    %546 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc985)
    %547 = "ttir.transpose"(%545, %546) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc985)
    %548 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc58)
    %549 = "ttir.multiply"(%547, %arg58, %548) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc58)
    %550 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc59)
    %551 = "ttir.add"(%549, %arg59, %550) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc59)
    %552 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc634)
    %553 = "ttir.sigmoid"(%551, %552) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc634)
    %554 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc635)
    %555 = "ttir.multiply"(%551, %553, %554) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc635)
    %556 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc429)
    %557 = "ttir.add"(%519, %555, %556) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc429)
    %558 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc986)
    %559 = "ttir.transpose"(%557, %558) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc986)
    %560 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc987)
    %561 = "ttir.transpose"(%559, %560) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc987)
    %562 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc988)
    %563 = "ttir.conv2d"(%561, %arg228, %562) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc988)
    %564 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc989)
    %565 = "ttir.transpose"(%563, %564) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc989)
    %566 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc990)
    %567 = "ttir.transpose"(%565, %566) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc990)
    %568 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc60)
    %569 = "ttir.multiply"(%567, %arg60, %568) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc60)
    %570 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc61)
    %571 = "ttir.add"(%569, %arg61, %570) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc61)
    %572 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc637)
    %573 = "ttir.sigmoid"(%571, %572) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc637)
    %574 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc638)
    %575 = "ttir.multiply"(%571, %573, %574) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc638)
    %576 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc991)
    %577 = "ttir.transpose"(%575, %576) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc991)
    %578 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc992)
    %579 = "ttir.transpose"(%577, %578) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc992)
    %580 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc993)
    %581 = "ttir.conv2d"(%579, %arg229, %580) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc993)
    %582 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc994)
    %583 = "ttir.transpose"(%581, %582) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc994)
    %584 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc995)
    %585 = "ttir.transpose"(%583, %584) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc995)
    %586 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc62)
    %587 = "ttir.multiply"(%585, %arg62, %586) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc62)
    %588 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc63)
    %589 = "ttir.add"(%587, %arg63, %588) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc63)
    %590 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc640)
    %591 = "ttir.sigmoid"(%589, %590) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc640)
    %592 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc641)
    %593 = "ttir.multiply"(%589, %591, %592) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc641)
    %594 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc432)
    %595 = "ttir.add"(%557, %593, %594) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc432)
    %596 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc996)
    %597 = "ttir.transpose"(%595, %596) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc996)
    %598 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc997)
    %599 = "ttir.transpose"(%597, %598) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc997)
    %600 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc998)
    %601 = "ttir.conv2d"(%599, %arg230, %600) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc998)
    %602 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc999)
    %603 = "ttir.transpose"(%601, %602) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc999)
    %604 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1000)
    %605 = "ttir.transpose"(%603, %604) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1000)
    %606 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc64)
    %607 = "ttir.multiply"(%605, %arg64, %606) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc64)
    %608 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc65)
    %609 = "ttir.add"(%607, %arg65, %608) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc65)
    %610 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc643)
    %611 = "ttir.sigmoid"(%609, %610) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc643)
    %612 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc644)
    %613 = "ttir.multiply"(%609, %611, %612) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc644)
    %614 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1001)
    %615 = "ttir.transpose"(%613, %614) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1001)
    %616 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1002)
    %617 = "ttir.transpose"(%615, %616) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1002)
    %618 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1003)
    %619 = "ttir.conv2d"(%617, %arg231, %618) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1003)
    %620 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1004)
    %621 = "ttir.transpose"(%619, %620) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1004)
    %622 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1005)
    %623 = "ttir.transpose"(%621, %622) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1005)
    %624 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc66)
    %625 = "ttir.multiply"(%623, %arg66, %624) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc66)
    %626 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc67)
    %627 = "ttir.add"(%625, %arg67, %626) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc67)
    %628 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc646)
    %629 = "ttir.sigmoid"(%627, %628) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc646)
    %630 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc647)
    %631 = "ttir.multiply"(%627, %629, %630) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc647)
    %632 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc435)
    %633 = "ttir.add"(%595, %631, %632) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc435)
    %634 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1006)
    %635 = "ttir.transpose"(%633, %634) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1006)
    %636 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1007)
    %637 = "ttir.transpose"(%635, %636) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1007)
    %638 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1008)
    %639 = "ttir.conv2d"(%637, %arg232, %638) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1008)
    %640 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1009)
    %641 = "ttir.transpose"(%639, %640) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1009)
    %642 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1010)
    %643 = "ttir.transpose"(%641, %642) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1010)
    %644 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc68)
    %645 = "ttir.multiply"(%643, %arg68, %644) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc68)
    %646 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc69)
    %647 = "ttir.add"(%645, %arg69, %646) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc69)
    %648 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc649)
    %649 = "ttir.sigmoid"(%647, %648) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc649)
    %650 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc650)
    %651 = "ttir.multiply"(%647, %649, %650) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc650)
    %652 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1011)
    %653 = "ttir.transpose"(%651, %652) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1011)
    %654 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1012)
    %655 = "ttir.transpose"(%653, %654) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1012)
    %656 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1013)
    %657 = "ttir.conv2d"(%655, %arg233, %656) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1013)
    %658 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1014)
    %659 = "ttir.transpose"(%657, %658) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1014)
    %660 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1015)
    %661 = "ttir.transpose"(%659, %660) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1015)
    %662 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc70)
    %663 = "ttir.multiply"(%661, %arg70, %662) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc70)
    %664 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc71)
    %665 = "ttir.add"(%663, %arg71, %664) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc71)
    %666 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc652)
    %667 = "ttir.sigmoid"(%665, %666) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc652)
    %668 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc653)
    %669 = "ttir.multiply"(%665, %667, %668) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc653)
    %670 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc438)
    %671 = "ttir.add"(%633, %669, %670) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc438)
    %672 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1016)
    %673 = "ttir.transpose"(%671, %672) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1016)
    %674 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1017)
    %675 = "ttir.transpose"(%673, %674) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1017)
    %676 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1018)
    %677 = "ttir.conv2d"(%675, %arg234, %676) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1018)
    %678 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1019)
    %679 = "ttir.transpose"(%677, %678) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1019)
    %680 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1020)
    %681 = "ttir.transpose"(%679, %680) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1020)
    %682 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc72)
    %683 = "ttir.multiply"(%681, %arg72, %682) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc72)
    %684 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc73)
    %685 = "ttir.add"(%683, %arg73, %684) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc73)
    %686 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc655)
    %687 = "ttir.sigmoid"(%685, %686) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc655)
    %688 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc656)
    %689 = "ttir.multiply"(%685, %687, %688) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc656)
    %690 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1021)
    %691 = "ttir.transpose"(%689, %690) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1021)
    %692 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1022)
    %693 = "ttir.transpose"(%691, %692) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1022)
    %694 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1023)
    %695 = "ttir.conv2d"(%693, %arg235, %694) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1023)
    %696 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1024)
    %697 = "ttir.transpose"(%695, %696) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1024)
    %698 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1025)
    %699 = "ttir.transpose"(%697, %698) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1025)
    %700 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc74)
    %701 = "ttir.multiply"(%699, %arg74, %700) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc74)
    %702 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc75)
    %703 = "ttir.add"(%701, %arg75, %702) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc75)
    %704 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc658)
    %705 = "ttir.sigmoid"(%703, %704) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc658)
    %706 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc659)
    %707 = "ttir.multiply"(%703, %705, %706) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc659)
    %708 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc441)
    %709 = "ttir.add"(%671, %707, %708) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc441)
    %710 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1026)
    %711 = "ttir.transpose"(%709, %710) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1026)
    %712 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1027)
    %713 = "ttir.transpose"(%711, %712) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1027)
    %714 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1028)
    %715 = "ttir.conv2d"(%713, %arg236, %714) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1028)
    %716 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1029)
    %717 = "ttir.transpose"(%715, %716) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1029)
    %718 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1030)
    %719 = "ttir.transpose"(%717, %718) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1030)
    %720 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc76)
    %721 = "ttir.multiply"(%719, %arg76, %720) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc76)
    %722 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc77)
    %723 = "ttir.add"(%721, %arg77, %722) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc77)
    %724 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc661)
    %725 = "ttir.sigmoid"(%723, %724) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc661)
    %726 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc662)
    %727 = "ttir.multiply"(%723, %725, %726) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc662)
    %728 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1031)
    %729 = "ttir.transpose"(%727, %728) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1031)
    %730 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1032)
    %731 = "ttir.transpose"(%729, %730) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1032)
    %732 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1033)
    %733 = "ttir.conv2d"(%731, %arg237, %732) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1033)
    %734 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1034)
    %735 = "ttir.transpose"(%733, %734) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1034)
    %736 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1035)
    %737 = "ttir.transpose"(%735, %736) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1035)
    %738 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc78)
    %739 = "ttir.multiply"(%737, %arg78, %738) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc78)
    %740 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc79)
    %741 = "ttir.add"(%739, %arg79, %740) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc79)
    %742 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc664)
    %743 = "ttir.sigmoid"(%741, %742) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc664)
    %744 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc665)
    %745 = "ttir.multiply"(%741, %743, %744) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc665)
    %746 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc444)
    %747 = "ttir.add"(%709, %745, %746) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc444)
    %748 = ttir.empty() : tensor<1x2560x40x40xbf16> loc(#loc260)
    %749 = "ttir.concat"(%517, %519, %557, %595, %633, %671, %709, %747, %748) <{dim = -3 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x2560x40x40xbf16>) -> tensor<1x2560x40x40xbf16> loc(#loc260)
    %750 = ttir.empty() : tensor<1x40x2560x40xbf16> loc(#loc666)
    %751 = "ttir.transpose"(%749, %750) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x2560x40x40xbf16>, tensor<1x40x2560x40xbf16>) -> tensor<1x40x2560x40xbf16> loc(#loc666)
    %752 = ttir.empty() : tensor<1x40x40x2560xbf16> loc(#loc667)
    %753 = "ttir.transpose"(%751, %752) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x2560x40xbf16>, tensor<1x40x40x2560xbf16>) -> tensor<1x40x40x2560xbf16> loc(#loc667)
    %754 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc668)
    %755 = "ttir.conv2d"(%753, %arg238, %754) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x2560xbf16>, tensor<640x2560x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc668)
    %756 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc669)
    %757 = "ttir.transpose"(%755, %756) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc669)
    %758 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc670)
    %759 = "ttir.transpose"(%757, %758) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc670)
    %760 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc80)
    %761 = "ttir.multiply"(%759, %arg80, %760) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc80)
    %762 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc81)
    %763 = "ttir.add"(%761, %arg81, %762) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc81)
    %764 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc446)
    %765 = "ttir.sigmoid"(%763, %764) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc446)
    %766 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc447)
    %767 = "ttir.multiply"(%763, %765, %766) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc447)
    %768 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc448)
    %769 = "ttir.transpose"(%767, %768) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc448)
    %770 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc449)
    %771 = "ttir.transpose"(%769, %770) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc449)
    %772 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc450)
    %773 = "ttir.conv2d"(%771, %arg239, %772) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x640x3x3xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc450)
    %774 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc451)
    %775 = "ttir.transpose"(%773, %774) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc451)
    %776 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc452)
    %777 = "ttir.transpose"(%775, %776) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc452)
    %778 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc82)
    %779 = "ttir.multiply"(%777, %arg82, %778) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc82)
    %780 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc83)
    %781 = "ttir.add"(%779, %arg83, %780) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc83)
    %782 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc263)
    %783 = "ttir.sigmoid"(%781, %782) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc263)
    %784 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc264)
    %785 = "ttir.multiply"(%781, %783, %784) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc264)
    %786 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc671)
    %787 = "ttir.transpose"(%785, %786) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc671)
    %788 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc672)
    %789 = "ttir.transpose"(%787, %788) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc672)
    %790 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc673)
    %791 = "ttir.conv2d"(%789, %arg240, %790) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<640x640x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc673)
    %792 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc674)
    %793 = "ttir.transpose"(%791, %792) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc674)
    %794 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc675)
    %795 = "ttir.transpose"(%793, %794) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc675)
    %796 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc84)
    %797 = "ttir.multiply"(%795, %arg84, %796) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc84)
    %798 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc85)
    %799 = "ttir.add"(%797, %arg85, %798) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc85)
    %800 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc454)
    %801 = "ttir.sigmoid"(%799, %800) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc454)
    %802 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc455)
    %803 = "ttir.multiply"(%799, %801, %802) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc455)
    %804 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc266)
    %805 = "ttir.index"(%803, %804) <{begin = 0 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x640x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc266)
    %806 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc267)
    %807 = "ttir.index"(%803, %806) <{begin = 320 : i32, dim = 1 : i32, end = 640 : i32, step = 1 : i32}> : (tensor<1x640x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc267)
    %808 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1036)
    %809 = "ttir.transpose"(%807, %808) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1036)
    %810 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1037)
    %811 = "ttir.transpose"(%809, %810) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1037)
    %812 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1038)
    %813 = "ttir.conv2d"(%811, %arg241, %812) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1038)
    %814 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1039)
    %815 = "ttir.transpose"(%813, %814) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1039)
    %816 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1040)
    %817 = "ttir.transpose"(%815, %816) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1040)
    %818 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc86)
    %819 = "ttir.multiply"(%817, %arg86, %818) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc86)
    %820 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc87)
    %821 = "ttir.add"(%819, %arg87, %820) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc87)
    %822 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc677)
    %823 = "ttir.sigmoid"(%821, %822) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc677)
    %824 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc678)
    %825 = "ttir.multiply"(%821, %823, %824) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc678)
    %826 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1041)
    %827 = "ttir.transpose"(%825, %826) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1041)
    %828 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1042)
    %829 = "ttir.transpose"(%827, %828) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1042)
    %830 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1043)
    %831 = "ttir.conv2d"(%829, %arg242, %830) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1043)
    %832 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1044)
    %833 = "ttir.transpose"(%831, %832) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1044)
    %834 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1045)
    %835 = "ttir.transpose"(%833, %834) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1045)
    %836 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc88)
    %837 = "ttir.multiply"(%835, %arg88, %836) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc88)
    %838 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc89)
    %839 = "ttir.add"(%837, %arg89, %838) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc89)
    %840 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc680)
    %841 = "ttir.sigmoid"(%839, %840) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc680)
    %842 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc681)
    %843 = "ttir.multiply"(%839, %841, %842) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc681)
    %844 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc458)
    %845 = "ttir.add"(%807, %843, %844) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc458)
    %846 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1046)
    %847 = "ttir.transpose"(%845, %846) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1046)
    %848 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1047)
    %849 = "ttir.transpose"(%847, %848) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1047)
    %850 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1048)
    %851 = "ttir.conv2d"(%849, %arg243, %850) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1048)
    %852 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1049)
    %853 = "ttir.transpose"(%851, %852) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1049)
    %854 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1050)
    %855 = "ttir.transpose"(%853, %854) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1050)
    %856 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc90)
    %857 = "ttir.multiply"(%855, %arg90, %856) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc90)
    %858 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc91)
    %859 = "ttir.add"(%857, %arg91, %858) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc91)
    %860 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc683)
    %861 = "ttir.sigmoid"(%859, %860) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc683)
    %862 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc684)
    %863 = "ttir.multiply"(%859, %861, %862) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc684)
    %864 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1051)
    %865 = "ttir.transpose"(%863, %864) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1051)
    %866 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1052)
    %867 = "ttir.transpose"(%865, %866) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1052)
    %868 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1053)
    %869 = "ttir.conv2d"(%867, %arg244, %868) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1053)
    %870 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1054)
    %871 = "ttir.transpose"(%869, %870) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1054)
    %872 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1055)
    %873 = "ttir.transpose"(%871, %872) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1055)
    %874 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc92)
    %875 = "ttir.multiply"(%873, %arg92, %874) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc92)
    %876 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc93)
    %877 = "ttir.add"(%875, %arg93, %876) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc93)
    %878 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc686)
    %879 = "ttir.sigmoid"(%877, %878) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc686)
    %880 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc687)
    %881 = "ttir.multiply"(%877, %879, %880) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc687)
    %882 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc461)
    %883 = "ttir.add"(%845, %881, %882) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc461)
    %884 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1056)
    %885 = "ttir.transpose"(%883, %884) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1056)
    %886 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1057)
    %887 = "ttir.transpose"(%885, %886) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1057)
    %888 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1058)
    %889 = "ttir.conv2d"(%887, %arg245, %888) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1058)
    %890 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1059)
    %891 = "ttir.transpose"(%889, %890) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1059)
    %892 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1060)
    %893 = "ttir.transpose"(%891, %892) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1060)
    %894 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc94)
    %895 = "ttir.multiply"(%893, %arg94, %894) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc94)
    %896 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc95)
    %897 = "ttir.add"(%895, %arg95, %896) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc95)
    %898 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc689)
    %899 = "ttir.sigmoid"(%897, %898) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc689)
    %900 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc690)
    %901 = "ttir.multiply"(%897, %899, %900) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc690)
    %902 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1061)
    %903 = "ttir.transpose"(%901, %902) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1061)
    %904 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1062)
    %905 = "ttir.transpose"(%903, %904) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1062)
    %906 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1063)
    %907 = "ttir.conv2d"(%905, %arg246, %906) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1063)
    %908 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1064)
    %909 = "ttir.transpose"(%907, %908) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1064)
    %910 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1065)
    %911 = "ttir.transpose"(%909, %910) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1065)
    %912 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc96)
    %913 = "ttir.multiply"(%911, %arg96, %912) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc96)
    %914 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc97)
    %915 = "ttir.add"(%913, %arg97, %914) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc97)
    %916 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc692)
    %917 = "ttir.sigmoid"(%915, %916) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc692)
    %918 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc693)
    %919 = "ttir.multiply"(%915, %917, %918) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc693)
    %920 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc464)
    %921 = "ttir.add"(%883, %919, %920) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc464)
    %922 = ttir.empty() : tensor<1x1600x20x20xbf16> loc(#loc271)
    %923 = "ttir.concat"(%805, %807, %845, %883, %921, %922) <{dim = -3 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x1600x20x20xbf16>) -> tensor<1x1600x20x20xbf16> loc(#loc271)
    %924 = ttir.empty() : tensor<1x20x1600x20xbf16> loc(#loc694)
    %925 = "ttir.transpose"(%923, %924) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1600x20x20xbf16>, tensor<1x20x1600x20xbf16>) -> tensor<1x20x1600x20xbf16> loc(#loc694)
    %926 = ttir.empty() : tensor<1x20x20x1600xbf16> loc(#loc695)
    %927 = "ttir.transpose"(%925, %926) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1600x20xbf16>, tensor<1x20x20x1600xbf16>) -> tensor<1x20x20x1600xbf16> loc(#loc695)
    %928 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc696)
    %929 = "ttir.conv2d"(%927, %arg247, %928) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1600xbf16>, tensor<640x1600x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc696)
    %930 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc697)
    %931 = "ttir.transpose"(%929, %930) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc697)
    %932 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc698)
    %933 = "ttir.transpose"(%931, %932) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc698)
    %934 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc98)
    %935 = "ttir.multiply"(%933, %arg98, %934) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc98)
    %936 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc99)
    %937 = "ttir.add"(%935, %arg99, %936) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc99)
    %938 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc466)
    %939 = "ttir.sigmoid"(%937, %938) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc466)
    %940 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc467)
    %941 = "ttir.multiply"(%937, %939, %940) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc467)
    %942 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc699)
    %943 = "ttir.transpose"(%941, %942) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc699)
    %944 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc700)
    %945 = "ttir.transpose"(%943, %944) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc700)
    %946 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc701)
    %947 = "ttir.conv2d"(%945, %arg248, %946) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<320x640x1x1xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc701)
    %948 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc702)
    %949 = "ttir.transpose"(%947, %948) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc702)
    %950 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc703)
    %951 = "ttir.transpose"(%949, %950) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc703)
    %952 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc100)
    %953 = "ttir.multiply"(%951, %arg100, %952) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc100)
    %954 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc101)
    %955 = "ttir.add"(%953, %arg101, %954) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc101)
    %956 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc469)
    %957 = "ttir.sigmoid"(%955, %956) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc469)
    %958 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc470)
    %959 = "ttir.multiply"(%955, %957, %958) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc470)
    %960 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc471)
    %961 = "ttir.transpose"(%959, %960) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc471)
    %962 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc472)
    %963 = "ttir.transpose"(%961, %962) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc472)
    %964 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc473)
    %965 = "ttir.max_pool2d"(%963, %964) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 5 : si32, kernel_width = 5 : si32, padding_bottom = 2 : si32, padding_left = 2 : si32, padding_right = 2 : si32, padding_top = 2 : si32, stride_height = 1 : si32, stride_width = 1 : si32}> {channel_last = true} : (tensor<1x20x20x320xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc473)
    %966 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc474)
    %967 = "ttir.transpose"(%965, %966) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc474)
    %968 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc475)
    %969 = "ttir.transpose"(%967, %968) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc475)
    %970 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc275)
    %971 = "ttir.transpose"(%969, %970) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc275)
    %972 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc276)
    %973 = "ttir.transpose"(%971, %972) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc276)
    %974 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc277)
    %975 = "ttir.max_pool2d"(%973, %974) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 5 : si32, kernel_width = 5 : si32, padding_bottom = 2 : si32, padding_left = 2 : si32, padding_right = 2 : si32, padding_top = 2 : si32, stride_height = 1 : si32, stride_width = 1 : si32}> {channel_last = true} : (tensor<1x20x20x320xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc277)
    %976 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc278)
    %977 = "ttir.transpose"(%975, %976) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc278)
    %978 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc279)
    %979 = "ttir.transpose"(%977, %978) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc279)
    %980 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc280)
    %981 = "ttir.transpose"(%979, %980) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc280)
    %982 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc281)
    %983 = "ttir.transpose"(%981, %982) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc281)
    %984 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc282)
    %985 = "ttir.max_pool2d"(%983, %984) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 5 : si32, kernel_width = 5 : si32, padding_bottom = 2 : si32, padding_left = 2 : si32, padding_right = 2 : si32, padding_top = 2 : si32, stride_height = 1 : si32, stride_width = 1 : si32}> {channel_last = true} : (tensor<1x20x20x320xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc282)
    %986 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc283)
    %987 = "ttir.transpose"(%985, %986) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc283)
    %988 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc284)
    %989 = "ttir.transpose"(%987, %988) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc284)
    %990 = ttir.empty() : tensor<1x1280x20x20xbf16> loc(#loc285)
    %991 = "ttir.concat"(%959, %969, %979, %989, %990) <{dim = -3 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x1280x20x20xbf16>) -> tensor<1x1280x20x20xbf16> loc(#loc285)
    %992 = ttir.empty() : tensor<1x20x1280x20xbf16> loc(#loc704)
    %993 = "ttir.transpose"(%991, %992) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1280x20x20xbf16>, tensor<1x20x1280x20xbf16>) -> tensor<1x20x1280x20xbf16> loc(#loc704)
    %994 = ttir.empty() : tensor<1x20x20x1280xbf16> loc(#loc705)
    %995 = "ttir.transpose"(%993, %994) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1280x20xbf16>, tensor<1x20x20x1280xbf16>) -> tensor<1x20x20x1280xbf16> loc(#loc705)
    %996 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc706)
    %997 = "ttir.conv2d"(%995, %arg249, %996) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1280xbf16>, tensor<640x1280x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc706)
    %998 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc707)
    %999 = "ttir.transpose"(%997, %998) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc707)
    %1000 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc708)
    %1001 = "ttir.transpose"(%999, %1000) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc708)
    %1002 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc102)
    %1003 = "ttir.multiply"(%1001, %arg102, %1002) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc102)
    %1004 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc103)
    %1005 = "ttir.add"(%1003, %arg103, %1004) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc103)
    %1006 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc477)
    %1007 = "ttir.sigmoid"(%1005, %1006) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc477)
    %1008 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc478)
    %1009 = "ttir.multiply"(%1005, %1007, %1008) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc478)
    %1010 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc287)
    %1011 = "ttir.transpose"(%1009, %1010) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc287)
    %1012 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc288)
    %1013 = "ttir.transpose"(%1011, %1012) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc288)
    %1014 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc289)
    %1015 = "ttir.upsample2d"(%1013, %1014) <{mode = "nearest", scale_factor = 2 : si32}> {channel_last = true} : (tensor<1x20x20x640xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc289)
    %1016 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc290)
    %1017 = "ttir.transpose"(%1015, %1016) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc290)
    %1018 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc291)
    %1019 = "ttir.transpose"(%1017, %1018) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc291)
    %1020 = ttir.empty() : tensor<1x1280x40x40xbf16> loc(#loc292)
    %1021 = "ttir.concat"(%1019, %767, %1020) <{dim = -3 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x1280x40x40xbf16>) -> tensor<1x1280x40x40xbf16> loc(#loc292)
    %1022 = ttir.empty() : tensor<1x40x1280x40xbf16> loc(#loc709)
    %1023 = "ttir.transpose"(%1021, %1022) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1280x40x40xbf16>, tensor<1x40x1280x40xbf16>) -> tensor<1x40x1280x40xbf16> loc(#loc709)
    %1024 = ttir.empty() : tensor<1x40x40x1280xbf16> loc(#loc710)
    %1025 = "ttir.transpose"(%1023, %1024) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x1280x40xbf16>, tensor<1x40x40x1280xbf16>) -> tensor<1x40x40x1280xbf16> loc(#loc710)
    %1026 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc711)
    %1027 = "ttir.conv2d"(%1025, %arg250, %1026) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x1280xbf16>, tensor<640x1280x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc711)
    %1028 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc712)
    %1029 = "ttir.transpose"(%1027, %1028) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc712)
    %1030 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc713)
    %1031 = "ttir.transpose"(%1029, %1030) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc713)
    %1032 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc104)
    %1033 = "ttir.multiply"(%1031, %arg104, %1032) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc104)
    %1034 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc105)
    %1035 = "ttir.add"(%1033, %arg105, %1034) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc105)
    %1036 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc480)
    %1037 = "ttir.sigmoid"(%1035, %1036) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc480)
    %1038 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc481)
    %1039 = "ttir.multiply"(%1035, %1037, %1038) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc481)
    %1040 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc294)
    %1041 = "ttir.index"(%1039, %1040) <{begin = 0 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc294)
    %1042 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc295)
    %1043 = "ttir.index"(%1039, %1042) <{begin = 320 : i32, dim = 1 : i32, end = 640 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc295)
    %1044 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1066)
    %1045 = "ttir.transpose"(%1043, %1044) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1066)
    %1046 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1067)
    %1047 = "ttir.transpose"(%1045, %1046) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1067)
    %1048 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1068)
    %1049 = "ttir.conv2d"(%1047, %arg251, %1048) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1068)
    %1050 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1069)
    %1051 = "ttir.transpose"(%1049, %1050) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1069)
    %1052 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1070)
    %1053 = "ttir.transpose"(%1051, %1052) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1070)
    %1054 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc106)
    %1055 = "ttir.multiply"(%1053, %arg106, %1054) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc106)
    %1056 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc107)
    %1057 = "ttir.add"(%1055, %arg107, %1056) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc107)
    %1058 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc715)
    %1059 = "ttir.sigmoid"(%1057, %1058) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc715)
    %1060 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc716)
    %1061 = "ttir.multiply"(%1057, %1059, %1060) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc716)
    %1062 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1071)
    %1063 = "ttir.transpose"(%1061, %1062) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1071)
    %1064 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1072)
    %1065 = "ttir.transpose"(%1063, %1064) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1072)
    %1066 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1073)
    %1067 = "ttir.conv2d"(%1065, %arg252, %1066) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1073)
    %1068 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1074)
    %1069 = "ttir.transpose"(%1067, %1068) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1074)
    %1070 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1075)
    %1071 = "ttir.transpose"(%1069, %1070) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1075)
    %1072 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc108)
    %1073 = "ttir.multiply"(%1071, %arg108, %1072) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc108)
    %1074 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc109)
    %1075 = "ttir.add"(%1073, %arg109, %1074) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc109)
    %1076 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc718)
    %1077 = "ttir.sigmoid"(%1075, %1076) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc718)
    %1078 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc719)
    %1079 = "ttir.multiply"(%1075, %1077, %1078) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc719)
    %1080 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1076)
    %1081 = "ttir.transpose"(%1079, %1080) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1076)
    %1082 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1077)
    %1083 = "ttir.transpose"(%1081, %1082) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1077)
    %1084 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1078)
    %1085 = "ttir.conv2d"(%1083, %arg253, %1084) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1078)
    %1086 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1079)
    %1087 = "ttir.transpose"(%1085, %1086) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1079)
    %1088 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1080)
    %1089 = "ttir.transpose"(%1087, %1088) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1080)
    %1090 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc110)
    %1091 = "ttir.multiply"(%1089, %arg110, %1090) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc110)
    %1092 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc111)
    %1093 = "ttir.add"(%1091, %arg111, %1092) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc111)
    %1094 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc721)
    %1095 = "ttir.sigmoid"(%1093, %1094) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc721)
    %1096 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc722)
    %1097 = "ttir.multiply"(%1093, %1095, %1096) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc722)
    %1098 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1081)
    %1099 = "ttir.transpose"(%1097, %1098) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1081)
    %1100 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1082)
    %1101 = "ttir.transpose"(%1099, %1100) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1082)
    %1102 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1083)
    %1103 = "ttir.conv2d"(%1101, %arg254, %1102) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1083)
    %1104 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1084)
    %1105 = "ttir.transpose"(%1103, %1104) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1084)
    %1106 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1085)
    %1107 = "ttir.transpose"(%1105, %1106) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1085)
    %1108 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc112)
    %1109 = "ttir.multiply"(%1107, %arg112, %1108) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc112)
    %1110 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc113)
    %1111 = "ttir.add"(%1109, %arg113, %1110) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc113)
    %1112 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc724)
    %1113 = "ttir.sigmoid"(%1111, %1112) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc724)
    %1114 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc725)
    %1115 = "ttir.multiply"(%1111, %1113, %1114) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc725)
    %1116 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1086)
    %1117 = "ttir.transpose"(%1115, %1116) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1086)
    %1118 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1087)
    %1119 = "ttir.transpose"(%1117, %1118) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1087)
    %1120 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1088)
    %1121 = "ttir.conv2d"(%1119, %arg255, %1120) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1088)
    %1122 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1089)
    %1123 = "ttir.transpose"(%1121, %1122) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1089)
    %1124 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1090)
    %1125 = "ttir.transpose"(%1123, %1124) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1090)
    %1126 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc114)
    %1127 = "ttir.multiply"(%1125, %arg114, %1126) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc114)
    %1128 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc115)
    %1129 = "ttir.add"(%1127, %arg115, %1128) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc115)
    %1130 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc727)
    %1131 = "ttir.sigmoid"(%1129, %1130) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc727)
    %1132 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc728)
    %1133 = "ttir.multiply"(%1129, %1131, %1132) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc728)
    %1134 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1091)
    %1135 = "ttir.transpose"(%1133, %1134) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1091)
    %1136 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1092)
    %1137 = "ttir.transpose"(%1135, %1136) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1092)
    %1138 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1093)
    %1139 = "ttir.conv2d"(%1137, %arg256, %1138) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1093)
    %1140 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1094)
    %1141 = "ttir.transpose"(%1139, %1140) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1094)
    %1142 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1095)
    %1143 = "ttir.transpose"(%1141, %1142) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1095)
    %1144 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc116)
    %1145 = "ttir.multiply"(%1143, %arg116, %1144) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc116)
    %1146 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc117)
    %1147 = "ttir.add"(%1145, %arg117, %1146) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc117)
    %1148 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc730)
    %1149 = "ttir.sigmoid"(%1147, %1148) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc730)
    %1150 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc731)
    %1151 = "ttir.multiply"(%1147, %1149, %1150) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc731)
    %1152 = ttir.empty() : tensor<1x1600x40x40xbf16> loc(#loc299)
    %1153 = "ttir.concat"(%1041, %1043, %1079, %1115, %1151, %1152) <{dim = -3 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x1600x40x40xbf16>) -> tensor<1x1600x40x40xbf16> loc(#loc299)
    %1154 = ttir.empty() : tensor<1x40x1600x40xbf16> loc(#loc732)
    %1155 = "ttir.transpose"(%1153, %1154) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1600x40x40xbf16>, tensor<1x40x1600x40xbf16>) -> tensor<1x40x1600x40xbf16> loc(#loc732)
    %1156 = ttir.empty() : tensor<1x40x40x1600xbf16> loc(#loc733)
    %1157 = "ttir.transpose"(%1155, %1156) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x1600x40xbf16>, tensor<1x40x40x1600xbf16>) -> tensor<1x40x40x1600xbf16> loc(#loc733)
    %1158 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc734)
    %1159 = "ttir.conv2d"(%1157, %arg257, %1158) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x1600xbf16>, tensor<640x1600x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc734)
    %1160 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc735)
    %1161 = "ttir.transpose"(%1159, %1160) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc735)
    %1162 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc736)
    %1163 = "ttir.transpose"(%1161, %1162) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc736)
    %1164 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc118)
    %1165 = "ttir.multiply"(%1163, %arg118, %1164) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc118)
    %1166 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc119)
    %1167 = "ttir.add"(%1165, %arg119, %1166) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc119)
    %1168 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc489)
    %1169 = "ttir.sigmoid"(%1167, %1168) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc489)
    %1170 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc490)
    %1171 = "ttir.multiply"(%1167, %1169, %1170) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc490)
    %1172 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc301)
    %1173 = "ttir.transpose"(%1171, %1172) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc301)
    %1174 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc302)
    %1175 = "ttir.transpose"(%1173, %1174) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc302)
    %1176 = ttir.empty() : tensor<1x80x80x640xbf16> loc(#loc303)
    %1177 = "ttir.upsample2d"(%1175, %1176) <{mode = "nearest", scale_factor = 2 : si32}> {channel_last = true} : (tensor<1x40x40x640xbf16>, tensor<1x80x80x640xbf16>) -> tensor<1x80x80x640xbf16> loc(#loc303)
    %1178 = ttir.empty() : tensor<1x80x640x80xbf16> loc(#loc304)
    %1179 = "ttir.transpose"(%1177, %1178) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x640xbf16>, tensor<1x80x640x80xbf16>) -> tensor<1x80x640x80xbf16> loc(#loc304)
    %1180 = ttir.empty() : tensor<1x640x80x80xbf16> loc(#loc305)
    %1181 = "ttir.transpose"(%1179, %1180) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x640x80xbf16>, tensor<1x640x80x80xbf16>) -> tensor<1x640x80x80xbf16> loc(#loc305)
    %1182 = ttir.empty() : tensor<1x960x80x80xbf16> loc(#loc306)
    %1183 = "ttir.concat"(%1181, %479, %1182) <{dim = -3 : si32}> : (tensor<1x640x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x960x80x80xbf16>) -> tensor<1x960x80x80xbf16> loc(#loc306)
    %1184 = ttir.empty() : tensor<1x80x960x80xbf16> loc(#loc737)
    %1185 = "ttir.transpose"(%1183, %1184) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x960x80x80xbf16>, tensor<1x80x960x80xbf16>) -> tensor<1x80x960x80xbf16> loc(#loc737)
    %1186 = ttir.empty() : tensor<1x80x80x960xbf16> loc(#loc738)
    %1187 = "ttir.transpose"(%1185, %1186) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x960x80xbf16>, tensor<1x80x80x960xbf16>) -> tensor<1x80x80x960xbf16> loc(#loc738)
    %1188 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc739)
    %1189 = "ttir.conv2d"(%1187, %arg258, %1188) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x960xbf16>, tensor<320x960x1x1xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc739)
    %1190 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc740)
    %1191 = "ttir.transpose"(%1189, %1190) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc740)
    %1192 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc741)
    %1193 = "ttir.transpose"(%1191, %1192) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc741)
    %1194 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc120)
    %1195 = "ttir.multiply"(%1193, %arg120, %1194) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc120)
    %1196 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc121)
    %1197 = "ttir.add"(%1195, %arg121, %1196) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc121)
    %1198 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc492)
    %1199 = "ttir.sigmoid"(%1197, %1198) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc492)
    %1200 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc493)
    %1201 = "ttir.multiply"(%1197, %1199, %1200) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc493)
    %1202 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc308)
    %1203 = "ttir.index"(%1201, %1202) <{begin = 0 : i32, dim = 1 : i32, end = 160 : i32, step = 1 : i32}> : (tensor<1x320x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc308)
    %1204 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc309)
    %1205 = "ttir.index"(%1201, %1204) <{begin = 160 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x320x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc309)
    %1206 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1096)
    %1207 = "ttir.transpose"(%1205, %1206) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1096)
    %1208 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1097)
    %1209 = "ttir.transpose"(%1207, %1208) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1097)
    %1210 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1098)
    %1211 = "ttir.conv2d"(%1209, %arg259, %1210) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1098)
    %1212 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1099)
    %1213 = "ttir.transpose"(%1211, %1212) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1099)
    %1214 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1100)
    %1215 = "ttir.transpose"(%1213, %1214) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1100)
    %1216 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc122)
    %1217 = "ttir.multiply"(%1215, %arg122, %1216) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc122)
    %1218 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc123)
    %1219 = "ttir.add"(%1217, %arg123, %1218) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc123)
    %1220 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc743)
    %1221 = "ttir.sigmoid"(%1219, %1220) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc743)
    %1222 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc744)
    %1223 = "ttir.multiply"(%1219, %1221, %1222) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc744)
    %1224 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1101)
    %1225 = "ttir.transpose"(%1223, %1224) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1101)
    %1226 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1102)
    %1227 = "ttir.transpose"(%1225, %1226) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1102)
    %1228 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1103)
    %1229 = "ttir.conv2d"(%1227, %arg260, %1228) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1103)
    %1230 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1104)
    %1231 = "ttir.transpose"(%1229, %1230) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1104)
    %1232 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1105)
    %1233 = "ttir.transpose"(%1231, %1232) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1105)
    %1234 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc124)
    %1235 = "ttir.multiply"(%1233, %arg124, %1234) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc124)
    %1236 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc125)
    %1237 = "ttir.add"(%1235, %arg125, %1236) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc125)
    %1238 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc746)
    %1239 = "ttir.sigmoid"(%1237, %1238) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc746)
    %1240 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc747)
    %1241 = "ttir.multiply"(%1237, %1239, %1240) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc747)
    %1242 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1106)
    %1243 = "ttir.transpose"(%1241, %1242) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1106)
    %1244 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1107)
    %1245 = "ttir.transpose"(%1243, %1244) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1107)
    %1246 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1108)
    %1247 = "ttir.conv2d"(%1245, %arg261, %1246) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1108)
    %1248 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1109)
    %1249 = "ttir.transpose"(%1247, %1248) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1109)
    %1250 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1110)
    %1251 = "ttir.transpose"(%1249, %1250) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1110)
    %1252 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc126)
    %1253 = "ttir.multiply"(%1251, %arg126, %1252) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc126)
    %1254 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc127)
    %1255 = "ttir.add"(%1253, %arg127, %1254) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc127)
    %1256 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc749)
    %1257 = "ttir.sigmoid"(%1255, %1256) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc749)
    %1258 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc750)
    %1259 = "ttir.multiply"(%1255, %1257, %1258) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc750)
    %1260 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1111)
    %1261 = "ttir.transpose"(%1259, %1260) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1111)
    %1262 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1112)
    %1263 = "ttir.transpose"(%1261, %1262) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1112)
    %1264 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1113)
    %1265 = "ttir.conv2d"(%1263, %arg262, %1264) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1113)
    %1266 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1114)
    %1267 = "ttir.transpose"(%1265, %1266) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1114)
    %1268 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1115)
    %1269 = "ttir.transpose"(%1267, %1268) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1115)
    %1270 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc128)
    %1271 = "ttir.multiply"(%1269, %arg128, %1270) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc128)
    %1272 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc129)
    %1273 = "ttir.add"(%1271, %arg129, %1272) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc129)
    %1274 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc752)
    %1275 = "ttir.sigmoid"(%1273, %1274) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc752)
    %1276 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc753)
    %1277 = "ttir.multiply"(%1273, %1275, %1276) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc753)
    %1278 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1116)
    %1279 = "ttir.transpose"(%1277, %1278) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1116)
    %1280 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1117)
    %1281 = "ttir.transpose"(%1279, %1280) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1117)
    %1282 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1118)
    %1283 = "ttir.conv2d"(%1281, %arg263, %1282) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1118)
    %1284 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1119)
    %1285 = "ttir.transpose"(%1283, %1284) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1119)
    %1286 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1120)
    %1287 = "ttir.transpose"(%1285, %1286) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1120)
    %1288 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc130)
    %1289 = "ttir.multiply"(%1287, %arg130, %1288) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc130)
    %1290 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc131)
    %1291 = "ttir.add"(%1289, %arg131, %1290) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc131)
    %1292 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc755)
    %1293 = "ttir.sigmoid"(%1291, %1292) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc755)
    %1294 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc756)
    %1295 = "ttir.multiply"(%1291, %1293, %1294) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc756)
    %1296 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1121)
    %1297 = "ttir.transpose"(%1295, %1296) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1121)
    %1298 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1122)
    %1299 = "ttir.transpose"(%1297, %1298) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1122)
    %1300 = ttir.empty() : tensor<1x80x80x160xbf16> loc(#loc1123)
    %1301 = "ttir.conv2d"(%1299, %arg264, %1300) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x160xbf16>, tensor<160x160x3x3xbf16>, tensor<1x80x80x160xbf16>) -> tensor<1x80x80x160xbf16> loc(#loc1123)
    %1302 = ttir.empty() : tensor<1x80x160x80xbf16> loc(#loc1124)
    %1303 = "ttir.transpose"(%1301, %1302) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x160xbf16>, tensor<1x80x160x80xbf16>) -> tensor<1x80x160x80xbf16> loc(#loc1124)
    %1304 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc1125)
    %1305 = "ttir.transpose"(%1303, %1304) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x160x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc1125)
    %1306 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc132)
    %1307 = "ttir.multiply"(%1305, %arg132, %1306) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc132)
    %1308 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc133)
    %1309 = "ttir.add"(%1307, %arg133, %1308) : (tensor<1x160x80x80xbf16>, tensor<1x160x1x1xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc133)
    %1310 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc758)
    %1311 = "ttir.sigmoid"(%1309, %1310) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc758)
    %1312 = ttir.empty() : tensor<1x160x80x80xbf16> loc(#loc759)
    %1313 = "ttir.multiply"(%1309, %1311, %1312) : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>) -> tensor<1x160x80x80xbf16> loc(#loc759)
    %1314 = ttir.empty() : tensor<1x800x80x80xbf16> loc(#loc313)
    %1315 = "ttir.concat"(%1203, %1205, %1241, %1277, %1313, %1314) <{dim = -3 : si32}> : (tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x160x80x80xbf16>, tensor<1x800x80x80xbf16>) -> tensor<1x800x80x80xbf16> loc(#loc313)
    %1316 = ttir.empty() : tensor<1x80x800x80xbf16> loc(#loc760)
    %1317 = "ttir.transpose"(%1315, %1316) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x800x80x80xbf16>, tensor<1x80x800x80xbf16>) -> tensor<1x80x800x80xbf16> loc(#loc760)
    %1318 = ttir.empty() : tensor<1x80x80x800xbf16> loc(#loc761)
    %1319 = "ttir.transpose"(%1317, %1318) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x800x80xbf16>, tensor<1x80x80x800xbf16>) -> tensor<1x80x80x800xbf16> loc(#loc761)
    %1320 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc762)
    %1321 = "ttir.conv2d"(%1319, %arg265, %1320) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x800xbf16>, tensor<320x800x1x1xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc762)
    %1322 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc763)
    %1323 = "ttir.transpose"(%1321, %1322) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc763)
    %1324 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc764)
    %1325 = "ttir.transpose"(%1323, %1324) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc764)
    %1326 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc134)
    %1327 = "ttir.multiply"(%1325, %arg134, %1326) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc134)
    %1328 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc135)
    %1329 = "ttir.add"(%1327, %arg135, %1328) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc135)
    %1330 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc501)
    %1331 = "ttir.sigmoid"(%1329, %1330) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc501)
    %1332 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc502)
    %1333 = "ttir.multiply"(%1329, %1331, %1332) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc502)
    %1334 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1126)
    %1335 = "ttir.transpose"(%1333, %1334) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1126)
    %1336 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1127)
    %1337 = "ttir.transpose"(%1335, %1336) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1127)
    %1338 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1128)
    %1339 = "ttir.conv2d"(%1337, %arg266, %1338) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<80x320x3x3xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1128)
    %1340 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1129)
    %1341 = "ttir.transpose"(%1339, %1340) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1129)
    %1342 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1130)
    %1343 = "ttir.transpose"(%1341, %1342) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1130)
    %1344 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc136)
    %1345 = "ttir.multiply"(%1343, %arg136, %1344) : (tensor<1x80x80x80xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc136)
    %1346 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc137)
    %1347 = "ttir.add"(%1345, %arg137, %1346) : (tensor<1x80x80x80xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc137)
    %1348 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc766)
    %1349 = "ttir.sigmoid"(%1347, %1348) : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc766)
    %1350 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc767)
    %1351 = "ttir.multiply"(%1347, %1349, %1350) : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc767)
    %1352 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1131)
    %1353 = "ttir.transpose"(%1351, %1352) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1131)
    %1354 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1132)
    %1355 = "ttir.transpose"(%1353, %1354) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1132)
    %1356 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1133)
    %1357 = "ttir.conv2d"(%1355, %arg267, %1356) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1133)
    %1358 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1134)
    %1359 = "ttir.transpose"(%1357, %1358) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1134)
    %1360 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc1135)
    %1361 = "ttir.transpose"(%1359, %1360) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc1135)
    %1362 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc138)
    %1363 = "ttir.multiply"(%1361, %arg138, %1362) : (tensor<1x80x80x80xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc138)
    %1364 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc139)
    %1365 = "ttir.add"(%1363, %arg139, %1364) : (tensor<1x80x80x80xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc139)
    %1366 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc769)
    %1367 = "ttir.sigmoid"(%1365, %1366) : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc769)
    %1368 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc770)
    %1369 = "ttir.multiply"(%1365, %1367, %1368) : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc770)
    %1370 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc771)
    %1371 = "ttir.transpose"(%1369, %1370) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc771)
    %1372 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc772)
    %1373 = "ttir.transpose"(%1371, %1372) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc772)
    %1374 = ttir.empty() : tensor<1x80x80x64xbf16> loc(#loc773)
    %1375 = "ttir.conv2d"(%1373, %arg268, %arg269, %1374) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x80xbf16>, tensor<64x80x1x1xbf16>, tensor<1x1x1x64xbf16>, tensor<1x80x80x64xbf16>) -> tensor<1x80x80x64xbf16> loc(#loc773)
    %1376 = ttir.empty() : tensor<1x80x64x80xbf16> loc(#loc774)
    %1377 = "ttir.transpose"(%1375, %1376) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x64xbf16>, tensor<1x80x64x80xbf16>) -> tensor<1x80x64x80xbf16> loc(#loc774)
    %1378 = ttir.empty() : tensor<1x64x80x80xbf16> loc(#loc775)
    %1379 = "ttir.transpose"(%1377, %1378) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x64x80xbf16>, tensor<1x64x80x80xbf16>) -> tensor<1x64x80x80xbf16> loc(#loc775)
    %1380 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1136)
    %1381 = "ttir.transpose"(%1333, %1380) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1136)
    %1382 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1137)
    %1383 = "ttir.transpose"(%1381, %1382) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1137)
    %1384 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1138)
    %1385 = "ttir.conv2d"(%1383, %arg270, %1384) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1138)
    %1386 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1139)
    %1387 = "ttir.transpose"(%1385, %1386) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1139)
    %1388 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1140)
    %1389 = "ttir.transpose"(%1387, %1388) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1140)
    %1390 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc140)
    %1391 = "ttir.multiply"(%1389, %arg140, %1390) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc140)
    %1392 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc141)
    %1393 = "ttir.add"(%1391, %arg141, %1392) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc141)
    %1394 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc776)
    %1395 = "ttir.sigmoid"(%1393, %1394) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc776)
    %1396 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc777)
    %1397 = "ttir.multiply"(%1393, %1395, %1396) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc777)
    %1398 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1141)
    %1399 = "ttir.transpose"(%1397, %1398) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1141)
    %1400 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1142)
    %1401 = "ttir.transpose"(%1399, %1400) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1142)
    %1402 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc1143)
    %1403 = "ttir.conv2d"(%1401, %arg271, %1402) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc1143)
    %1404 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc1144)
    %1405 = "ttir.transpose"(%1403, %1404) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x320xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc1144)
    %1406 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc1145)
    %1407 = "ttir.transpose"(%1405, %1406) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc1145)
    %1408 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc142)
    %1409 = "ttir.multiply"(%1407, %arg142, %1408) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc142)
    %1410 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc143)
    %1411 = "ttir.add"(%1409, %arg143, %1410) : (tensor<1x320x80x80xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc143)
    %1412 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc778)
    %1413 = "ttir.sigmoid"(%1411, %1412) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc778)
    %1414 = ttir.empty() : tensor<1x320x80x80xbf16> loc(#loc779)
    %1415 = "ttir.multiply"(%1411, %1413, %1414) : (tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>, tensor<1x320x80x80xbf16>) -> tensor<1x320x80x80xbf16> loc(#loc779)
    %1416 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc780)
    %1417 = "ttir.transpose"(%1415, %1416) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc780)
    %1418 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc781)
    %1419 = "ttir.transpose"(%1417, %1418) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc781)
    %1420 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc782)
    %1421 = "ttir.conv2d"(%1419, %arg272, %arg273, %1420) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<80x320x1x1xbf16>, tensor<1x1x1x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc782)
    %1422 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc783)
    %1423 = "ttir.transpose"(%1421, %1422) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc783)
    %1424 = ttir.empty() : tensor<1x80x80x80xbf16> loc(#loc784)
    %1425 = "ttir.transpose"(%1423, %1424) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x80x80xbf16>, tensor<1x80x80x80xbf16>) -> tensor<1x80x80x80xbf16> loc(#loc784)
    %1426 = ttir.empty() : tensor<1x144x80x80xbf16> loc(#loc316)
    %1427 = "ttir.concat"(%1379, %1425, %1426) <{dim = -3 : si32}> : (tensor<1x64x80x80xbf16>, tensor<1x80x80x80xbf16>, tensor<1x144x80x80xbf16>) -> tensor<1x144x80x80xbf16> loc(#loc316)
    %1428 = ttir.empty() : tensor<1x144x6400xbf16> loc(#loc317)
    %1429 = "ttir.reshape"(%1427, %1428) <{shape = [1 : i32, 144 : i32, 6400 : i32]}> : (tensor<1x144x80x80xbf16>, tensor<1x144x6400xbf16>) -> tensor<1x144x6400xbf16> loc(#loc317)
    %1430 = ttir.empty() : tensor<1x80x320x80xbf16> loc(#loc506)
    %1431 = "ttir.transpose"(%1333, %1430) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x80x80xbf16>, tensor<1x80x320x80xbf16>) -> tensor<1x80x320x80xbf16> loc(#loc506)
    %1432 = ttir.empty() : tensor<1x80x80x320xbf16> loc(#loc507)
    %1433 = "ttir.transpose"(%1431, %1432) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x80x320x80xbf16>, tensor<1x80x80x320xbf16>) -> tensor<1x80x80x320xbf16> loc(#loc507)
    %1434 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc508)
    %1435 = "ttir.conv2d"(%1433, %arg274, %1434) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x80x80x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc508)
    %1436 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc509)
    %1437 = "ttir.transpose"(%1435, %1436) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc509)
    %1438 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc510)
    %1439 = "ttir.transpose"(%1437, %1438) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc510)
    %1440 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc144)
    %1441 = "ttir.multiply"(%1439, %arg144, %1440) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc144)
    %1442 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc145)
    %1443 = "ttir.add"(%1441, %arg145, %1442) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc145)
    %1444 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc319)
    %1445 = "ttir.sigmoid"(%1443, %1444) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc319)
    %1446 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc320)
    %1447 = "ttir.multiply"(%1443, %1445, %1446) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc320)
    %1448 = ttir.empty() : tensor<1x960x40x40xbf16> loc(#loc321)
    %1449 = "ttir.concat"(%1447, %1171, %1448) <{dim = -3 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x960x40x40xbf16>) -> tensor<1x960x40x40xbf16> loc(#loc321)
    %1450 = ttir.empty() : tensor<1x40x960x40xbf16> loc(#loc785)
    %1451 = "ttir.transpose"(%1449, %1450) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x960x40x40xbf16>, tensor<1x40x960x40xbf16>) -> tensor<1x40x960x40xbf16> loc(#loc785)
    %1452 = ttir.empty() : tensor<1x40x40x960xbf16> loc(#loc786)
    %1453 = "ttir.transpose"(%1451, %1452) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x960x40xbf16>, tensor<1x40x40x960xbf16>) -> tensor<1x40x40x960xbf16> loc(#loc786)
    %1454 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc787)
    %1455 = "ttir.conv2d"(%1453, %arg275, %1454) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x960xbf16>, tensor<640x960x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc787)
    %1456 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc788)
    %1457 = "ttir.transpose"(%1455, %1456) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc788)
    %1458 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc789)
    %1459 = "ttir.transpose"(%1457, %1458) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc789)
    %1460 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc146)
    %1461 = "ttir.multiply"(%1459, %arg146, %1460) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc146)
    %1462 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc147)
    %1463 = "ttir.add"(%1461, %arg147, %1462) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc147)
    %1464 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc512)
    %1465 = "ttir.sigmoid"(%1463, %1464) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc512)
    %1466 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc513)
    %1467 = "ttir.multiply"(%1463, %1465, %1466) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc513)
    %1468 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc323)
    %1469 = "ttir.index"(%1467, %1468) <{begin = 0 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc323)
    %1470 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc324)
    %1471 = "ttir.index"(%1467, %1470) <{begin = 320 : i32, dim = 1 : i32, end = 640 : i32, step = 1 : i32}> : (tensor<1x640x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc324)
    %1472 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1146)
    %1473 = "ttir.transpose"(%1471, %1472) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1146)
    %1474 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1147)
    %1475 = "ttir.transpose"(%1473, %1474) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1147)
    %1476 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1148)
    %1477 = "ttir.conv2d"(%1475, %arg276, %1476) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1148)
    %1478 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1149)
    %1479 = "ttir.transpose"(%1477, %1478) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1149)
    %1480 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1150)
    %1481 = "ttir.transpose"(%1479, %1480) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1150)
    %1482 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc148)
    %1483 = "ttir.multiply"(%1481, %arg148, %1482) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc148)
    %1484 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc149)
    %1485 = "ttir.add"(%1483, %arg149, %1484) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc149)
    %1486 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc791)
    %1487 = "ttir.sigmoid"(%1485, %1486) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc791)
    %1488 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc792)
    %1489 = "ttir.multiply"(%1485, %1487, %1488) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc792)
    %1490 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1151)
    %1491 = "ttir.transpose"(%1489, %1490) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1151)
    %1492 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1152)
    %1493 = "ttir.transpose"(%1491, %1492) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1152)
    %1494 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1153)
    %1495 = "ttir.conv2d"(%1493, %arg277, %1494) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1153)
    %1496 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1154)
    %1497 = "ttir.transpose"(%1495, %1496) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1154)
    %1498 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1155)
    %1499 = "ttir.transpose"(%1497, %1498) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1155)
    %1500 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc150)
    %1501 = "ttir.multiply"(%1499, %arg150, %1500) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc150)
    %1502 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc151)
    %1503 = "ttir.add"(%1501, %arg151, %1502) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc151)
    %1504 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc794)
    %1505 = "ttir.sigmoid"(%1503, %1504) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc794)
    %1506 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc795)
    %1507 = "ttir.multiply"(%1503, %1505, %1506) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc795)
    %1508 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1156)
    %1509 = "ttir.transpose"(%1507, %1508) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1156)
    %1510 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1157)
    %1511 = "ttir.transpose"(%1509, %1510) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1157)
    %1512 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1158)
    %1513 = "ttir.conv2d"(%1511, %arg278, %1512) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1158)
    %1514 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1159)
    %1515 = "ttir.transpose"(%1513, %1514) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1159)
    %1516 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1160)
    %1517 = "ttir.transpose"(%1515, %1516) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1160)
    %1518 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc152)
    %1519 = "ttir.multiply"(%1517, %arg152, %1518) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc152)
    %1520 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc153)
    %1521 = "ttir.add"(%1519, %arg153, %1520) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc153)
    %1522 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc797)
    %1523 = "ttir.sigmoid"(%1521, %1522) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc797)
    %1524 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc798)
    %1525 = "ttir.multiply"(%1521, %1523, %1524) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc798)
    %1526 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1161)
    %1527 = "ttir.transpose"(%1525, %1526) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1161)
    %1528 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1162)
    %1529 = "ttir.transpose"(%1527, %1528) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1162)
    %1530 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1163)
    %1531 = "ttir.conv2d"(%1529, %arg279, %1530) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1163)
    %1532 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1164)
    %1533 = "ttir.transpose"(%1531, %1532) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1164)
    %1534 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1165)
    %1535 = "ttir.transpose"(%1533, %1534) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1165)
    %1536 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc154)
    %1537 = "ttir.multiply"(%1535, %arg154, %1536) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc154)
    %1538 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc155)
    %1539 = "ttir.add"(%1537, %arg155, %1538) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc155)
    %1540 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc800)
    %1541 = "ttir.sigmoid"(%1539, %1540) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc800)
    %1542 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc801)
    %1543 = "ttir.multiply"(%1539, %1541, %1542) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc801)
    %1544 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1166)
    %1545 = "ttir.transpose"(%1543, %1544) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1166)
    %1546 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1167)
    %1547 = "ttir.transpose"(%1545, %1546) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1167)
    %1548 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1168)
    %1549 = "ttir.conv2d"(%1547, %arg280, %1548) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1168)
    %1550 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1169)
    %1551 = "ttir.transpose"(%1549, %1550) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1169)
    %1552 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1170)
    %1553 = "ttir.transpose"(%1551, %1552) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1170)
    %1554 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc156)
    %1555 = "ttir.multiply"(%1553, %arg156, %1554) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc156)
    %1556 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc157)
    %1557 = "ttir.add"(%1555, %arg157, %1556) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc157)
    %1558 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc803)
    %1559 = "ttir.sigmoid"(%1557, %1558) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc803)
    %1560 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc804)
    %1561 = "ttir.multiply"(%1557, %1559, %1560) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc804)
    %1562 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1171)
    %1563 = "ttir.transpose"(%1561, %1562) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1171)
    %1564 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1172)
    %1565 = "ttir.transpose"(%1563, %1564) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1172)
    %1566 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1173)
    %1567 = "ttir.conv2d"(%1565, %arg281, %1566) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1173)
    %1568 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1174)
    %1569 = "ttir.transpose"(%1567, %1568) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1174)
    %1570 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1175)
    %1571 = "ttir.transpose"(%1569, %1570) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1175)
    %1572 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc158)
    %1573 = "ttir.multiply"(%1571, %arg158, %1572) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc158)
    %1574 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc159)
    %1575 = "ttir.add"(%1573, %arg159, %1574) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc159)
    %1576 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc806)
    %1577 = "ttir.sigmoid"(%1575, %1576) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc806)
    %1578 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc807)
    %1579 = "ttir.multiply"(%1575, %1577, %1578) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc807)
    %1580 = ttir.empty() : tensor<1x1600x40x40xbf16> loc(#loc328)
    %1581 = "ttir.concat"(%1469, %1471, %1507, %1543, %1579, %1580) <{dim = -3 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x1600x40x40xbf16>) -> tensor<1x1600x40x40xbf16> loc(#loc328)
    %1582 = ttir.empty() : tensor<1x40x1600x40xbf16> loc(#loc808)
    %1583 = "ttir.transpose"(%1581, %1582) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1600x40x40xbf16>, tensor<1x40x1600x40xbf16>) -> tensor<1x40x1600x40xbf16> loc(#loc808)
    %1584 = ttir.empty() : tensor<1x40x40x1600xbf16> loc(#loc809)
    %1585 = "ttir.transpose"(%1583, %1584) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x1600x40xbf16>, tensor<1x40x40x1600xbf16>) -> tensor<1x40x40x1600xbf16> loc(#loc809)
    %1586 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc810)
    %1587 = "ttir.conv2d"(%1585, %arg282, %1586) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x1600xbf16>, tensor<640x1600x1x1xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc810)
    %1588 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc811)
    %1589 = "ttir.transpose"(%1587, %1588) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x640xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc811)
    %1590 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc812)
    %1591 = "ttir.transpose"(%1589, %1590) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc812)
    %1592 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc160)
    %1593 = "ttir.multiply"(%1591, %arg160, %1592) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc160)
    %1594 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc161)
    %1595 = "ttir.add"(%1593, %arg161, %1594) : (tensor<1x640x40x40xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc161)
    %1596 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc521)
    %1597 = "ttir.sigmoid"(%1595, %1596) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc521)
    %1598 = ttir.empty() : tensor<1x640x40x40xbf16> loc(#loc522)
    %1599 = "ttir.multiply"(%1595, %1597, %1598) : (tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>, tensor<1x640x40x40xbf16>) -> tensor<1x640x40x40xbf16> loc(#loc522)
    %1600 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1176)
    %1601 = "ttir.transpose"(%1599, %1600) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1176)
    %1602 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1177)
    %1603 = "ttir.transpose"(%1601, %1602) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1177)
    %1604 = ttir.empty() : tensor<1x40x40x80xbf16> loc(#loc1178)
    %1605 = "ttir.conv2d"(%1603, %arg283, %1604) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<80x640x3x3xbf16>, tensor<1x40x40x80xbf16>) -> tensor<1x40x40x80xbf16> loc(#loc1178)
    %1606 = ttir.empty() : tensor<1x40x80x40xbf16> loc(#loc1179)
    %1607 = "ttir.transpose"(%1605, %1606) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x80xbf16>, tensor<1x40x80x40xbf16>) -> tensor<1x40x80x40xbf16> loc(#loc1179)
    %1608 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc1180)
    %1609 = "ttir.transpose"(%1607, %1608) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x80x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc1180)
    %1610 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc162)
    %1611 = "ttir.multiply"(%1609, %arg162, %1610) : (tensor<1x80x40x40xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc162)
    %1612 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc163)
    %1613 = "ttir.add"(%1611, %arg163, %1612) : (tensor<1x80x40x40xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc163)
    %1614 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc814)
    %1615 = "ttir.sigmoid"(%1613, %1614) : (tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc814)
    %1616 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc815)
    %1617 = "ttir.multiply"(%1613, %1615, %1616) : (tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc815)
    %1618 = ttir.empty() : tensor<1x40x80x40xbf16> loc(#loc1181)
    %1619 = "ttir.transpose"(%1617, %1618) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x40x40xbf16>, tensor<1x40x80x40xbf16>) -> tensor<1x40x80x40xbf16> loc(#loc1181)
    %1620 = ttir.empty() : tensor<1x40x40x80xbf16> loc(#loc1182)
    %1621 = "ttir.transpose"(%1619, %1620) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x80x40xbf16>, tensor<1x40x40x80xbf16>) -> tensor<1x40x40x80xbf16> loc(#loc1182)
    %1622 = ttir.empty() : tensor<1x40x40x80xbf16> loc(#loc1183)
    %1623 = "ttir.conv2d"(%1621, %arg284, %1622) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x40x40x80xbf16>) -> tensor<1x40x40x80xbf16> loc(#loc1183)
    %1624 = ttir.empty() : tensor<1x40x80x40xbf16> loc(#loc1184)
    %1625 = "ttir.transpose"(%1623, %1624) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x80xbf16>, tensor<1x40x80x40xbf16>) -> tensor<1x40x80x40xbf16> loc(#loc1184)
    %1626 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc1185)
    %1627 = "ttir.transpose"(%1625, %1626) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x80x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc1185)
    %1628 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc164)
    %1629 = "ttir.multiply"(%1627, %arg164, %1628) : (tensor<1x80x40x40xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc164)
    %1630 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc165)
    %1631 = "ttir.add"(%1629, %arg165, %1630) : (tensor<1x80x40x40xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc165)
    %1632 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc817)
    %1633 = "ttir.sigmoid"(%1631, %1632) : (tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc817)
    %1634 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc818)
    %1635 = "ttir.multiply"(%1631, %1633, %1634) : (tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc818)
    %1636 = ttir.empty() : tensor<1x40x80x40xbf16> loc(#loc819)
    %1637 = "ttir.transpose"(%1635, %1636) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x40x40xbf16>, tensor<1x40x80x40xbf16>) -> tensor<1x40x80x40xbf16> loc(#loc819)
    %1638 = ttir.empty() : tensor<1x40x40x80xbf16> loc(#loc820)
    %1639 = "ttir.transpose"(%1637, %1638) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x80x40xbf16>, tensor<1x40x40x80xbf16>) -> tensor<1x40x40x80xbf16> loc(#loc820)
    %1640 = ttir.empty() : tensor<1x40x40x64xbf16> loc(#loc821)
    %1641 = "ttir.conv2d"(%1639, %arg285, %arg286, %1640) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x80xbf16>, tensor<64x80x1x1xbf16>, tensor<1x1x1x64xbf16>, tensor<1x40x40x64xbf16>) -> tensor<1x40x40x64xbf16> loc(#loc821)
    %1642 = ttir.empty() : tensor<1x40x64x40xbf16> loc(#loc822)
    %1643 = "ttir.transpose"(%1641, %1642) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x64xbf16>, tensor<1x40x64x40xbf16>) -> tensor<1x40x64x40xbf16> loc(#loc822)
    %1644 = ttir.empty() : tensor<1x64x40x40xbf16> loc(#loc823)
    %1645 = "ttir.transpose"(%1643, %1644) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x64x40xbf16>, tensor<1x64x40x40xbf16>) -> tensor<1x64x40x40xbf16> loc(#loc823)
    %1646 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc1186)
    %1647 = "ttir.transpose"(%1599, %1646) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc1186)
    %1648 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc1187)
    %1649 = "ttir.transpose"(%1647, %1648) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc1187)
    %1650 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1188)
    %1651 = "ttir.conv2d"(%1649, %arg287, %1650) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<320x640x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1188)
    %1652 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1189)
    %1653 = "ttir.transpose"(%1651, %1652) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1189)
    %1654 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1190)
    %1655 = "ttir.transpose"(%1653, %1654) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1190)
    %1656 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc166)
    %1657 = "ttir.multiply"(%1655, %arg166, %1656) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc166)
    %1658 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc167)
    %1659 = "ttir.add"(%1657, %arg167, %1658) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc167)
    %1660 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc824)
    %1661 = "ttir.sigmoid"(%1659, %1660) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc824)
    %1662 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc825)
    %1663 = "ttir.multiply"(%1659, %1661, %1662) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc825)
    %1664 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1191)
    %1665 = "ttir.transpose"(%1663, %1664) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1191)
    %1666 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1192)
    %1667 = "ttir.transpose"(%1665, %1666) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1192)
    %1668 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc1193)
    %1669 = "ttir.conv2d"(%1667, %arg288, %1668) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc1193)
    %1670 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc1194)
    %1671 = "ttir.transpose"(%1669, %1670) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x320xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc1194)
    %1672 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc1195)
    %1673 = "ttir.transpose"(%1671, %1672) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc1195)
    %1674 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc168)
    %1675 = "ttir.multiply"(%1673, %arg168, %1674) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc168)
    %1676 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc169)
    %1677 = "ttir.add"(%1675, %arg169, %1676) : (tensor<1x320x40x40xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc169)
    %1678 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc826)
    %1679 = "ttir.sigmoid"(%1677, %1678) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc826)
    %1680 = ttir.empty() : tensor<1x320x40x40xbf16> loc(#loc827)
    %1681 = "ttir.multiply"(%1677, %1679, %1680) : (tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>, tensor<1x320x40x40xbf16>) -> tensor<1x320x40x40xbf16> loc(#loc827)
    %1682 = ttir.empty() : tensor<1x40x320x40xbf16> loc(#loc828)
    %1683 = "ttir.transpose"(%1681, %1682) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x40x40xbf16>, tensor<1x40x320x40xbf16>) -> tensor<1x40x320x40xbf16> loc(#loc828)
    %1684 = ttir.empty() : tensor<1x40x40x320xbf16> loc(#loc829)
    %1685 = "ttir.transpose"(%1683, %1684) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x320x40xbf16>, tensor<1x40x40x320xbf16>) -> tensor<1x40x40x320xbf16> loc(#loc829)
    %1686 = ttir.empty() : tensor<1x40x40x80xbf16> loc(#loc830)
    %1687 = "ttir.conv2d"(%1685, %arg289, %arg290, %1686) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x40x40x320xbf16>, tensor<80x320x1x1xbf16>, tensor<1x1x1x80xbf16>, tensor<1x40x40x80xbf16>) -> tensor<1x40x40x80xbf16> loc(#loc830)
    %1688 = ttir.empty() : tensor<1x40x80x40xbf16> loc(#loc831)
    %1689 = "ttir.transpose"(%1687, %1688) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x40x80xbf16>, tensor<1x40x80x40xbf16>) -> tensor<1x40x80x40xbf16> loc(#loc831)
    %1690 = ttir.empty() : tensor<1x80x40x40xbf16> loc(#loc832)
    %1691 = "ttir.transpose"(%1689, %1690) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x40x80x40xbf16>, tensor<1x80x40x40xbf16>) -> tensor<1x80x40x40xbf16> loc(#loc832)
    %1692 = ttir.empty() : tensor<1x144x40x40xbf16> loc(#loc331)
    %1693 = "ttir.concat"(%1645, %1691, %1692) <{dim = -3 : si32}> : (tensor<1x64x40x40xbf16>, tensor<1x80x40x40xbf16>, tensor<1x144x40x40xbf16>) -> tensor<1x144x40x40xbf16> loc(#loc331)
    %1694 = ttir.empty() : tensor<1x144x1600xbf16> loc(#loc332)
    %1695 = "ttir.reshape"(%1693, %1694) <{shape = [1 : i32, 144 : i32, 1600 : i32]}> : (tensor<1x144x40x40xbf16>, tensor<1x144x1600xbf16>) -> tensor<1x144x1600xbf16> loc(#loc332)
    %1696 = ttir.empty() : tensor<1x40x640x40xbf16> loc(#loc526)
    %1697 = "ttir.transpose"(%1599, %1696) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x40x40xbf16>, tensor<1x40x640x40xbf16>) -> tensor<1x40x640x40xbf16> loc(#loc526)
    %1698 = ttir.empty() : tensor<1x40x40x640xbf16> loc(#loc527)
    %1699 = "ttir.transpose"(%1697, %1698) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x40x640x40xbf16>, tensor<1x40x40x640xbf16>) -> tensor<1x40x40x640xbf16> loc(#loc527)
    %1700 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc528)
    %1701 = "ttir.conv2d"(%1699, %arg291, %1700) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x40x40x640xbf16>, tensor<640x640x3x3xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc528)
    %1702 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc529)
    %1703 = "ttir.transpose"(%1701, %1702) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc529)
    %1704 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc530)
    %1705 = "ttir.transpose"(%1703, %1704) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc530)
    %1706 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc170)
    %1707 = "ttir.multiply"(%1705, %arg170, %1706) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc170)
    %1708 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc171)
    %1709 = "ttir.add"(%1707, %arg171, %1708) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc171)
    %1710 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc334)
    %1711 = "ttir.sigmoid"(%1709, %1710) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc334)
    %1712 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc335)
    %1713 = "ttir.multiply"(%1709, %1711, %1712) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc335)
    %1714 = ttir.empty() : tensor<1x1280x20x20xbf16> loc(#loc336)
    %1715 = "ttir.concat"(%1713, %1009, %1714) <{dim = -3 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x1280x20x20xbf16>) -> tensor<1x1280x20x20xbf16> loc(#loc336)
    %1716 = ttir.empty() : tensor<1x20x1280x20xbf16> loc(#loc833)
    %1717 = "ttir.transpose"(%1715, %1716) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1280x20x20xbf16>, tensor<1x20x1280x20xbf16>) -> tensor<1x20x1280x20xbf16> loc(#loc833)
    %1718 = ttir.empty() : tensor<1x20x20x1280xbf16> loc(#loc834)
    %1719 = "ttir.transpose"(%1717, %1718) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1280x20xbf16>, tensor<1x20x20x1280xbf16>) -> tensor<1x20x20x1280xbf16> loc(#loc834)
    %1720 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc835)
    %1721 = "ttir.conv2d"(%1719, %arg292, %1720) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1280xbf16>, tensor<640x1280x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc835)
    %1722 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc836)
    %1723 = "ttir.transpose"(%1721, %1722) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc836)
    %1724 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc837)
    %1725 = "ttir.transpose"(%1723, %1724) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc837)
    %1726 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc172)
    %1727 = "ttir.multiply"(%1725, %arg172, %1726) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc172)
    %1728 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc173)
    %1729 = "ttir.add"(%1727, %arg173, %1728) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc173)
    %1730 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc532)
    %1731 = "ttir.sigmoid"(%1729, %1730) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc532)
    %1732 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc533)
    %1733 = "ttir.multiply"(%1729, %1731, %1732) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc533)
    %1734 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc338)
    %1735 = "ttir.index"(%1733, %1734) <{begin = 0 : i32, dim = 1 : i32, end = 320 : i32, step = 1 : i32}> : (tensor<1x640x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc338)
    %1736 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc339)
    %1737 = "ttir.index"(%1733, %1736) <{begin = 320 : i32, dim = 1 : i32, end = 640 : i32, step = 1 : i32}> : (tensor<1x640x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc339)
    %1738 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1196)
    %1739 = "ttir.transpose"(%1737, %1738) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1196)
    %1740 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1197)
    %1741 = "ttir.transpose"(%1739, %1740) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1197)
    %1742 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1198)
    %1743 = "ttir.conv2d"(%1741, %arg293, %1742) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1198)
    %1744 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1199)
    %1745 = "ttir.transpose"(%1743, %1744) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1199)
    %1746 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1200)
    %1747 = "ttir.transpose"(%1745, %1746) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1200)
    %1748 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc174)
    %1749 = "ttir.multiply"(%1747, %arg174, %1748) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc174)
    %1750 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc175)
    %1751 = "ttir.add"(%1749, %arg175, %1750) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc175)
    %1752 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc839)
    %1753 = "ttir.sigmoid"(%1751, %1752) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc839)
    %1754 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc840)
    %1755 = "ttir.multiply"(%1751, %1753, %1754) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc840)
    %1756 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1201)
    %1757 = "ttir.transpose"(%1755, %1756) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1201)
    %1758 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1202)
    %1759 = "ttir.transpose"(%1757, %1758) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1202)
    %1760 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1203)
    %1761 = "ttir.conv2d"(%1759, %arg294, %1760) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1203)
    %1762 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1204)
    %1763 = "ttir.transpose"(%1761, %1762) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1204)
    %1764 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1205)
    %1765 = "ttir.transpose"(%1763, %1764) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1205)
    %1766 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc176)
    %1767 = "ttir.multiply"(%1765, %arg176, %1766) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc176)
    %1768 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc177)
    %1769 = "ttir.add"(%1767, %arg177, %1768) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc177)
    %1770 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc842)
    %1771 = "ttir.sigmoid"(%1769, %1770) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc842)
    %1772 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc843)
    %1773 = "ttir.multiply"(%1769, %1771, %1772) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc843)
    %1774 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1206)
    %1775 = "ttir.transpose"(%1773, %1774) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1206)
    %1776 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1207)
    %1777 = "ttir.transpose"(%1775, %1776) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1207)
    %1778 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1208)
    %1779 = "ttir.conv2d"(%1777, %arg295, %1778) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1208)
    %1780 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1209)
    %1781 = "ttir.transpose"(%1779, %1780) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1209)
    %1782 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1210)
    %1783 = "ttir.transpose"(%1781, %1782) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1210)
    %1784 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc178)
    %1785 = "ttir.multiply"(%1783, %arg178, %1784) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc178)
    %1786 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc179)
    %1787 = "ttir.add"(%1785, %arg179, %1786) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc179)
    %1788 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc845)
    %1789 = "ttir.sigmoid"(%1787, %1788) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc845)
    %1790 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc846)
    %1791 = "ttir.multiply"(%1787, %1789, %1790) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc846)
    %1792 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1211)
    %1793 = "ttir.transpose"(%1791, %1792) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1211)
    %1794 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1212)
    %1795 = "ttir.transpose"(%1793, %1794) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1212)
    %1796 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1213)
    %1797 = "ttir.conv2d"(%1795, %arg296, %1796) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1213)
    %1798 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1214)
    %1799 = "ttir.transpose"(%1797, %1798) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1214)
    %1800 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1215)
    %1801 = "ttir.transpose"(%1799, %1800) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1215)
    %1802 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc180)
    %1803 = "ttir.multiply"(%1801, %arg180, %1802) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc180)
    %1804 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc181)
    %1805 = "ttir.add"(%1803, %arg181, %1804) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc181)
    %1806 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc848)
    %1807 = "ttir.sigmoid"(%1805, %1806) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc848)
    %1808 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc849)
    %1809 = "ttir.multiply"(%1805, %1807, %1808) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc849)
    %1810 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1216)
    %1811 = "ttir.transpose"(%1809, %1810) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1216)
    %1812 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1217)
    %1813 = "ttir.transpose"(%1811, %1812) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1217)
    %1814 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1218)
    %1815 = "ttir.conv2d"(%1813, %arg297, %1814) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1218)
    %1816 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1219)
    %1817 = "ttir.transpose"(%1815, %1816) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1219)
    %1818 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1220)
    %1819 = "ttir.transpose"(%1817, %1818) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1220)
    %1820 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc182)
    %1821 = "ttir.multiply"(%1819, %arg182, %1820) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc182)
    %1822 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc183)
    %1823 = "ttir.add"(%1821, %arg183, %1822) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc183)
    %1824 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc851)
    %1825 = "ttir.sigmoid"(%1823, %1824) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc851)
    %1826 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc852)
    %1827 = "ttir.multiply"(%1823, %1825, %1826) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc852)
    %1828 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1221)
    %1829 = "ttir.transpose"(%1827, %1828) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1221)
    %1830 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1222)
    %1831 = "ttir.transpose"(%1829, %1830) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1222)
    %1832 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1223)
    %1833 = "ttir.conv2d"(%1831, %arg298, %1832) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1223)
    %1834 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1224)
    %1835 = "ttir.transpose"(%1833, %1834) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1224)
    %1836 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1225)
    %1837 = "ttir.transpose"(%1835, %1836) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1225)
    %1838 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc184)
    %1839 = "ttir.multiply"(%1837, %arg184, %1838) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc184)
    %1840 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc185)
    %1841 = "ttir.add"(%1839, %arg185, %1840) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc185)
    %1842 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc854)
    %1843 = "ttir.sigmoid"(%1841, %1842) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc854)
    %1844 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc855)
    %1845 = "ttir.multiply"(%1841, %1843, %1844) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc855)
    %1846 = ttir.empty() : tensor<1x1600x20x20xbf16> loc(#loc343)
    %1847 = "ttir.concat"(%1735, %1737, %1773, %1809, %1845, %1846) <{dim = -3 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x1600x20x20xbf16>) -> tensor<1x1600x20x20xbf16> loc(#loc343)
    %1848 = ttir.empty() : tensor<1x20x1600x20xbf16> loc(#loc856)
    %1849 = "ttir.transpose"(%1847, %1848) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x1600x20x20xbf16>, tensor<1x20x1600x20xbf16>) -> tensor<1x20x1600x20xbf16> loc(#loc856)
    %1850 = ttir.empty() : tensor<1x20x20x1600xbf16> loc(#loc857)
    %1851 = "ttir.transpose"(%1849, %1850) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x1600x20xbf16>, tensor<1x20x20x1600xbf16>) -> tensor<1x20x20x1600xbf16> loc(#loc857)
    %1852 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc858)
    %1853 = "ttir.conv2d"(%1851, %arg299, %1852) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x1600xbf16>, tensor<640x1600x1x1xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc858)
    %1854 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc859)
    %1855 = "ttir.transpose"(%1853, %1854) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x640xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc859)
    %1856 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc860)
    %1857 = "ttir.transpose"(%1855, %1856) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc860)
    %1858 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc186)
    %1859 = "ttir.multiply"(%1857, %arg186, %1858) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc186)
    %1860 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc187)
    %1861 = "ttir.add"(%1859, %arg187, %1860) : (tensor<1x640x20x20xbf16>, tensor<1x640x1x1xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc187)
    %1862 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc541)
    %1863 = "ttir.sigmoid"(%1861, %1862) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc541)
    %1864 = ttir.empty() : tensor<1x640x20x20xbf16> loc(#loc542)
    %1865 = "ttir.multiply"(%1861, %1863, %1864) : (tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>, tensor<1x640x20x20xbf16>) -> tensor<1x640x20x20xbf16> loc(#loc542)
    %1866 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1226)
    %1867 = "ttir.transpose"(%1865, %1866) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1226)
    %1868 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1227)
    %1869 = "ttir.transpose"(%1867, %1868) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1227)
    %1870 = ttir.empty() : tensor<1x20x20x80xbf16> loc(#loc1228)
    %1871 = "ttir.conv2d"(%1869, %arg300, %1870) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<80x640x3x3xbf16>, tensor<1x20x20x80xbf16>) -> tensor<1x20x20x80xbf16> loc(#loc1228)
    %1872 = ttir.empty() : tensor<1x20x80x20xbf16> loc(#loc1229)
    %1873 = "ttir.transpose"(%1871, %1872) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x80xbf16>, tensor<1x20x80x20xbf16>) -> tensor<1x20x80x20xbf16> loc(#loc1229)
    %1874 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc1230)
    %1875 = "ttir.transpose"(%1873, %1874) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x80x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc1230)
    %1876 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc188)
    %1877 = "ttir.multiply"(%1875, %arg188, %1876) : (tensor<1x80x20x20xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc188)
    %1878 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc189)
    %1879 = "ttir.add"(%1877, %arg189, %1878) : (tensor<1x80x20x20xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc189)
    %1880 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc862)
    %1881 = "ttir.sigmoid"(%1879, %1880) : (tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc862)
    %1882 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc863)
    %1883 = "ttir.multiply"(%1879, %1881, %1882) : (tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc863)
    %1884 = ttir.empty() : tensor<1x20x80x20xbf16> loc(#loc1231)
    %1885 = "ttir.transpose"(%1883, %1884) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x20x20xbf16>, tensor<1x20x80x20xbf16>) -> tensor<1x20x80x20xbf16> loc(#loc1231)
    %1886 = ttir.empty() : tensor<1x20x20x80xbf16> loc(#loc1232)
    %1887 = "ttir.transpose"(%1885, %1886) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x80x20xbf16>, tensor<1x20x20x80xbf16>) -> tensor<1x20x20x80xbf16> loc(#loc1232)
    %1888 = ttir.empty() : tensor<1x20x20x80xbf16> loc(#loc1233)
    %1889 = "ttir.conv2d"(%1887, %arg301, %1888) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x80xbf16>, tensor<80x80x3x3xbf16>, tensor<1x20x20x80xbf16>) -> tensor<1x20x20x80xbf16> loc(#loc1233)
    %1890 = ttir.empty() : tensor<1x20x80x20xbf16> loc(#loc1234)
    %1891 = "ttir.transpose"(%1889, %1890) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x80xbf16>, tensor<1x20x80x20xbf16>) -> tensor<1x20x80x20xbf16> loc(#loc1234)
    %1892 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc1235)
    %1893 = "ttir.transpose"(%1891, %1892) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x80x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc1235)
    %1894 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc190)
    %1895 = "ttir.multiply"(%1893, %arg190, %1894) : (tensor<1x80x20x20xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc190)
    %1896 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc191)
    %1897 = "ttir.add"(%1895, %arg191, %1896) : (tensor<1x80x20x20xbf16>, tensor<1x80x1x1xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc191)
    %1898 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc865)
    %1899 = "ttir.sigmoid"(%1897, %1898) : (tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc865)
    %1900 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc866)
    %1901 = "ttir.multiply"(%1897, %1899, %1900) : (tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc866)
    %1902 = ttir.empty() : tensor<1x20x80x20xbf16> loc(#loc867)
    %1903 = "ttir.transpose"(%1901, %1902) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x80x20x20xbf16>, tensor<1x20x80x20xbf16>) -> tensor<1x20x80x20xbf16> loc(#loc867)
    %1904 = ttir.empty() : tensor<1x20x20x80xbf16> loc(#loc868)
    %1905 = "ttir.transpose"(%1903, %1904) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x80x20xbf16>, tensor<1x20x20x80xbf16>) -> tensor<1x20x20x80xbf16> loc(#loc868)
    %1906 = ttir.empty() : tensor<1x20x20x64xbf16> loc(#loc869)
    %1907 = "ttir.conv2d"(%1905, %arg302, %arg303, %1906) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x80xbf16>, tensor<64x80x1x1xbf16>, tensor<1x1x1x64xbf16>, tensor<1x20x20x64xbf16>) -> tensor<1x20x20x64xbf16> loc(#loc869)
    %1908 = ttir.empty() : tensor<1x20x64x20xbf16> loc(#loc870)
    %1909 = "ttir.transpose"(%1907, %1908) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x64xbf16>, tensor<1x20x64x20xbf16>) -> tensor<1x20x64x20xbf16> loc(#loc870)
    %1910 = ttir.empty() : tensor<1x64x20x20xbf16> loc(#loc871)
    %1911 = "ttir.transpose"(%1909, %1910) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x64x20xbf16>, tensor<1x64x20x20xbf16>) -> tensor<1x64x20x20xbf16> loc(#loc871)
    %1912 = ttir.empty() : tensor<1x20x640x20xbf16> loc(#loc1236)
    %1913 = "ttir.transpose"(%1865, %1912) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x640x20x20xbf16>, tensor<1x20x640x20xbf16>) -> tensor<1x20x640x20xbf16> loc(#loc1236)
    %1914 = ttir.empty() : tensor<1x20x20x640xbf16> loc(#loc1237)
    %1915 = "ttir.transpose"(%1913, %1914) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x640x20xbf16>, tensor<1x20x20x640xbf16>) -> tensor<1x20x20x640xbf16> loc(#loc1237)
    %1916 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1238)
    %1917 = "ttir.conv2d"(%1915, %arg304, %1916) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x640xbf16>, tensor<320x640x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1238)
    %1918 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1239)
    %1919 = "ttir.transpose"(%1917, %1918) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1239)
    %1920 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1240)
    %1921 = "ttir.transpose"(%1919, %1920) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1240)
    %1922 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc192)
    %1923 = "ttir.multiply"(%1921, %arg192, %1922) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc192)
    %1924 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc193)
    %1925 = "ttir.add"(%1923, %arg193, %1924) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc193)
    %1926 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc872)
    %1927 = "ttir.sigmoid"(%1925, %1926) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc872)
    %1928 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc873)
    %1929 = "ttir.multiply"(%1925, %1927, %1928) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc873)
    %1930 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1241)
    %1931 = "ttir.transpose"(%1929, %1930) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1241)
    %1932 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1242)
    %1933 = "ttir.transpose"(%1931, %1932) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1242)
    %1934 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc1243)
    %1935 = "ttir.conv2d"(%1933, %arg305, %1934) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<320x320x3x3xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc1243)
    %1936 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc1244)
    %1937 = "ttir.transpose"(%1935, %1936) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x320xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc1244)
    %1938 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc1245)
    %1939 = "ttir.transpose"(%1937, %1938) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc1245)
    %1940 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc194)
    %1941 = "ttir.multiply"(%1939, %arg194, %1940) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc194)
    %1942 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc195)
    %1943 = "ttir.add"(%1941, %arg195, %1942) : (tensor<1x320x20x20xbf16>, tensor<1x320x1x1xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc195)
    %1944 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc874)
    %1945 = "ttir.sigmoid"(%1943, %1944) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc874)
    %1946 = ttir.empty() : tensor<1x320x20x20xbf16> loc(#loc875)
    %1947 = "ttir.multiply"(%1943, %1945, %1946) : (tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>, tensor<1x320x20x20xbf16>) -> tensor<1x320x20x20xbf16> loc(#loc875)
    %1948 = ttir.empty() : tensor<1x20x320x20xbf16> loc(#loc876)
    %1949 = "ttir.transpose"(%1947, %1948) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x320x20x20xbf16>, tensor<1x20x320x20xbf16>) -> tensor<1x20x320x20xbf16> loc(#loc876)
    %1950 = ttir.empty() : tensor<1x20x20x320xbf16> loc(#loc877)
    %1951 = "ttir.transpose"(%1949, %1950) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x320x20xbf16>, tensor<1x20x20x320xbf16>) -> tensor<1x20x20x320xbf16> loc(#loc877)
    %1952 = ttir.empty() : tensor<1x20x20x80xbf16> loc(#loc878)
    %1953 = "ttir.conv2d"(%1951, %arg306, %arg307, %1952) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x20x20x320xbf16>, tensor<80x320x1x1xbf16>, tensor<1x1x1x80xbf16>, tensor<1x20x20x80xbf16>) -> tensor<1x20x20x80xbf16> loc(#loc878)
    %1954 = ttir.empty() : tensor<1x20x80x20xbf16> loc(#loc879)
    %1955 = "ttir.transpose"(%1953, %1954) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x20x20x80xbf16>, tensor<1x20x80x20xbf16>) -> tensor<1x20x80x20xbf16> loc(#loc879)
    %1956 = ttir.empty() : tensor<1x80x20x20xbf16> loc(#loc880)
    %1957 = "ttir.transpose"(%1955, %1956) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x20x80x20xbf16>, tensor<1x80x20x20xbf16>) -> tensor<1x80x20x20xbf16> loc(#loc880)
    %1958 = ttir.empty() : tensor<1x144x20x20xbf16> loc(#loc346)
    %1959 = "ttir.concat"(%1911, %1957, %1958) <{dim = -3 : si32}> : (tensor<1x64x20x20xbf16>, tensor<1x80x20x20xbf16>, tensor<1x144x20x20xbf16>) -> tensor<1x144x20x20xbf16> loc(#loc346)
    %1960 = ttir.empty() : tensor<1x144x400xbf16> loc(#loc347)
    %1961 = "ttir.reshape"(%1959, %1960) <{shape = [1 : i32, 144 : i32, 400 : i32]}> : (tensor<1x144x20x20xbf16>, tensor<1x144x400xbf16>) -> tensor<1x144x400xbf16> loc(#loc347)
    %1962 = ttir.empty() : tensor<1x144x8400xbf16> loc(#loc348)
    %1963 = "ttir.concat"(%1429, %1695, %1961, %1962) <{dim = -1 : si32}> : (tensor<1x144x6400xbf16>, tensor<1x144x1600xbf16>, tensor<1x144x400xbf16>, tensor<1x144x8400xbf16>) -> tensor<1x144x8400xbf16> loc(#loc348)
    %1964 = ttir.empty() : tensor<1x64x8400xbf16> loc(#loc349)
    %1965 = "ttir.index"(%1963, %1964) <{begin = 0 : i32, dim = 1 : i32, end = 64 : i32, step = 1 : i32}> : (tensor<1x144x8400xbf16>, tensor<1x64x8400xbf16>) -> tensor<1x64x8400xbf16> loc(#loc349)
    %1966 = ttir.empty() : tensor<1x4x16x8400xbf16> loc(#loc546)
    %1967 = "ttir.reshape"(%1965, %1966) <{shape = [1 : i32, 4 : i32, 16 : i32, 8400 : i32]}> : (tensor<1x64x8400xbf16>, tensor<1x4x16x8400xbf16>) -> tensor<1x4x16x8400xbf16> loc(#loc546)
    %1968 = ttir.empty() : tensor<1x16x4x8400xbf16> loc(#loc547)
    %1969 = "ttir.transpose"(%1967, %1968) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x4x16x8400xbf16>, tensor<1x16x4x8400xbf16>) -> tensor<1x16x4x8400xbf16> loc(#loc547)
    %1970 = ttir.empty() : tensor<1x16x4x8400xbf16> loc(#loc548)
    %1971 = "ttir.softmax"(%1969, %1970) <{dimension = 1 : si32}> : (tensor<1x16x4x8400xbf16>, tensor<1x16x4x8400xbf16>) -> tensor<1x16x4x8400xbf16> loc(#loc548)
    %1972 = ttir.empty() : tensor<1x4x16x8400xbf16> loc(#loc881)
    %1973 = "ttir.transpose"(%1971, %1972) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x16x4x8400xbf16>, tensor<1x4x16x8400xbf16>) -> tensor<1x4x16x8400xbf16> loc(#loc881)
    %1974 = ttir.empty() : tensor<1x4x8400x16xbf16> loc(#loc882)
    %1975 = "ttir.transpose"(%1973, %1974) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x4x16x8400xbf16>, tensor<1x4x8400x16xbf16>) -> tensor<1x4x8400x16xbf16> loc(#loc882)
    %1976 = ttir.empty() : tensor<1x4x8400x1xbf16> loc(#loc883)
    %1977 = "ttir.conv2d"(%1975, %arg196, %1976) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x4x8400x16xbf16>, tensor<1x16x1x1xbf16>, tensor<1x4x8400x1xbf16>) -> tensor<1x4x8400x1xbf16> loc(#loc883)
    %1978 = ttir.empty() : tensor<1x4x1x8400xbf16> loc(#loc884)
    %1979 = "ttir.transpose"(%1977, %1978) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x4x8400x1xbf16>, tensor<1x4x1x8400xbf16>) -> tensor<1x4x1x8400xbf16> loc(#loc884)
    %1980 = ttir.empty() : tensor<1x1x4x8400xbf16> loc(#loc885)
    %1981 = "ttir.transpose"(%1979, %1980) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x4x1x8400xbf16>, tensor<1x1x4x8400xbf16>) -> tensor<1x1x4x8400xbf16> loc(#loc885)
    %1982 = ttir.empty() : tensor<1x4x8400xbf16> loc(#loc550)
    %1983 = "ttir.squeeze"(%1981, %1982) <{dim = 0 : si32}> : (tensor<1x1x4x8400xbf16>, tensor<1x4x8400xbf16>) -> tensor<1x4x8400xbf16> loc(#loc550)
    %1984 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc351)
    %1985 = "ttir.index"(%1983, %1984) <{begin = 0 : i32, dim = 1 : i32, end = 2 : i32, step = 1 : i32}> : (tensor<1x4x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc351)
    %1986 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc352)
    %1987 = "ttir.subtract"(%arg1, %1985, %1986) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc352)
    %1988 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc353)
    %1989 = "ttir.index"(%1983, %1988) <{begin = 2 : i32, dim = 1 : i32, end = 4 : i32, step = 1 : i32}> : (tensor<1x4x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc353)
    %1990 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc354)
    %1991 = "ttir.add"(%arg1, %1989, %1990) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc354)
    %1992 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc355)
    %1993 = "ttir.add"(%1987, %1991, %1992) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc355)
    %1994 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc356)
    %1995 = "ttir.div"(%1993, %arg197, %1994) : (tensor<1x2x8400xbf16>, tensor<1xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc356)
    %1996 = ttir.empty() : tensor<1x2x8400xbf16> loc(#loc357)
    %1997 = "ttir.subtract"(%1991, %1987, %1996) : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>) -> tensor<1x2x8400xbf16> loc(#loc357)
    %1998 = ttir.empty() : tensor<1x4x8400xbf16> loc(#loc358)
    %1999 = "ttir.concat"(%1995, %1997, %1998) <{dim = -2 : si32}> : (tensor<1x2x8400xbf16>, tensor<1x2x8400xbf16>, tensor<1x4x8400xbf16>) -> tensor<1x4x8400xbf16> loc(#loc358)
    %2000 = ttir.empty() : tensor<1x4x8400xbf16> loc(#loc359)
    %2001 = "ttir.multiply"(%1999, %arg198, %2000) : (tensor<1x4x8400xbf16>, tensor<1x8400xbf16>, tensor<1x4x8400xbf16>) -> tensor<1x4x8400xbf16> loc(#loc359)
    %2002 = ttir.empty() : tensor<1x80x8400xbf16> loc(#loc360)
    %2003 = "ttir.index"(%1963, %2002) <{begin = 64 : i32, dim = 1 : i32, end = 144 : i32, step = 1 : i32}> : (tensor<1x144x8400xbf16>, tensor<1x80x8400xbf16>) -> tensor<1x80x8400xbf16> loc(#loc360)
    %2004 = ttir.empty() : tensor<1x80x8400xbf16> loc(#loc361)
    %2005 = "ttir.sigmoid"(%2003, %2004) : (tensor<1x80x8400xbf16>, tensor<1x80x8400xbf16>) -> tensor<1x80x8400xbf16> loc(#loc361)
    %2006 = ttir.empty() : tensor<1x84x8400xbf16> loc(#loc362)
    %2007 = "ttir.concat"(%2001, %2005, %2006) <{dim = -2 : si32}> : (tensor<1x4x8400xbf16>, tensor<1x80x8400xbf16>, tensor<1x84x8400xbf16>) -> tensor<1x84x8400xbf16> loc(#loc362)
    return %2007, %1427, %1693, %1959 : tensor<1x84x8400xbf16>, tensor<1x144x80x80xbf16>, tensor<1x144x40x40xbf16>, tensor<1x144x20x20xbf16> loc(#loc196)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("test.benchmark.utils.YoloWrapper::")
#loc2 = loc("multiply_7")
#loc3 = loc("add_13")
#loc4 = loc("multiply_23")
#loc5 = loc("add_29")
#loc6 = loc("multiply_39")
#loc7 = loc("add_45")
#loc8 = loc("multiply_57")
#loc9 = loc("add_63")
#loc10 = loc("multiply_73")
#loc11 = loc("add_79")
#loc12 = loc("multiply_90")
#loc13 = loc("add_96")
#loc14 = loc("multiply_106")
#loc15 = loc("add_112")
#loc16 = loc("multiply_123")
#loc17 = loc("add_129")
#loc18 = loc("multiply_139")
#loc19 = loc("add_145")
#loc20 = loc("multiply_157")
#loc21 = loc("add_163")
#loc22 = loc("multiply_173")
#loc23 = loc("add_179")
#loc24 = loc("multiply_189")
#loc25 = loc("add_195")
#loc26 = loc("multiply_207")
#loc27 = loc("add_213")
#loc28 = loc("multiply_223")
#loc29 = loc("add_229")
#loc30 = loc("multiply_240")
#loc31 = loc("add_246")
#loc32 = loc("multiply_256")
#loc33 = loc("add_262")
#loc34 = loc("multiply_273")
#loc35 = loc("add_279")
#loc36 = loc("multiply_289")
#loc37 = loc("add_295")
#loc38 = loc("multiply_306")
#loc39 = loc("add_312")
#loc40 = loc("multiply_322")
#loc41 = loc("add_328")
#loc42 = loc("multiply_339")
#loc43 = loc("add_345")
#loc44 = loc("multiply_355")
#loc45 = loc("add_361")
#loc46 = loc("multiply_372")
#loc47 = loc("add_378")
#loc48 = loc("multiply_388")
#loc49 = loc("add_394")
#loc50 = loc("multiply_406")
#loc51 = loc("add_412")
#loc52 = loc("multiply_422")
#loc53 = loc("add_428")
#loc54 = loc("multiply_438")
#loc55 = loc("add_444")
#loc56 = loc("multiply_456")
#loc57 = loc("add_462")
#loc58 = loc("multiply_472")
#loc59 = loc("add_478")
#loc60 = loc("multiply_489")
#loc61 = loc("add_495")
#loc62 = loc("multiply_505")
#loc63 = loc("add_511")
#loc64 = loc("multiply_522")
#loc65 = loc("add_528")
#loc66 = loc("multiply_538")
#loc67 = loc("add_544")
#loc68 = loc("multiply_555")
#loc69 = loc("add_561")
#loc70 = loc("multiply_571")
#loc71 = loc("add_577")
#loc72 = loc("multiply_588")
#loc73 = loc("add_594")
#loc74 = loc("multiply_604")
#loc75 = loc("add_610")
#loc76 = loc("multiply_621")
#loc77 = loc("add_627")
#loc78 = loc("multiply_637")
#loc79 = loc("add_643")
#loc80 = loc("multiply_655")
#loc81 = loc("add_661")
#loc82 = loc("multiply_671")
#loc83 = loc("add_677")
#loc84 = loc("multiply_687")
#loc85 = loc("add_693")
#loc86 = loc("multiply_705")
#loc87 = loc("add_711")
#loc88 = loc("multiply_721")
#loc89 = loc("add_727")
#loc90 = loc("multiply_738")
#loc91 = loc("add_744")
#loc92 = loc("multiply_754")
#loc93 = loc("add_760")
#loc94 = loc("multiply_771")
#loc95 = loc("add_777")
#loc96 = loc("multiply_787")
#loc97 = loc("add_793")
#loc98 = loc("multiply_805")
#loc99 = loc("add_811")
#loc100 = loc("multiply_821")
#loc101 = loc("add_827")
#loc102 = loc("multiply_841")
#loc103 = loc("add_847")
#loc104 = loc("multiply_859")
#loc105 = loc("add_865")
#loc106 = loc("multiply_877")
#loc107 = loc("add_883")
#loc108 = loc("multiply_893")
#loc109 = loc("add_899")
#loc110 = loc("multiply_909")
#loc111 = loc("add_915")
#loc112 = loc("multiply_925")
#loc113 = loc("add_931")
#loc114 = loc("multiply_941")
#loc115 = loc("add_947")
#loc116 = loc("multiply_957")
#loc117 = loc("add_963")
#loc118 = loc("multiply_974")
#loc119 = loc("add_980")
#loc120 = loc("multiply_992")
#loc121 = loc("add_998")
#loc122 = loc("multiply_1010")
#loc123 = loc("add_1016")
#loc124 = loc("multiply_1026")
#loc125 = loc("add_1032")
#loc126 = loc("multiply_1042")
#loc127 = loc("add_1048")
#loc128 = loc("multiply_1058")
#loc129 = loc("add_1064")
#loc130 = loc("multiply_1074")
#loc131 = loc("add_1080")
#loc132 = loc("multiply_1090")
#loc133 = loc("add_1096")
#loc134 = loc("multiply_1107")
#loc135 = loc("add_1113")
#loc136 = loc("multiply_1123")
#loc137 = loc("add_1129")
#loc138 = loc("multiply_1139")
#loc139 = loc("add_1145")
#loc140 = loc("multiply_1159")
#loc141 = loc("add_1165")
#loc142 = loc("multiply_1175")
#loc143 = loc("add_1181")
#loc144 = loc("multiply_1197")
#loc145 = loc("add_1203")
#loc146 = loc("multiply_1214")
#loc147 = loc("add_1220")
#loc148 = loc("multiply_1232")
#loc149 = loc("add_1238")
#loc150 = loc("multiply_1248")
#loc151 = loc("add_1254")
#loc152 = loc("multiply_1264")
#loc153 = loc("add_1270")
#loc154 = loc("multiply_1280")
#loc155 = loc("add_1286")
#loc156 = loc("multiply_1296")
#loc157 = loc("add_1302")
#loc158 = loc("multiply_1312")
#loc159 = loc("add_1318")
#loc160 = loc("multiply_1329")
#loc161 = loc("add_1335")
#loc162 = loc("multiply_1345")
#loc163 = loc("add_1351")
#loc164 = loc("multiply_1361")
#loc165 = loc("add_1367")
#loc166 = loc("multiply_1381")
#loc167 = loc("add_1387")
#loc168 = loc("multiply_1397")
#loc169 = loc("add_1403")
#loc170 = loc("multiply_1419")
#loc171 = loc("add_1425")
#loc172 = loc("multiply_1436")
#loc173 = loc("add_1442")
#loc174 = loc("multiply_1454")
#loc175 = loc("add_1460")
#loc176 = loc("multiply_1470")
#loc177 = loc("add_1476")
#loc178 = loc("multiply_1486")
#loc179 = loc("add_1492")
#loc180 = loc("multiply_1502")
#loc181 = loc("add_1508")
#loc182 = loc("multiply_1518")
#loc183 = loc("add_1524")
#loc184 = loc("multiply_1534")
#loc185 = loc("add_1540")
#loc186 = loc("multiply_1551")
#loc187 = loc("add_1557")
#loc188 = loc("multiply_1567")
#loc189 = loc("add_1573")
#loc190 = loc("multiply_1583")
#loc191 = loc("add_1589")
#loc192 = loc("multiply_1603")
#loc193 = loc("add_1609")
#loc194 = loc("multiply_1619")
#loc195 = loc("add_1625")
#loc196 = loc(unknown)
#loc197 = loc("ultralytics.nn.tasks.DetectionModel::model"(#loc1))
#loc198 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc197))
#loc199 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc197))
#loc200 = loc("ultralytics.nn.modules.block.C2f::2"(#loc197))
#loc201 = loc("ultralytics.nn.modules.conv.Conv::3"(#loc197))
#loc202 = loc("ultralytics.nn.modules.block.C2f::4"(#loc197))
#loc203 = loc("ultralytics.nn.modules.conv.Conv::5"(#loc197))
#loc204 = loc("ultralytics.nn.modules.block.C2f::6"(#loc197))
#loc205 = loc("ultralytics.nn.modules.conv.Conv::7"(#loc197))
#loc206 = loc("ultralytics.nn.modules.block.C2f::8"(#loc197))
#loc207 = loc("ultralytics.nn.modules.block.SPPF::9"(#loc197))
#loc208 = loc("torch.nn.modules.upsampling.Upsample::10"(#loc197))
#loc209 = loc("ultralytics.nn.modules.conv.Concat::11"(#loc197))
#loc210 = loc("ultralytics.nn.modules.block.C2f::12"(#loc197))
#loc211 = loc("torch.nn.modules.upsampling.Upsample::13"(#loc197))
#loc212 = loc("ultralytics.nn.modules.conv.Concat::14"(#loc197))
#loc213 = loc("ultralytics.nn.modules.block.C2f::15"(#loc197))
#loc214 = loc("ultralytics.nn.modules.head.Detect::22"(#loc197))
#loc215 = loc("ultralytics.nn.modules.conv.Conv::16"(#loc197))
#loc216 = loc("ultralytics.nn.modules.conv.Concat::17"(#loc197))
#loc217 = loc("ultralytics.nn.modules.block.C2f::18"(#loc197))
#loc218 = loc("ultralytics.nn.modules.conv.Conv::19"(#loc197))
#loc219 = loc("ultralytics.nn.modules.conv.Concat::20"(#loc197))
#loc220 = loc("ultralytics.nn.modules.block.C2f::21"(#loc197))
#loc221 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc198))
#loc222 = loc("torch.nn.modules.activation.SiLU::"(#loc198))
#loc223 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc199))
#loc224 = loc("sigmoid_30"(#loc199))
#loc225 = loc("multiply_31"(#loc199))
#loc226 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc200))
#loc227 = loc("index_48"(#loc200))
#loc228 = loc("index_49"(#loc200))
#loc229 = loc("ultralytics.nn.modules.block.Bottleneck::m.0"(#loc200))
#loc230 = loc("ultralytics.nn.modules.block.Bottleneck::m.1"(#loc200))
#loc231 = loc("ultralytics.nn.modules.block.Bottleneck::m.2"(#loc200))
#loc232 = loc("concatenate_149"(#loc200))
#loc233 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc200))
#loc234 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc201))
#loc235 = loc("sigmoid_180"(#loc201))
#loc236 = loc("multiply_181"(#loc201))
#loc237 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc202))
#loc238 = loc("index_198"(#loc202))
#loc239 = loc("index_199"(#loc202))
#loc240 = loc("ultralytics.nn.modules.block.Bottleneck::0"(#loc202))
#loc241 = loc("ultralytics.nn.modules.block.Bottleneck::1"(#loc202))
#loc242 = loc("ultralytics.nn.modules.block.Bottleneck::2"(#loc202))
#loc243 = loc("ultralytics.nn.modules.block.Bottleneck::3"(#loc202))
#loc244 = loc("ultralytics.nn.modules.block.Bottleneck::4"(#loc202))
#loc245 = loc("ultralytics.nn.modules.block.Bottleneck::5"(#loc202))
#loc246 = loc("concatenate_398"(#loc202))
#loc247 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc202))
#loc248 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc203))
#loc249 = loc("sigmoid_429"(#loc203))
#loc250 = loc("multiply_430"(#loc203))
#loc251 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc204))
#loc252 = loc("index_447"(#loc204))
#loc253 = loc("index_448"(#loc204))
#loc254 = loc("ultralytics.nn.modules.block.Bottleneck::0"(#loc204))
#loc255 = loc("ultralytics.nn.modules.block.Bottleneck::1"(#loc204))
#loc256 = loc("ultralytics.nn.modules.block.Bottleneck::2"(#loc204))
#loc257 = loc("ultralytics.nn.modules.block.Bottleneck::3"(#loc204))
#loc258 = loc("ultralytics.nn.modules.block.Bottleneck::4"(#loc204))
#loc259 = loc("ultralytics.nn.modules.block.Bottleneck::5"(#loc204))
#loc260 = loc("concatenate_647"(#loc204))
#loc261 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc204))
#loc262 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc205))
#loc263 = loc("sigmoid_678"(#loc205))
#loc264 = loc("multiply_679"(#loc205))
#loc265 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc206))
#loc266 = loc("index_696"(#loc206))
#loc267 = loc("index_697"(#loc206))
#loc268 = loc("ultralytics.nn.modules.block.Bottleneck::0"(#loc206))
#loc269 = loc("ultralytics.nn.modules.block.Bottleneck::1"(#loc206))
#loc270 = loc("ultralytics.nn.modules.block.Bottleneck::2"(#loc206))
#loc271 = loc("concatenate_797"(#loc206))
#loc272 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc206))
#loc273 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc207))
#loc274 = loc("torch.nn.modules.pooling.MaxPool2d::m"(#loc207))
#loc275 = loc("max_pool2d_831.dc.transpose.0"(#loc207))
#loc276 = loc("max_pool2d_831.dc.transpose.1"(#loc207))
#loc277 = loc("max_pool2d_831.dc.max_pool2d.2"(#loc207))
#loc278 = loc("max_pool2d_831.dc.transpose.3"(#loc207))
#loc279 = loc("max_pool2d_831.dc.transpose.4"(#loc207))
#loc280 = loc("max_pool2d_832.dc.transpose.0"(#loc207))
#loc281 = loc("max_pool2d_832.dc.transpose.1"(#loc207))
#loc282 = loc("max_pool2d_832.dc.max_pool2d.2"(#loc207))
#loc283 = loc("max_pool2d_832.dc.transpose.3"(#loc207))
#loc284 = loc("max_pool2d_832.dc.transpose.4"(#loc207))
#loc285 = loc("concatenate_833"(#loc207))
#loc286 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc207))
#loc287 = loc("resize2d_850.dc.transpose.0"(#loc208))
#loc288 = loc("resize2d_850.dc.transpose.1"(#loc208))
#loc289 = loc("resize2d_850.dc.upsample2d.2"(#loc208))
#loc290 = loc("resize2d_850.dc.transpose.3"(#loc208))
#loc291 = loc("resize2d_850.dc.transpose.4"(#loc208))
#loc292 = loc("concatenate_851"(#loc209))
#loc293 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc210))
#loc294 = loc("index_868"(#loc210))
#loc295 = loc("index_869"(#loc210))
#loc296 = loc("ultralytics.nn.modules.block.Bottleneck::0"(#loc210))
#loc297 = loc("ultralytics.nn.modules.block.Bottleneck::1"(#loc210))
#loc298 = loc("ultralytics.nn.modules.block.Bottleneck::2"(#loc210))
#loc299 = loc("concatenate_966"(#loc210))
#loc300 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc210))
#loc301 = loc("resize2d_983.dc.transpose.0"(#loc211))
#loc302 = loc("resize2d_983.dc.transpose.1"(#loc211))
#loc303 = loc("resize2d_983.dc.upsample2d.2"(#loc211))
#loc304 = loc("resize2d_983.dc.transpose.3"(#loc211))
#loc305 = loc("resize2d_983.dc.transpose.4"(#loc211))
#loc306 = loc("concatenate_984"(#loc212))
#loc307 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc213))
#loc308 = loc("index_1001"(#loc213))
#loc309 = loc("index_1002"(#loc213))
#loc310 = loc("ultralytics.nn.modules.block.Bottleneck::0"(#loc213))
#loc311 = loc("ultralytics.nn.modules.block.Bottleneck::1"(#loc213))
#loc312 = loc("ultralytics.nn.modules.block.Bottleneck::2"(#loc213))
#loc313 = loc("concatenate_1099"(#loc213))
#loc314 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc213))
#loc315 = loc("torch.nn.modules.container.Sequential::0"(#loc214))
#loc316 = loc("concatenate_1188"(#loc214))
#loc317 = loc("reshape_1189"(#loc214))
#loc318 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc215))
#loc319 = loc("sigmoid_1204"(#loc215))
#loc320 = loc("multiply_1205"(#loc215))
#loc321 = loc("concatenate_1206"(#loc216))
#loc322 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc217))
#loc323 = loc("index_1223"(#loc217))
#loc324 = loc("index_1224"(#loc217))
#loc325 = loc("ultralytics.nn.modules.block.Bottleneck::0"(#loc217))
#loc326 = loc("ultralytics.nn.modules.block.Bottleneck::1"(#loc217))
#loc327 = loc("ultralytics.nn.modules.block.Bottleneck::2"(#loc217))
#loc328 = loc("concatenate_1321"(#loc217))
#loc329 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc217))
#loc330 = loc("torch.nn.modules.container.Sequential::1"(#loc214))
#loc331 = loc("concatenate_1410"(#loc214))
#loc332 = loc("reshape_1411"(#loc214))
#loc333 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc218))
#loc334 = loc("sigmoid_1426"(#loc218))
#loc335 = loc("multiply_1427"(#loc218))
#loc336 = loc("concatenate_1428"(#loc219))
#loc337 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc220))
#loc338 = loc("index_1445"(#loc220))
#loc339 = loc("index_1446"(#loc220))
#loc340 = loc("ultralytics.nn.modules.block.Bottleneck::0"(#loc220))
#loc341 = loc("ultralytics.nn.modules.block.Bottleneck::1"(#loc220))
#loc342 = loc("ultralytics.nn.modules.block.Bottleneck::2"(#loc220))
#loc343 = loc("concatenate_1543"(#loc220))
#loc344 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc220))
#loc345 = loc("torch.nn.modules.container.Sequential::2"(#loc214))
#loc346 = loc("concatenate_1632"(#loc214))
#loc347 = loc("reshape_1633"(#loc214))
#loc348 = loc("concatenate_1634"(#loc214))
#loc349 = loc("index_1635"(#loc214))
#loc350 = loc("ultralytics.nn.modules.block.DFL::dfl"(#loc214))
#loc351 = loc("index_1641"(#loc214))
#loc352 = loc("subtract_1642"(#loc214))
#loc353 = loc("index_1643"(#loc214))
#loc354 = loc("add_1644"(#loc214))
#loc355 = loc("add_1645"(#loc214))
#loc356 = loc("divide_1646"(#loc214))
#loc357 = loc("subtract_1647"(#loc214))
#loc358 = loc("concatenate_1648"(#loc214))
#loc359 = loc("multiply_1649"(#loc214))
#loc360 = loc("index_1650"(#loc214))
#loc361 = loc("sigmoid_1651"(#loc214))
#loc362 = loc("concatenate_1652"(#loc214))
#loc363 = loc("conv2d_0.dc.transpose.0"(#loc221))
#loc364 = loc("conv2d_0.dc.transpose.1"(#loc221))
#loc365 = loc("conv2d_0.dc.conv2d.2"(#loc221))
#loc366 = loc("conv2d_0.dc.transpose.3"(#loc221))
#loc367 = loc("conv2d_0.dc.transpose.4"(#loc221))
#loc368 = loc("sigmoid_14"(#loc222))
#loc369 = loc("multiply_15"(#loc222))
#loc370 = loc("conv2d_16.dc.transpose.0"(#loc223))
#loc371 = loc("conv2d_16.dc.transpose.1"(#loc223))
#loc372 = loc("conv2d_16.dc.conv2d.2"(#loc223))
#loc373 = loc("conv2d_16.dc.transpose.3"(#loc223))
#loc374 = loc("conv2d_16.dc.transpose.4"(#loc223))
#loc375 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc226))
#loc376 = loc("sigmoid_46"(#loc226))
#loc377 = loc("multiply_47"(#loc226))
#loc378 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc229))
#loc379 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc229))
#loc380 = loc("add_82"(#loc229))
#loc381 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc230))
#loc382 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc230))
#loc383 = loc("add_115"(#loc230))
#loc384 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc231))
#loc385 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc231))
#loc386 = loc("add_148"(#loc231))
#loc387 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc233))
#loc388 = loc("sigmoid_164"(#loc233))
#loc389 = loc("multiply_165"(#loc233))
#loc390 = loc("conv2d_166.dc.transpose.0"(#loc234))
#loc391 = loc("conv2d_166.dc.transpose.1"(#loc234))
#loc392 = loc("conv2d_166.dc.conv2d.2"(#loc234))
#loc393 = loc("conv2d_166.dc.transpose.3"(#loc234))
#loc394 = loc("conv2d_166.dc.transpose.4"(#loc234))
#loc395 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc237))
#loc396 = loc("sigmoid_196"(#loc237))
#loc397 = loc("multiply_197"(#loc237))
#loc398 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc240))
#loc399 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc240))
#loc400 = loc("add_232"(#loc240))
#loc401 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc241))
#loc402 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc241))
#loc403 = loc("add_265"(#loc241))
#loc404 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc242))
#loc405 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc242))
#loc406 = loc("add_298"(#loc242))
#loc407 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc243))
#loc408 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc243))
#loc409 = loc("add_331"(#loc243))
#loc410 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc244))
#loc411 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc244))
#loc412 = loc("add_364"(#loc244))
#loc413 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc245))
#loc414 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc245))
#loc415 = loc("add_397"(#loc245))
#loc416 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc247))
#loc417 = loc("sigmoid_413"(#loc247))
#loc418 = loc("multiply_414"(#loc247))
#loc419 = loc("conv2d_415.dc.transpose.0"(#loc248))
#loc420 = loc("conv2d_415.dc.transpose.1"(#loc248))
#loc421 = loc("conv2d_415.dc.conv2d.2"(#loc248))
#loc422 = loc("conv2d_415.dc.transpose.3"(#loc248))
#loc423 = loc("conv2d_415.dc.transpose.4"(#loc248))
#loc424 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc251))
#loc425 = loc("sigmoid_445"(#loc251))
#loc426 = loc("multiply_446"(#loc251))
#loc427 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc254))
#loc428 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc254))
#loc429 = loc("add_481"(#loc254))
#loc430 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc255))
#loc431 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc255))
#loc432 = loc("add_514"(#loc255))
#loc433 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc256))
#loc434 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc256))
#loc435 = loc("add_547"(#loc256))
#loc436 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc257))
#loc437 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc257))
#loc438 = loc("add_580"(#loc257))
#loc439 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc258))
#loc440 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc258))
#loc441 = loc("add_613"(#loc258))
#loc442 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc259))
#loc443 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc259))
#loc444 = loc("add_646"(#loc259))
#loc445 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc261))
#loc446 = loc("sigmoid_662"(#loc261))
#loc447 = loc("multiply_663"(#loc261))
#loc448 = loc("conv2d_664.dc.transpose.0"(#loc262))
#loc449 = loc("conv2d_664.dc.transpose.1"(#loc262))
#loc450 = loc("conv2d_664.dc.conv2d.2"(#loc262))
#loc451 = loc("conv2d_664.dc.transpose.3"(#loc262))
#loc452 = loc("conv2d_664.dc.transpose.4"(#loc262))
#loc453 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc265))
#loc454 = loc("sigmoid_694"(#loc265))
#loc455 = loc("multiply_695"(#loc265))
#loc456 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc268))
#loc457 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc268))
#loc458 = loc("add_730"(#loc268))
#loc459 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc269))
#loc460 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc269))
#loc461 = loc("add_763"(#loc269))
#loc462 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc270))
#loc463 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc270))
#loc464 = loc("add_796"(#loc270))
#loc465 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc272))
#loc466 = loc("sigmoid_812"(#loc272))
#loc467 = loc("multiply_813"(#loc272))
#loc468 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc273))
#loc469 = loc("sigmoid_828"(#loc273))
#loc470 = loc("multiply_829"(#loc273))
#loc471 = loc("max_pool2d_830.dc.transpose.0"(#loc274))
#loc472 = loc("max_pool2d_830.dc.transpose.1"(#loc274))
#loc473 = loc("max_pool2d_830.dc.max_pool2d.2"(#loc274))
#loc474 = loc("max_pool2d_830.dc.transpose.3"(#loc274))
#loc475 = loc("max_pool2d_830.dc.transpose.4"(#loc274))
#loc476 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc286))
#loc477 = loc("sigmoid_848"(#loc286))
#loc478 = loc("multiply_849"(#loc286))
#loc479 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc293))
#loc480 = loc("sigmoid_866"(#loc293))
#loc481 = loc("multiply_867"(#loc293))
#loc482 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc296))
#loc483 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc296))
#loc484 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc297))
#loc485 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc297))
#loc486 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc298))
#loc487 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc298))
#loc488 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc300))
#loc489 = loc("sigmoid_981"(#loc300))
#loc490 = loc("multiply_982"(#loc300))
#loc491 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc307))
#loc492 = loc("sigmoid_999"(#loc307))
#loc493 = loc("multiply_1000"(#loc307))
#loc494 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc310))
#loc495 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc310))
#loc496 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc311))
#loc497 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc311))
#loc498 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc312))
#loc499 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc312))
#loc500 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc314))
#loc501 = loc("sigmoid_1114"(#loc314))
#loc502 = loc("multiply_1115"(#loc314))
#loc503 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc315))
#loc504 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc315))
#loc505 = loc("torch.nn.modules.conv.Conv2d::2"(#loc315))
#loc506 = loc("conv2d_1190.dc.transpose.0"(#loc318))
#loc507 = loc("conv2d_1190.dc.transpose.1"(#loc318))
#loc508 = loc("conv2d_1190.dc.conv2d.2"(#loc318))
#loc509 = loc("conv2d_1190.dc.transpose.3"(#loc318))
#loc510 = loc("conv2d_1190.dc.transpose.4"(#loc318))
#loc511 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc322))
#loc512 = loc("sigmoid_1221"(#loc322))
#loc513 = loc("multiply_1222"(#loc322))
#loc514 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc325))
#loc515 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc325))
#loc516 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc326))
#loc517 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc326))
#loc518 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc327))
#loc519 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc327))
#loc520 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc329))
#loc521 = loc("sigmoid_1336"(#loc329))
#loc522 = loc("multiply_1337"(#loc329))
#loc523 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc330))
#loc524 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc330))
#loc525 = loc("torch.nn.modules.conv.Conv2d::2"(#loc330))
#loc526 = loc("conv2d_1412.dc.transpose.0"(#loc333))
#loc527 = loc("conv2d_1412.dc.transpose.1"(#loc333))
#loc528 = loc("conv2d_1412.dc.conv2d.2"(#loc333))
#loc529 = loc("conv2d_1412.dc.transpose.3"(#loc333))
#loc530 = loc("conv2d_1412.dc.transpose.4"(#loc333))
#loc531 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc337))
#loc532 = loc("sigmoid_1443"(#loc337))
#loc533 = loc("multiply_1444"(#loc337))
#loc534 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc340))
#loc535 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc340))
#loc536 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc341))
#loc537 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc341))
#loc538 = loc("ultralytics.nn.modules.conv.Conv::cv1"(#loc342))
#loc539 = loc("ultralytics.nn.modules.conv.Conv::cv2"(#loc342))
#loc540 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc344))
#loc541 = loc("sigmoid_1558"(#loc344))
#loc542 = loc("multiply_1559"(#loc344))
#loc543 = loc("ultralytics.nn.modules.conv.Conv::0"(#loc345))
#loc544 = loc("ultralytics.nn.modules.conv.Conv::1"(#loc345))
#loc545 = loc("torch.nn.modules.conv.Conv2d::2"(#loc345))
#loc546 = loc("reshape_1636"(#loc350))
#loc547 = loc("transpose_1637"(#loc350))
#loc548 = loc("softmax_1638"(#loc350))
#loc549 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc350))
#loc550 = loc("reshape_1640.dc.squeeze.0"(#loc350))
#loc551 = loc("conv2d_32.dc.transpose.0"(#loc375))
#loc552 = loc("conv2d_32.dc.transpose.1"(#loc375))
#loc553 = loc("conv2d_32.dc.conv2d.2"(#loc375))
#loc554 = loc("conv2d_32.dc.transpose.3"(#loc375))
#loc555 = loc("conv2d_32.dc.transpose.4"(#loc375))
#loc556 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc378))
#loc557 = loc("sigmoid_64"(#loc378))
#loc558 = loc("multiply_65"(#loc378))
#loc559 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc379))
#loc560 = loc("sigmoid_80"(#loc379))
#loc561 = loc("multiply_81"(#loc379))
#loc562 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc381))
#loc563 = loc("sigmoid_97"(#loc381))
#loc564 = loc("multiply_98"(#loc381))
#loc565 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc382))
#loc566 = loc("sigmoid_113"(#loc382))
#loc567 = loc("multiply_114"(#loc382))
#loc568 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc384))
#loc569 = loc("sigmoid_130"(#loc384))
#loc570 = loc("multiply_131"(#loc384))
#loc571 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc385))
#loc572 = loc("sigmoid_146"(#loc385))
#loc573 = loc("multiply_147"(#loc385))
#loc574 = loc("conv2d_150.dc.transpose.0"(#loc387))
#loc575 = loc("conv2d_150.dc.transpose.1"(#loc387))
#loc576 = loc("conv2d_150.dc.conv2d.2"(#loc387))
#loc577 = loc("conv2d_150.dc.transpose.3"(#loc387))
#loc578 = loc("conv2d_150.dc.transpose.4"(#loc387))
#loc579 = loc("conv2d_182.dc.transpose.0"(#loc395))
#loc580 = loc("conv2d_182.dc.transpose.1"(#loc395))
#loc581 = loc("conv2d_182.dc.conv2d.2"(#loc395))
#loc582 = loc("conv2d_182.dc.transpose.3"(#loc395))
#loc583 = loc("conv2d_182.dc.transpose.4"(#loc395))
#loc584 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc398))
#loc585 = loc("sigmoid_214"(#loc398))
#loc586 = loc("multiply_215"(#loc398))
#loc587 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc399))
#loc588 = loc("sigmoid_230"(#loc399))
#loc589 = loc("multiply_231"(#loc399))
#loc590 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc401))
#loc591 = loc("sigmoid_247"(#loc401))
#loc592 = loc("multiply_248"(#loc401))
#loc593 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc402))
#loc594 = loc("sigmoid_263"(#loc402))
#loc595 = loc("multiply_264"(#loc402))
#loc596 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc404))
#loc597 = loc("sigmoid_280"(#loc404))
#loc598 = loc("multiply_281"(#loc404))
#loc599 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc405))
#loc600 = loc("sigmoid_296"(#loc405))
#loc601 = loc("multiply_297"(#loc405))
#loc602 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc407))
#loc603 = loc("sigmoid_313"(#loc407))
#loc604 = loc("multiply_314"(#loc407))
#loc605 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc408))
#loc606 = loc("sigmoid_329"(#loc408))
#loc607 = loc("multiply_330"(#loc408))
#loc608 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc410))
#loc609 = loc("sigmoid_346"(#loc410))
#loc610 = loc("multiply_347"(#loc410))
#loc611 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc411))
#loc612 = loc("sigmoid_362"(#loc411))
#loc613 = loc("multiply_363"(#loc411))
#loc614 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc413))
#loc615 = loc("sigmoid_379"(#loc413))
#loc616 = loc("multiply_380"(#loc413))
#loc617 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc414))
#loc618 = loc("sigmoid_395"(#loc414))
#loc619 = loc("multiply_396"(#loc414))
#loc620 = loc("conv2d_399.dc.transpose.0"(#loc416))
#loc621 = loc("conv2d_399.dc.transpose.1"(#loc416))
#loc622 = loc("conv2d_399.dc.conv2d.2"(#loc416))
#loc623 = loc("conv2d_399.dc.transpose.3"(#loc416))
#loc624 = loc("conv2d_399.dc.transpose.4"(#loc416))
#loc625 = loc("conv2d_431.dc.transpose.0"(#loc424))
#loc626 = loc("conv2d_431.dc.transpose.1"(#loc424))
#loc627 = loc("conv2d_431.dc.conv2d.2"(#loc424))
#loc628 = loc("conv2d_431.dc.transpose.3"(#loc424))
#loc629 = loc("conv2d_431.dc.transpose.4"(#loc424))
#loc630 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc427))
#loc631 = loc("sigmoid_463"(#loc427))
#loc632 = loc("multiply_464"(#loc427))
#loc633 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc428))
#loc634 = loc("sigmoid_479"(#loc428))
#loc635 = loc("multiply_480"(#loc428))
#loc636 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc430))
#loc637 = loc("sigmoid_496"(#loc430))
#loc638 = loc("multiply_497"(#loc430))
#loc639 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc431))
#loc640 = loc("sigmoid_512"(#loc431))
#loc641 = loc("multiply_513"(#loc431))
#loc642 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc433))
#loc643 = loc("sigmoid_529"(#loc433))
#loc644 = loc("multiply_530"(#loc433))
#loc645 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc434))
#loc646 = loc("sigmoid_545"(#loc434))
#loc647 = loc("multiply_546"(#loc434))
#loc648 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc436))
#loc649 = loc("sigmoid_562"(#loc436))
#loc650 = loc("multiply_563"(#loc436))
#loc651 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc437))
#loc652 = loc("sigmoid_578"(#loc437))
#loc653 = loc("multiply_579"(#loc437))
#loc654 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc439))
#loc655 = loc("sigmoid_595"(#loc439))
#loc656 = loc("multiply_596"(#loc439))
#loc657 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc440))
#loc658 = loc("sigmoid_611"(#loc440))
#loc659 = loc("multiply_612"(#loc440))
#loc660 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc442))
#loc661 = loc("sigmoid_628"(#loc442))
#loc662 = loc("multiply_629"(#loc442))
#loc663 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc443))
#loc664 = loc("sigmoid_644"(#loc443))
#loc665 = loc("multiply_645"(#loc443))
#loc666 = loc("conv2d_648.dc.transpose.0"(#loc445))
#loc667 = loc("conv2d_648.dc.transpose.1"(#loc445))
#loc668 = loc("conv2d_648.dc.conv2d.2"(#loc445))
#loc669 = loc("conv2d_648.dc.transpose.3"(#loc445))
#loc670 = loc("conv2d_648.dc.transpose.4"(#loc445))
#loc671 = loc("conv2d_680.dc.transpose.0"(#loc453))
#loc672 = loc("conv2d_680.dc.transpose.1"(#loc453))
#loc673 = loc("conv2d_680.dc.conv2d.2"(#loc453))
#loc674 = loc("conv2d_680.dc.transpose.3"(#loc453))
#loc675 = loc("conv2d_680.dc.transpose.4"(#loc453))
#loc676 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc456))
#loc677 = loc("sigmoid_712"(#loc456))
#loc678 = loc("multiply_713"(#loc456))
#loc679 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc457))
#loc680 = loc("sigmoid_728"(#loc457))
#loc681 = loc("multiply_729"(#loc457))
#loc682 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc459))
#loc683 = loc("sigmoid_745"(#loc459))
#loc684 = loc("multiply_746"(#loc459))
#loc685 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc460))
#loc686 = loc("sigmoid_761"(#loc460))
#loc687 = loc("multiply_762"(#loc460))
#loc688 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc462))
#loc689 = loc("sigmoid_778"(#loc462))
#loc690 = loc("multiply_779"(#loc462))
#loc691 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc463))
#loc692 = loc("sigmoid_794"(#loc463))
#loc693 = loc("multiply_795"(#loc463))
#loc694 = loc("conv2d_798.dc.transpose.0"(#loc465))
#loc695 = loc("conv2d_798.dc.transpose.1"(#loc465))
#loc696 = loc("conv2d_798.dc.conv2d.2"(#loc465))
#loc697 = loc("conv2d_798.dc.transpose.3"(#loc465))
#loc698 = loc("conv2d_798.dc.transpose.4"(#loc465))
#loc699 = loc("conv2d_814.dc.transpose.0"(#loc468))
#loc700 = loc("conv2d_814.dc.transpose.1"(#loc468))
#loc701 = loc("conv2d_814.dc.conv2d.2"(#loc468))
#loc702 = loc("conv2d_814.dc.transpose.3"(#loc468))
#loc703 = loc("conv2d_814.dc.transpose.4"(#loc468))
#loc704 = loc("conv2d_834.dc.transpose.0"(#loc476))
#loc705 = loc("conv2d_834.dc.transpose.1"(#loc476))
#loc706 = loc("conv2d_834.dc.conv2d.2"(#loc476))
#loc707 = loc("conv2d_834.dc.transpose.3"(#loc476))
#loc708 = loc("conv2d_834.dc.transpose.4"(#loc476))
#loc709 = loc("conv2d_852.dc.transpose.0"(#loc479))
#loc710 = loc("conv2d_852.dc.transpose.1"(#loc479))
#loc711 = loc("conv2d_852.dc.conv2d.2"(#loc479))
#loc712 = loc("conv2d_852.dc.transpose.3"(#loc479))
#loc713 = loc("conv2d_852.dc.transpose.4"(#loc479))
#loc714 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc482))
#loc715 = loc("sigmoid_884"(#loc482))
#loc716 = loc("multiply_885"(#loc482))
#loc717 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc483))
#loc718 = loc("sigmoid_900"(#loc483))
#loc719 = loc("multiply_901"(#loc483))
#loc720 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc484))
#loc721 = loc("sigmoid_916"(#loc484))
#loc722 = loc("multiply_917"(#loc484))
#loc723 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc485))
#loc724 = loc("sigmoid_932"(#loc485))
#loc725 = loc("multiply_933"(#loc485))
#loc726 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc486))
#loc727 = loc("sigmoid_948"(#loc486))
#loc728 = loc("multiply_949"(#loc486))
#loc729 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc487))
#loc730 = loc("sigmoid_964"(#loc487))
#loc731 = loc("multiply_965"(#loc487))
#loc732 = loc("conv2d_967.dc.transpose.0"(#loc488))
#loc733 = loc("conv2d_967.dc.transpose.1"(#loc488))
#loc734 = loc("conv2d_967.dc.conv2d.2"(#loc488))
#loc735 = loc("conv2d_967.dc.transpose.3"(#loc488))
#loc736 = loc("conv2d_967.dc.transpose.4"(#loc488))
#loc737 = loc("conv2d_985.dc.transpose.0"(#loc491))
#loc738 = loc("conv2d_985.dc.transpose.1"(#loc491))
#loc739 = loc("conv2d_985.dc.conv2d.2"(#loc491))
#loc740 = loc("conv2d_985.dc.transpose.3"(#loc491))
#loc741 = loc("conv2d_985.dc.transpose.4"(#loc491))
#loc742 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc494))
#loc743 = loc("sigmoid_1017"(#loc494))
#loc744 = loc("multiply_1018"(#loc494))
#loc745 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc495))
#loc746 = loc("sigmoid_1033"(#loc495))
#loc747 = loc("multiply_1034"(#loc495))
#loc748 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc496))
#loc749 = loc("sigmoid_1049"(#loc496))
#loc750 = loc("multiply_1050"(#loc496))
#loc751 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc497))
#loc752 = loc("sigmoid_1065"(#loc497))
#loc753 = loc("multiply_1066"(#loc497))
#loc754 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc498))
#loc755 = loc("sigmoid_1081"(#loc498))
#loc756 = loc("multiply_1082"(#loc498))
#loc757 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc499))
#loc758 = loc("sigmoid_1097"(#loc499))
#loc759 = loc("multiply_1098"(#loc499))
#loc760 = loc("conv2d_1100.dc.transpose.0"(#loc500))
#loc761 = loc("conv2d_1100.dc.transpose.1"(#loc500))
#loc762 = loc("conv2d_1100.dc.conv2d.2"(#loc500))
#loc763 = loc("conv2d_1100.dc.transpose.3"(#loc500))
#loc764 = loc("conv2d_1100.dc.transpose.4"(#loc500))
#loc765 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc503))
#loc766 = loc("sigmoid_1130"(#loc503))
#loc767 = loc("multiply_1131"(#loc503))
#loc768 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc504))
#loc769 = loc("sigmoid_1146"(#loc504))
#loc770 = loc("multiply_1147"(#loc504))
#loc771 = loc("conv2d_1148.dc.transpose.0"(#loc505))
#loc772 = loc("conv2d_1148.dc.transpose.1"(#loc505))
#loc773 = loc("conv2d_1148.dc.conv2d.4"(#loc505))
#loc774 = loc("conv2d_1148.dc.transpose.5"(#loc505))
#loc775 = loc("conv2d_1148.dc.transpose.6"(#loc505))
#loc776 = loc("sigmoid_1166"(#loc503))
#loc777 = loc("multiply_1167"(#loc503))
#loc778 = loc("sigmoid_1182"(#loc504))
#loc779 = loc("multiply_1183"(#loc504))
#loc780 = loc("conv2d_1184.dc.transpose.0"(#loc505))
#loc781 = loc("conv2d_1184.dc.transpose.1"(#loc505))
#loc782 = loc("conv2d_1184.dc.conv2d.4"(#loc505))
#loc783 = loc("conv2d_1184.dc.transpose.5"(#loc505))
#loc784 = loc("conv2d_1184.dc.transpose.6"(#loc505))
#loc785 = loc("conv2d_1207.dc.transpose.0"(#loc511))
#loc786 = loc("conv2d_1207.dc.transpose.1"(#loc511))
#loc787 = loc("conv2d_1207.dc.conv2d.2"(#loc511))
#loc788 = loc("conv2d_1207.dc.transpose.3"(#loc511))
#loc789 = loc("conv2d_1207.dc.transpose.4"(#loc511))
#loc790 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc514))
#loc791 = loc("sigmoid_1239"(#loc514))
#loc792 = loc("multiply_1240"(#loc514))
#loc793 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc515))
#loc794 = loc("sigmoid_1255"(#loc515))
#loc795 = loc("multiply_1256"(#loc515))
#loc796 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc516))
#loc797 = loc("sigmoid_1271"(#loc516))
#loc798 = loc("multiply_1272"(#loc516))
#loc799 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc517))
#loc800 = loc("sigmoid_1287"(#loc517))
#loc801 = loc("multiply_1288"(#loc517))
#loc802 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc518))
#loc803 = loc("sigmoid_1303"(#loc518))
#loc804 = loc("multiply_1304"(#loc518))
#loc805 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc519))
#loc806 = loc("sigmoid_1319"(#loc519))
#loc807 = loc("multiply_1320"(#loc519))
#loc808 = loc("conv2d_1322.dc.transpose.0"(#loc520))
#loc809 = loc("conv2d_1322.dc.transpose.1"(#loc520))
#loc810 = loc("conv2d_1322.dc.conv2d.2"(#loc520))
#loc811 = loc("conv2d_1322.dc.transpose.3"(#loc520))
#loc812 = loc("conv2d_1322.dc.transpose.4"(#loc520))
#loc813 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc523))
#loc814 = loc("sigmoid_1352"(#loc523))
#loc815 = loc("multiply_1353"(#loc523))
#loc816 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc524))
#loc817 = loc("sigmoid_1368"(#loc524))
#loc818 = loc("multiply_1369"(#loc524))
#loc819 = loc("conv2d_1370.dc.transpose.0"(#loc525))
#loc820 = loc("conv2d_1370.dc.transpose.1"(#loc525))
#loc821 = loc("conv2d_1370.dc.conv2d.4"(#loc525))
#loc822 = loc("conv2d_1370.dc.transpose.5"(#loc525))
#loc823 = loc("conv2d_1370.dc.transpose.6"(#loc525))
#loc824 = loc("sigmoid_1388"(#loc523))
#loc825 = loc("multiply_1389"(#loc523))
#loc826 = loc("sigmoid_1404"(#loc524))
#loc827 = loc("multiply_1405"(#loc524))
#loc828 = loc("conv2d_1406.dc.transpose.0"(#loc525))
#loc829 = loc("conv2d_1406.dc.transpose.1"(#loc525))
#loc830 = loc("conv2d_1406.dc.conv2d.4"(#loc525))
#loc831 = loc("conv2d_1406.dc.transpose.5"(#loc525))
#loc832 = loc("conv2d_1406.dc.transpose.6"(#loc525))
#loc833 = loc("conv2d_1429.dc.transpose.0"(#loc531))
#loc834 = loc("conv2d_1429.dc.transpose.1"(#loc531))
#loc835 = loc("conv2d_1429.dc.conv2d.2"(#loc531))
#loc836 = loc("conv2d_1429.dc.transpose.3"(#loc531))
#loc837 = loc("conv2d_1429.dc.transpose.4"(#loc531))
#loc838 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc534))
#loc839 = loc("sigmoid_1461"(#loc534))
#loc840 = loc("multiply_1462"(#loc534))
#loc841 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc535))
#loc842 = loc("sigmoid_1477"(#loc535))
#loc843 = loc("multiply_1478"(#loc535))
#loc844 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc536))
#loc845 = loc("sigmoid_1493"(#loc536))
#loc846 = loc("multiply_1494"(#loc536))
#loc847 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc537))
#loc848 = loc("sigmoid_1509"(#loc537))
#loc849 = loc("multiply_1510"(#loc537))
#loc850 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc538))
#loc851 = loc("sigmoid_1525"(#loc538))
#loc852 = loc("multiply_1526"(#loc538))
#loc853 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc539))
#loc854 = loc("sigmoid_1541"(#loc539))
#loc855 = loc("multiply_1542"(#loc539))
#loc856 = loc("conv2d_1544.dc.transpose.0"(#loc540))
#loc857 = loc("conv2d_1544.dc.transpose.1"(#loc540))
#loc858 = loc("conv2d_1544.dc.conv2d.2"(#loc540))
#loc859 = loc("conv2d_1544.dc.transpose.3"(#loc540))
#loc860 = loc("conv2d_1544.dc.transpose.4"(#loc540))
#loc861 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc543))
#loc862 = loc("sigmoid_1574"(#loc543))
#loc863 = loc("multiply_1575"(#loc543))
#loc864 = loc("torch.nn.modules.conv.Conv2d::conv"(#loc544))
#loc865 = loc("sigmoid_1590"(#loc544))
#loc866 = loc("multiply_1591"(#loc544))
#loc867 = loc("conv2d_1592.dc.transpose.0"(#loc545))
#loc868 = loc("conv2d_1592.dc.transpose.1"(#loc545))
#loc869 = loc("conv2d_1592.dc.conv2d.4"(#loc545))
#loc870 = loc("conv2d_1592.dc.transpose.5"(#loc545))
#loc871 = loc("conv2d_1592.dc.transpose.6"(#loc545))
#loc872 = loc("sigmoid_1610"(#loc543))
#loc873 = loc("multiply_1611"(#loc543))
#loc874 = loc("sigmoid_1626"(#loc544))
#loc875 = loc("multiply_1627"(#loc544))
#loc876 = loc("conv2d_1628.dc.transpose.0"(#loc545))
#loc877 = loc("conv2d_1628.dc.transpose.1"(#loc545))
#loc878 = loc("conv2d_1628.dc.conv2d.4"(#loc545))
#loc879 = loc("conv2d_1628.dc.transpose.5"(#loc545))
#loc880 = loc("conv2d_1628.dc.transpose.6"(#loc545))
#loc881 = loc("conv2d_1639.dc.transpose.0"(#loc549))
#loc882 = loc("conv2d_1639.dc.transpose.1"(#loc549))
#loc883 = loc("conv2d_1639.dc.conv2d.2"(#loc549))
#loc884 = loc("conv2d_1639.dc.transpose.3"(#loc549))
#loc885 = loc("conv2d_1639.dc.transpose.4"(#loc549))
#loc886 = loc("conv2d_50.dc.transpose.0"(#loc556))
#loc887 = loc("conv2d_50.dc.transpose.1"(#loc556))
#loc888 = loc("conv2d_50.dc.conv2d.2"(#loc556))
#loc889 = loc("conv2d_50.dc.transpose.3"(#loc556))
#loc890 = loc("conv2d_50.dc.transpose.4"(#loc556))
#loc891 = loc("conv2d_66.dc.transpose.0"(#loc559))
#loc892 = loc("conv2d_66.dc.transpose.1"(#loc559))
#loc893 = loc("conv2d_66.dc.conv2d.2"(#loc559))
#loc894 = loc("conv2d_66.dc.transpose.3"(#loc559))
#loc895 = loc("conv2d_66.dc.transpose.4"(#loc559))
#loc896 = loc("conv2d_83.dc.transpose.0"(#loc562))
#loc897 = loc("conv2d_83.dc.transpose.1"(#loc562))
#loc898 = loc("conv2d_83.dc.conv2d.2"(#loc562))
#loc899 = loc("conv2d_83.dc.transpose.3"(#loc562))
#loc900 = loc("conv2d_83.dc.transpose.4"(#loc562))
#loc901 = loc("conv2d_99.dc.transpose.0"(#loc565))
#loc902 = loc("conv2d_99.dc.transpose.1"(#loc565))
#loc903 = loc("conv2d_99.dc.conv2d.2"(#loc565))
#loc904 = loc("conv2d_99.dc.transpose.3"(#loc565))
#loc905 = loc("conv2d_99.dc.transpose.4"(#loc565))
#loc906 = loc("conv2d_116.dc.transpose.0"(#loc568))
#loc907 = loc("conv2d_116.dc.transpose.1"(#loc568))
#loc908 = loc("conv2d_116.dc.conv2d.2"(#loc568))
#loc909 = loc("conv2d_116.dc.transpose.3"(#loc568))
#loc910 = loc("conv2d_116.dc.transpose.4"(#loc568))
#loc911 = loc("conv2d_132.dc.transpose.0"(#loc571))
#loc912 = loc("conv2d_132.dc.transpose.1"(#loc571))
#loc913 = loc("conv2d_132.dc.conv2d.2"(#loc571))
#loc914 = loc("conv2d_132.dc.transpose.3"(#loc571))
#loc915 = loc("conv2d_132.dc.transpose.4"(#loc571))
#loc916 = loc("conv2d_200.dc.transpose.0"(#loc584))
#loc917 = loc("conv2d_200.dc.transpose.1"(#loc584))
#loc918 = loc("conv2d_200.dc.conv2d.2"(#loc584))
#loc919 = loc("conv2d_200.dc.transpose.3"(#loc584))
#loc920 = loc("conv2d_200.dc.transpose.4"(#loc584))
#loc921 = loc("conv2d_216.dc.transpose.0"(#loc587))
#loc922 = loc("conv2d_216.dc.transpose.1"(#loc587))
#loc923 = loc("conv2d_216.dc.conv2d.2"(#loc587))
#loc924 = loc("conv2d_216.dc.transpose.3"(#loc587))
#loc925 = loc("conv2d_216.dc.transpose.4"(#loc587))
#loc926 = loc("conv2d_233.dc.transpose.0"(#loc590))
#loc927 = loc("conv2d_233.dc.transpose.1"(#loc590))
#loc928 = loc("conv2d_233.dc.conv2d.2"(#loc590))
#loc929 = loc("conv2d_233.dc.transpose.3"(#loc590))
#loc930 = loc("conv2d_233.dc.transpose.4"(#loc590))
#loc931 = loc("conv2d_249.dc.transpose.0"(#loc593))
#loc932 = loc("conv2d_249.dc.transpose.1"(#loc593))
#loc933 = loc("conv2d_249.dc.conv2d.2"(#loc593))
#loc934 = loc("conv2d_249.dc.transpose.3"(#loc593))
#loc935 = loc("conv2d_249.dc.transpose.4"(#loc593))
#loc936 = loc("conv2d_266.dc.transpose.0"(#loc596))
#loc937 = loc("conv2d_266.dc.transpose.1"(#loc596))
#loc938 = loc("conv2d_266.dc.conv2d.2"(#loc596))
#loc939 = loc("conv2d_266.dc.transpose.3"(#loc596))
#loc940 = loc("conv2d_266.dc.transpose.4"(#loc596))
#loc941 = loc("conv2d_282.dc.transpose.0"(#loc599))
#loc942 = loc("conv2d_282.dc.transpose.1"(#loc599))
#loc943 = loc("conv2d_282.dc.conv2d.2"(#loc599))
#loc944 = loc("conv2d_282.dc.transpose.3"(#loc599))
#loc945 = loc("conv2d_282.dc.transpose.4"(#loc599))
#loc946 = loc("conv2d_299.dc.transpose.0"(#loc602))
#loc947 = loc("conv2d_299.dc.transpose.1"(#loc602))
#loc948 = loc("conv2d_299.dc.conv2d.2"(#loc602))
#loc949 = loc("conv2d_299.dc.transpose.3"(#loc602))
#loc950 = loc("conv2d_299.dc.transpose.4"(#loc602))
#loc951 = loc("conv2d_315.dc.transpose.0"(#loc605))
#loc952 = loc("conv2d_315.dc.transpose.1"(#loc605))
#loc953 = loc("conv2d_315.dc.conv2d.2"(#loc605))
#loc954 = loc("conv2d_315.dc.transpose.3"(#loc605))
#loc955 = loc("conv2d_315.dc.transpose.4"(#loc605))
#loc956 = loc("conv2d_332.dc.transpose.0"(#loc608))
#loc957 = loc("conv2d_332.dc.transpose.1"(#loc608))
#loc958 = loc("conv2d_332.dc.conv2d.2"(#loc608))
#loc959 = loc("conv2d_332.dc.transpose.3"(#loc608))
#loc960 = loc("conv2d_332.dc.transpose.4"(#loc608))
#loc961 = loc("conv2d_348.dc.transpose.0"(#loc611))
#loc962 = loc("conv2d_348.dc.transpose.1"(#loc611))
#loc963 = loc("conv2d_348.dc.conv2d.2"(#loc611))
#loc964 = loc("conv2d_348.dc.transpose.3"(#loc611))
#loc965 = loc("conv2d_348.dc.transpose.4"(#loc611))
#loc966 = loc("conv2d_365.dc.transpose.0"(#loc614))
#loc967 = loc("conv2d_365.dc.transpose.1"(#loc614))
#loc968 = loc("conv2d_365.dc.conv2d.2"(#loc614))
#loc969 = loc("conv2d_365.dc.transpose.3"(#loc614))
#loc970 = loc("conv2d_365.dc.transpose.4"(#loc614))
#loc971 = loc("conv2d_381.dc.transpose.0"(#loc617))
#loc972 = loc("conv2d_381.dc.transpose.1"(#loc617))
#loc973 = loc("conv2d_381.dc.conv2d.2"(#loc617))
#loc974 = loc("conv2d_381.dc.transpose.3"(#loc617))
#loc975 = loc("conv2d_381.dc.transpose.4"(#loc617))
#loc976 = loc("conv2d_449.dc.transpose.0"(#loc630))
#loc977 = loc("conv2d_449.dc.transpose.1"(#loc630))
#loc978 = loc("conv2d_449.dc.conv2d.2"(#loc630))
#loc979 = loc("conv2d_449.dc.transpose.3"(#loc630))
#loc980 = loc("conv2d_449.dc.transpose.4"(#loc630))
#loc981 = loc("conv2d_465.dc.transpose.0"(#loc633))
#loc982 = loc("conv2d_465.dc.transpose.1"(#loc633))
#loc983 = loc("conv2d_465.dc.conv2d.2"(#loc633))
#loc984 = loc("conv2d_465.dc.transpose.3"(#loc633))
#loc985 = loc("conv2d_465.dc.transpose.4"(#loc633))
#loc986 = loc("conv2d_482.dc.transpose.0"(#loc636))
#loc987 = loc("conv2d_482.dc.transpose.1"(#loc636))
#loc988 = loc("conv2d_482.dc.conv2d.2"(#loc636))
#loc989 = loc("conv2d_482.dc.transpose.3"(#loc636))
#loc990 = loc("conv2d_482.dc.transpose.4"(#loc636))
#loc991 = loc("conv2d_498.dc.transpose.0"(#loc639))
#loc992 = loc("conv2d_498.dc.transpose.1"(#loc639))
#loc993 = loc("conv2d_498.dc.conv2d.2"(#loc639))
#loc994 = loc("conv2d_498.dc.transpose.3"(#loc639))
#loc995 = loc("conv2d_498.dc.transpose.4"(#loc639))
#loc996 = loc("conv2d_515.dc.transpose.0"(#loc642))
#loc997 = loc("conv2d_515.dc.transpose.1"(#loc642))
#loc998 = loc("conv2d_515.dc.conv2d.2"(#loc642))
#loc999 = loc("conv2d_515.dc.transpose.3"(#loc642))
#loc1000 = loc("conv2d_515.dc.transpose.4"(#loc642))
#loc1001 = loc("conv2d_531.dc.transpose.0"(#loc645))
#loc1002 = loc("conv2d_531.dc.transpose.1"(#loc645))
#loc1003 = loc("conv2d_531.dc.conv2d.2"(#loc645))
#loc1004 = loc("conv2d_531.dc.transpose.3"(#loc645))
#loc1005 = loc("conv2d_531.dc.transpose.4"(#loc645))
#loc1006 = loc("conv2d_548.dc.transpose.0"(#loc648))
#loc1007 = loc("conv2d_548.dc.transpose.1"(#loc648))
#loc1008 = loc("conv2d_548.dc.conv2d.2"(#loc648))
#loc1009 = loc("conv2d_548.dc.transpose.3"(#loc648))
#loc1010 = loc("conv2d_548.dc.transpose.4"(#loc648))
#loc1011 = loc("conv2d_564.dc.transpose.0"(#loc651))
#loc1012 = loc("conv2d_564.dc.transpose.1"(#loc651))
#loc1013 = loc("conv2d_564.dc.conv2d.2"(#loc651))
#loc1014 = loc("conv2d_564.dc.transpose.3"(#loc651))
#loc1015 = loc("conv2d_564.dc.transpose.4"(#loc651))
#loc1016 = loc("conv2d_581.dc.transpose.0"(#loc654))
#loc1017 = loc("conv2d_581.dc.transpose.1"(#loc654))
#loc1018 = loc("conv2d_581.dc.conv2d.2"(#loc654))
#loc1019 = loc("conv2d_581.dc.transpose.3"(#loc654))
#loc1020 = loc("conv2d_581.dc.transpose.4"(#loc654))
#loc1021 = loc("conv2d_597.dc.transpose.0"(#loc657))
#loc1022 = loc("conv2d_597.dc.transpose.1"(#loc657))
#loc1023 = loc("conv2d_597.dc.conv2d.2"(#loc657))
#loc1024 = loc("conv2d_597.dc.transpose.3"(#loc657))
#loc1025 = loc("conv2d_597.dc.transpose.4"(#loc657))
#loc1026 = loc("conv2d_614.dc.transpose.0"(#loc660))
#loc1027 = loc("conv2d_614.dc.transpose.1"(#loc660))
#loc1028 = loc("conv2d_614.dc.conv2d.2"(#loc660))
#loc1029 = loc("conv2d_614.dc.transpose.3"(#loc660))
#loc1030 = loc("conv2d_614.dc.transpose.4"(#loc660))
#loc1031 = loc("conv2d_630.dc.transpose.0"(#loc663))
#loc1032 = loc("conv2d_630.dc.transpose.1"(#loc663))
#loc1033 = loc("conv2d_630.dc.conv2d.2"(#loc663))
#loc1034 = loc("conv2d_630.dc.transpose.3"(#loc663))
#loc1035 = loc("conv2d_630.dc.transpose.4"(#loc663))
#loc1036 = loc("conv2d_698.dc.transpose.0"(#loc676))
#loc1037 = loc("conv2d_698.dc.transpose.1"(#loc676))
#loc1038 = loc("conv2d_698.dc.conv2d.2"(#loc676))
#loc1039 = loc("conv2d_698.dc.transpose.3"(#loc676))
#loc1040 = loc("conv2d_698.dc.transpose.4"(#loc676))
#loc1041 = loc("conv2d_714.dc.transpose.0"(#loc679))
#loc1042 = loc("conv2d_714.dc.transpose.1"(#loc679))
#loc1043 = loc("conv2d_714.dc.conv2d.2"(#loc679))
#loc1044 = loc("conv2d_714.dc.transpose.3"(#loc679))
#loc1045 = loc("conv2d_714.dc.transpose.4"(#loc679))
#loc1046 = loc("conv2d_731.dc.transpose.0"(#loc682))
#loc1047 = loc("conv2d_731.dc.transpose.1"(#loc682))
#loc1048 = loc("conv2d_731.dc.conv2d.2"(#loc682))
#loc1049 = loc("conv2d_731.dc.transpose.3"(#loc682))
#loc1050 = loc("conv2d_731.dc.transpose.4"(#loc682))
#loc1051 = loc("conv2d_747.dc.transpose.0"(#loc685))
#loc1052 = loc("conv2d_747.dc.transpose.1"(#loc685))
#loc1053 = loc("conv2d_747.dc.conv2d.2"(#loc685))
#loc1054 = loc("conv2d_747.dc.transpose.3"(#loc685))
#loc1055 = loc("conv2d_747.dc.transpose.4"(#loc685))
#loc1056 = loc("conv2d_764.dc.transpose.0"(#loc688))
#loc1057 = loc("conv2d_764.dc.transpose.1"(#loc688))
#loc1058 = loc("conv2d_764.dc.conv2d.2"(#loc688))
#loc1059 = loc("conv2d_764.dc.transpose.3"(#loc688))
#loc1060 = loc("conv2d_764.dc.transpose.4"(#loc688))
#loc1061 = loc("conv2d_780.dc.transpose.0"(#loc691))
#loc1062 = loc("conv2d_780.dc.transpose.1"(#loc691))
#loc1063 = loc("conv2d_780.dc.conv2d.2"(#loc691))
#loc1064 = loc("conv2d_780.dc.transpose.3"(#loc691))
#loc1065 = loc("conv2d_780.dc.transpose.4"(#loc691))
#loc1066 = loc("conv2d_870.dc.transpose.0"(#loc714))
#loc1067 = loc("conv2d_870.dc.transpose.1"(#loc714))
#loc1068 = loc("conv2d_870.dc.conv2d.2"(#loc714))
#loc1069 = loc("conv2d_870.dc.transpose.3"(#loc714))
#loc1070 = loc("conv2d_870.dc.transpose.4"(#loc714))
#loc1071 = loc("conv2d_886.dc.transpose.0"(#loc717))
#loc1072 = loc("conv2d_886.dc.transpose.1"(#loc717))
#loc1073 = loc("conv2d_886.dc.conv2d.2"(#loc717))
#loc1074 = loc("conv2d_886.dc.transpose.3"(#loc717))
#loc1075 = loc("conv2d_886.dc.transpose.4"(#loc717))
#loc1076 = loc("conv2d_902.dc.transpose.0"(#loc720))
#loc1077 = loc("conv2d_902.dc.transpose.1"(#loc720))
#loc1078 = loc("conv2d_902.dc.conv2d.2"(#loc720))
#loc1079 = loc("conv2d_902.dc.transpose.3"(#loc720))
#loc1080 = loc("conv2d_902.dc.transpose.4"(#loc720))
#loc1081 = loc("conv2d_918.dc.transpose.0"(#loc723))
#loc1082 = loc("conv2d_918.dc.transpose.1"(#loc723))
#loc1083 = loc("conv2d_918.dc.conv2d.2"(#loc723))
#loc1084 = loc("conv2d_918.dc.transpose.3"(#loc723))
#loc1085 = loc("conv2d_918.dc.transpose.4"(#loc723))
#loc1086 = loc("conv2d_934.dc.transpose.0"(#loc726))
#loc1087 = loc("conv2d_934.dc.transpose.1"(#loc726))
#loc1088 = loc("conv2d_934.dc.conv2d.2"(#loc726))
#loc1089 = loc("conv2d_934.dc.transpose.3"(#loc726))
#loc1090 = loc("conv2d_934.dc.transpose.4"(#loc726))
#loc1091 = loc("conv2d_950.dc.transpose.0"(#loc729))
#loc1092 = loc("conv2d_950.dc.transpose.1"(#loc729))
#loc1093 = loc("conv2d_950.dc.conv2d.2"(#loc729))
#loc1094 = loc("conv2d_950.dc.transpose.3"(#loc729))
#loc1095 = loc("conv2d_950.dc.transpose.4"(#loc729))
#loc1096 = loc("conv2d_1003.dc.transpose.0"(#loc742))
#loc1097 = loc("conv2d_1003.dc.transpose.1"(#loc742))
#loc1098 = loc("conv2d_1003.dc.conv2d.2"(#loc742))
#loc1099 = loc("conv2d_1003.dc.transpose.3"(#loc742))
#loc1100 = loc("conv2d_1003.dc.transpose.4"(#loc742))
#loc1101 = loc("conv2d_1019.dc.transpose.0"(#loc745))
#loc1102 = loc("conv2d_1019.dc.transpose.1"(#loc745))
#loc1103 = loc("conv2d_1019.dc.conv2d.2"(#loc745))
#loc1104 = loc("conv2d_1019.dc.transpose.3"(#loc745))
#loc1105 = loc("conv2d_1019.dc.transpose.4"(#loc745))
#loc1106 = loc("conv2d_1035.dc.transpose.0"(#loc748))
#loc1107 = loc("conv2d_1035.dc.transpose.1"(#loc748))
#loc1108 = loc("conv2d_1035.dc.conv2d.2"(#loc748))
#loc1109 = loc("conv2d_1035.dc.transpose.3"(#loc748))
#loc1110 = loc("conv2d_1035.dc.transpose.4"(#loc748))
#loc1111 = loc("conv2d_1051.dc.transpose.0"(#loc751))
#loc1112 = loc("conv2d_1051.dc.transpose.1"(#loc751))
#loc1113 = loc("conv2d_1051.dc.conv2d.2"(#loc751))
#loc1114 = loc("conv2d_1051.dc.transpose.3"(#loc751))
#loc1115 = loc("conv2d_1051.dc.transpose.4"(#loc751))
#loc1116 = loc("conv2d_1067.dc.transpose.0"(#loc754))
#loc1117 = loc("conv2d_1067.dc.transpose.1"(#loc754))
#loc1118 = loc("conv2d_1067.dc.conv2d.2"(#loc754))
#loc1119 = loc("conv2d_1067.dc.transpose.3"(#loc754))
#loc1120 = loc("conv2d_1067.dc.transpose.4"(#loc754))
#loc1121 = loc("conv2d_1083.dc.transpose.0"(#loc757))
#loc1122 = loc("conv2d_1083.dc.transpose.1"(#loc757))
#loc1123 = loc("conv2d_1083.dc.conv2d.2"(#loc757))
#loc1124 = loc("conv2d_1083.dc.transpose.3"(#loc757))
#loc1125 = loc("conv2d_1083.dc.transpose.4"(#loc757))
#loc1126 = loc("conv2d_1116.dc.transpose.0"(#loc765))
#loc1127 = loc("conv2d_1116.dc.transpose.1"(#loc765))
#loc1128 = loc("conv2d_1116.dc.conv2d.2"(#loc765))
#loc1129 = loc("conv2d_1116.dc.transpose.3"(#loc765))
#loc1130 = loc("conv2d_1116.dc.transpose.4"(#loc765))
#loc1131 = loc("conv2d_1132.dc.transpose.0"(#loc768))
#loc1132 = loc("conv2d_1132.dc.transpose.1"(#loc768))
#loc1133 = loc("conv2d_1132.dc.conv2d.2"(#loc768))
#loc1134 = loc("conv2d_1132.dc.transpose.3"(#loc768))
#loc1135 = loc("conv2d_1132.dc.transpose.4"(#loc768))
#loc1136 = loc("conv2d_1152.dc.transpose.0"(#loc765))
#loc1137 = loc("conv2d_1152.dc.transpose.1"(#loc765))
#loc1138 = loc("conv2d_1152.dc.conv2d.2"(#loc765))
#loc1139 = loc("conv2d_1152.dc.transpose.3"(#loc765))
#loc1140 = loc("conv2d_1152.dc.transpose.4"(#loc765))
#loc1141 = loc("conv2d_1168.dc.transpose.0"(#loc768))
#loc1142 = loc("conv2d_1168.dc.transpose.1"(#loc768))
#loc1143 = loc("conv2d_1168.dc.conv2d.2"(#loc768))
#loc1144 = loc("conv2d_1168.dc.transpose.3"(#loc768))
#loc1145 = loc("conv2d_1168.dc.transpose.4"(#loc768))
#loc1146 = loc("conv2d_1225.dc.transpose.0"(#loc790))
#loc1147 = loc("conv2d_1225.dc.transpose.1"(#loc790))
#loc1148 = loc("conv2d_1225.dc.conv2d.2"(#loc790))
#loc1149 = loc("conv2d_1225.dc.transpose.3"(#loc790))
#loc1150 = loc("conv2d_1225.dc.transpose.4"(#loc790))
#loc1151 = loc("conv2d_1241.dc.transpose.0"(#loc793))
#loc1152 = loc("conv2d_1241.dc.transpose.1"(#loc793))
#loc1153 = loc("conv2d_1241.dc.conv2d.2"(#loc793))
#loc1154 = loc("conv2d_1241.dc.transpose.3"(#loc793))
#loc1155 = loc("conv2d_1241.dc.transpose.4"(#loc793))
#loc1156 = loc("conv2d_1257.dc.transpose.0"(#loc796))
#loc1157 = loc("conv2d_1257.dc.transpose.1"(#loc796))
#loc1158 = loc("conv2d_1257.dc.conv2d.2"(#loc796))
#loc1159 = loc("conv2d_1257.dc.transpose.3"(#loc796))
#loc1160 = loc("conv2d_1257.dc.transpose.4"(#loc796))
#loc1161 = loc("conv2d_1273.dc.transpose.0"(#loc799))
#loc1162 = loc("conv2d_1273.dc.transpose.1"(#loc799))
#loc1163 = loc("conv2d_1273.dc.conv2d.2"(#loc799))
#loc1164 = loc("conv2d_1273.dc.transpose.3"(#loc799))
#loc1165 = loc("conv2d_1273.dc.transpose.4"(#loc799))
#loc1166 = loc("conv2d_1289.dc.transpose.0"(#loc802))
#loc1167 = loc("conv2d_1289.dc.transpose.1"(#loc802))
#loc1168 = loc("conv2d_1289.dc.conv2d.2"(#loc802))
#loc1169 = loc("conv2d_1289.dc.transpose.3"(#loc802))
#loc1170 = loc("conv2d_1289.dc.transpose.4"(#loc802))
#loc1171 = loc("conv2d_1305.dc.transpose.0"(#loc805))
#loc1172 = loc("conv2d_1305.dc.transpose.1"(#loc805))
#loc1173 = loc("conv2d_1305.dc.conv2d.2"(#loc805))
#loc1174 = loc("conv2d_1305.dc.transpose.3"(#loc805))
#loc1175 = loc("conv2d_1305.dc.transpose.4"(#loc805))
#loc1176 = loc("conv2d_1338.dc.transpose.0"(#loc813))
#loc1177 = loc("conv2d_1338.dc.transpose.1"(#loc813))
#loc1178 = loc("conv2d_1338.dc.conv2d.2"(#loc813))
#loc1179 = loc("conv2d_1338.dc.transpose.3"(#loc813))
#loc1180 = loc("conv2d_1338.dc.transpose.4"(#loc813))
#loc1181 = loc("conv2d_1354.dc.transpose.0"(#loc816))
#loc1182 = loc("conv2d_1354.dc.transpose.1"(#loc816))
#loc1183 = loc("conv2d_1354.dc.conv2d.2"(#loc816))
#loc1184 = loc("conv2d_1354.dc.transpose.3"(#loc816))
#loc1185 = loc("conv2d_1354.dc.transpose.4"(#loc816))
#loc1186 = loc("conv2d_1374.dc.transpose.0"(#loc813))
#loc1187 = loc("conv2d_1374.dc.transpose.1"(#loc813))
#loc1188 = loc("conv2d_1374.dc.conv2d.2"(#loc813))
#loc1189 = loc("conv2d_1374.dc.transpose.3"(#loc813))
#loc1190 = loc("conv2d_1374.dc.transpose.4"(#loc813))
#loc1191 = loc("conv2d_1390.dc.transpose.0"(#loc816))
#loc1192 = loc("conv2d_1390.dc.transpose.1"(#loc816))
#loc1193 = loc("conv2d_1390.dc.conv2d.2"(#loc816))
#loc1194 = loc("conv2d_1390.dc.transpose.3"(#loc816))
#loc1195 = loc("conv2d_1390.dc.transpose.4"(#loc816))
#loc1196 = loc("conv2d_1447.dc.transpose.0"(#loc838))
#loc1197 = loc("conv2d_1447.dc.transpose.1"(#loc838))
#loc1198 = loc("conv2d_1447.dc.conv2d.2"(#loc838))
#loc1199 = loc("conv2d_1447.dc.transpose.3"(#loc838))
#loc1200 = loc("conv2d_1447.dc.transpose.4"(#loc838))
#loc1201 = loc("conv2d_1463.dc.transpose.0"(#loc841))
#loc1202 = loc("conv2d_1463.dc.transpose.1"(#loc841))
#loc1203 = loc("conv2d_1463.dc.conv2d.2"(#loc841))
#loc1204 = loc("conv2d_1463.dc.transpose.3"(#loc841))
#loc1205 = loc("conv2d_1463.dc.transpose.4"(#loc841))
#loc1206 = loc("conv2d_1479.dc.transpose.0"(#loc844))
#loc1207 = loc("conv2d_1479.dc.transpose.1"(#loc844))
#loc1208 = loc("conv2d_1479.dc.conv2d.2"(#loc844))
#loc1209 = loc("conv2d_1479.dc.transpose.3"(#loc844))
#loc1210 = loc("conv2d_1479.dc.transpose.4"(#loc844))
#loc1211 = loc("conv2d_1495.dc.transpose.0"(#loc847))
#loc1212 = loc("conv2d_1495.dc.transpose.1"(#loc847))
#loc1213 = loc("conv2d_1495.dc.conv2d.2"(#loc847))
#loc1214 = loc("conv2d_1495.dc.transpose.3"(#loc847))
#loc1215 = loc("conv2d_1495.dc.transpose.4"(#loc847))
#loc1216 = loc("conv2d_1511.dc.transpose.0"(#loc850))
#loc1217 = loc("conv2d_1511.dc.transpose.1"(#loc850))
#loc1218 = loc("conv2d_1511.dc.conv2d.2"(#loc850))
#loc1219 = loc("conv2d_1511.dc.transpose.3"(#loc850))
#loc1220 = loc("conv2d_1511.dc.transpose.4"(#loc850))
#loc1221 = loc("conv2d_1527.dc.transpose.0"(#loc853))
#loc1222 = loc("conv2d_1527.dc.transpose.1"(#loc853))
#loc1223 = loc("conv2d_1527.dc.conv2d.2"(#loc853))
#loc1224 = loc("conv2d_1527.dc.transpose.3"(#loc853))
#loc1225 = loc("conv2d_1527.dc.transpose.4"(#loc853))
#loc1226 = loc("conv2d_1560.dc.transpose.0"(#loc861))
#loc1227 = loc("conv2d_1560.dc.transpose.1"(#loc861))
#loc1228 = loc("conv2d_1560.dc.conv2d.2"(#loc861))
#loc1229 = loc("conv2d_1560.dc.transpose.3"(#loc861))
#loc1230 = loc("conv2d_1560.dc.transpose.4"(#loc861))
#loc1231 = loc("conv2d_1576.dc.transpose.0"(#loc864))
#loc1232 = loc("conv2d_1576.dc.transpose.1"(#loc864))
#loc1233 = loc("conv2d_1576.dc.conv2d.2"(#loc864))
#loc1234 = loc("conv2d_1576.dc.transpose.3"(#loc864))
#loc1235 = loc("conv2d_1576.dc.transpose.4"(#loc864))
#loc1236 = loc("conv2d_1596.dc.transpose.0"(#loc861))
#loc1237 = loc("conv2d_1596.dc.transpose.1"(#loc861))
#loc1238 = loc("conv2d_1596.dc.conv2d.2"(#loc861))
#loc1239 = loc("conv2d_1596.dc.transpose.3"(#loc861))
#loc1240 = loc("conv2d_1596.dc.transpose.4"(#loc861))
#loc1241 = loc("conv2d_1612.dc.transpose.0"(#loc864))
#loc1242 = loc("conv2d_1612.dc.transpose.1"(#loc864))
#loc1243 = loc("conv2d_1612.dc.conv2d.2"(#loc864))
#loc1244 = loc("conv2d_1612.dc.transpose.3"(#loc864))
#loc1245 = loc("conv2d_1612.dc.transpose.4"(#loc864))
