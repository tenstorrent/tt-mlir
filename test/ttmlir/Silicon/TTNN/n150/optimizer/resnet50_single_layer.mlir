// REQUIRES: opmodel
// RUN: ttmlir-opt --ttir-to-ttnn-backend-pipeline="system-desc-path=%system_desc_path% enable-optimizer=true memory-layout-analysis-enabled=true override-output-layout=max_pool2d_17.dc.max_pool2d.2=dram:interleaved:row_major:1x1" -o resnet50_single_layer_ttnn.mlir %s
// RUN: FileCheck %s --input-file=resnet50_single_layer_ttnn.mlir
// RUN: ttmlir-translate --ttnn-to-flatbuffer resnet50_single_layer_ttnn.mlir > %t.ttnn
#loc = loc("ResNetForImageClassification":0:0)
module @ResNetForImageClassification attributes {} {
  func.func @forward(%arg0: tensor<1x3x224x224xf32> {ttir.name = "pixel_values"} loc("ResNetForImageClassification":0:0), %arg1: tensor<1x1x1x64xf32> {ttir.name = "input_1_add_2"} loc("ResNetForImageClassification":0:0), %arg2: tensor<1x1x1x64xf32> {ttir.name = "input_1_add_2_fork_clone1229"} loc("ResNetForImageClassification":0:0), %arg3: tensor<1x1x1x64xf32> {ttir.name = "input_1_add_19"} loc("ResNetForImageClassification":0:0), %arg4: tensor<1x1x1x64xf32> {ttir.name = "input_1_add_19_fork_clone1271"} loc("ResNetForImageClassification":0:0), %arg5: tensor<1x1x1x64xf32> {ttir.name = "input_1_add_35"} loc("ResNetForImageClassification":0:0), %arg6: tensor<1x1x1x64xf32> {ttir.name = "input_1_add_35_fork_clone1204"} loc("ResNetForImageClassification":0:0), %arg7: tensor<1x1x1x256xf32> {ttir.name = "input_1_add_51"} loc("ResNetForImageClassification":0:0), %arg8: tensor<1x1x1x256xf32> {ttir.name = "input_1_add_51_fork_clone1108"} loc("ResNetForImageClassification":0:0), %arg9: tensor<1x1x1x256xf32> {ttir.name = "input_1_add_66"} loc("ResNetForImageClassification":0:0), %arg10: tensor<1x1x1x256xf32> {ttir.name = "input_1_add_66_fork_clone1112"} loc("ResNetForImageClassification":0:0), %arg107: tensor<64x3x7x7xf32> {ttir.name = "resnet.embedder.embedder.convolution.weight"} loc("ResNetForImageClassification":0:0), %arg108: tensor<64x64x1x1xf32> {ttir.name = "resnet.encoder.stages.0.layers.0.layer.0.convolution.weight"} loc("ResNetForImageClassification":0:0), %arg109: tensor<64x64x3x3xf32> {ttir.name = "resnet.encoder.stages.0.layers.0.layer.1.convolution.weight"} loc("ResNetForImageClassification":0:0), %arg110: tensor<256x64x1x1xf32> {ttir.name = "resnet.encoder.stages.0.layers.0.layer.2.convolution.weight"} loc("ResNetForImageClassification":0:0), %arg111: tensor<256x64x1x1xf32> {ttir.name = "resnet.encoder.stages.0.layers.0.shortcut.convolution.weight"} loc("ResNetForImageClassification":0:0)) -> (tensor<1x56x56x256xf32> {ttir.name = "ResNetForImageClassification.output_add_868"}) {
    // CHECK-DAG: #[[SHARDED_LAYOUT:.*]] = #ttnn.ttnn_layout<{{.*}}_sharded
    // CHECK: %{{.*}} = "ttnn.{{.*}}#[[SHARDED_LAYOUT]]>
    %0 = tensor.empty() : tensor<1x224x3x224xf32> loc(#loc249)
    %1 = "ttir.transpose"(%arg0, %0) <{dim0 = -3 : si32, dim1 = -2 : si32}> : (tensor<1x3x224x224xf32>, tensor<1x224x3x224xf32>) -> tensor<1x224x3x224xf32> loc(#loc249)
    %2 = tensor.empty() : tensor<1x224x224x3xf32> loc(#loc250)
    %3 = "ttir.transpose"(%1, %2) <{dim0 = -2 : si32, dim1 = -1 : si32}> : (tensor<1x224x3x224xf32>, tensor<1x224x224x3xf32>) -> tensor<1x224x224x3xf32> loc(#loc250)
    %4 = tensor.empty() : tensor<1x112x112x64xf32> loc(#loc251)
    %5 = "ttir.conv2d"(%3, %arg107, %4) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 3, 3, 3, 3>, stride = array<i32: 2, 2>}> {channel_last = 1 : si32} : (tensor<1x224x224x3xf32>, tensor<64x3x7x7xf32>, tensor<1x112x112x64xf32>) -> tensor<1x112x112x64xf32> loc(#loc251)
    %6 = tensor.empty() : tensor<1x112x112x64xf32> loc(#loc252)
    %7 = "ttir.multiply"(%5, %arg1, %6) <{operandSegmentSizes = array<i32: 2, 1>}> : (tensor<1x112x112x64xf32>, tensor<1x1x1x64xf32>, tensor<1x112x112x64xf32>) -> tensor<1x112x112x64xf32> loc(#loc252)
    %8 = tensor.empty() : tensor<1x112x112x64xf32> loc(#loc253)
    %9 = "ttir.add"(%7, %arg2, %8) <{operandSegmentSizes = array<i32: 2, 1>}> : (tensor<1x112x112x64xf32>, tensor<1x1x1x64xf32>, tensor<1x112x112x64xf32>) -> tensor<1x112x112x64xf32> loc(#loc253)
    %10 = tensor.empty() : tensor<1x112x112x64xf32> loc(#loc254)
    %11 = "ttir.relu"(%9, %10) <{operandSegmentSizes = array<i32: 1, 1>}> : (tensor<1x112x112x64xf32>, tensor<1x112x112x64xf32>) -> tensor<1x112x112x64xf32> loc(#loc254)
    %12 = tensor.empty() : tensor<1x56x56x64xf32> loc(#loc255)
    %13 = "ttir.max_pool2d"(%11, %12) <{ceil_mode = false, dilation_height = 1 : si32, dilation_width = 1 : si32, kernel_height = 3 : si32, kernel_width = 3 : si32, padding_bottom = 1 : si32, padding_left = 1 : si32, padding_right = 1 : si32, padding_top = 1 : si32, stride_height = 2 : si32, stride_width = 2 : si32}> {channel_last = true} : (tensor<1x112x112x64xf32>, tensor<1x56x56x64xf32>) -> tensor<1x56x56x64xf32> loc(#loc255)
    %14 = tensor.empty() : tensor<1x56x56x64xf32> loc(#loc256)
    %15 = "ttir.conv2d"(%13, %arg108, %14) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x56x56x64xf32>, tensor<64x64x1x1xf32>, tensor<1x56x56x64xf32>) -> tensor<1x56x56x64xf32> loc(#loc256)
    %16 = tensor.empty() : tensor<1x56x56x64xf32> loc(#loc257)
    %17 = "ttir.multiply"(%15, %arg3, %16) <{operandSegmentSizes = array<i32: 2, 1>}> : (tensor<1x56x56x64xf32>, tensor<1x1x1x64xf32>, tensor<1x56x56x64xf32>) -> tensor<1x56x56x64xf32> loc(#loc257)
    %18 = tensor.empty() : tensor<1x56x56x64xf32> loc(#loc258)
    %19 = "ttir.add"(%17, %arg4, %18) <{operandSegmentSizes = array<i32: 2, 1>}> : (tensor<1x56x56x64xf32>, tensor<1x1x1x64xf32>, tensor<1x56x56x64xf32>) -> tensor<1x56x56x64xf32> loc(#loc258)
    %20 = tensor.empty() : tensor<1x56x56x64xf32> loc(#loc259)
    %21 = "ttir.relu"(%19, %20) <{operandSegmentSizes = array<i32: 1, 1>}> : (tensor<1x56x56x64xf32>, tensor<1x56x56x64xf32>) -> tensor<1x56x56x64xf32> loc(#loc259)
    %22 = tensor.empty() : tensor<1x56x56x64xf32> loc(#loc260)
    %23 = "ttir.conv2d"(%21, %arg109, %22) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 1, 1, 1, 1>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x56x56x64xf32>, tensor<64x64x3x3xf32>, tensor<1x56x56x64xf32>) -> tensor<1x56x56x64xf32> loc(#loc260)
    %24 = tensor.empty() : tensor<1x56x56x64xf32> loc(#loc261)
    %25 = "ttir.multiply"(%23, %arg5, %24) <{operandSegmentSizes = array<i32: 2, 1>}> : (tensor<1x56x56x64xf32>, tensor<1x1x1x64xf32>, tensor<1x56x56x64xf32>) -> tensor<1x56x56x64xf32> loc(#loc261)
    %26 = tensor.empty() : tensor<1x56x56x64xf32> loc(#loc262)
    %27 = "ttir.add"(%25, %arg6, %26) <{operandSegmentSizes = array<i32: 2, 1>}> : (tensor<1x56x56x64xf32>, tensor<1x1x1x64xf32>, tensor<1x56x56x64xf32>) -> tensor<1x56x56x64xf32> loc(#loc262)
    %28 = tensor.empty() : tensor<1x56x56x64xf32> loc(#loc263)
    %29 = "ttir.relu"(%27, %28) <{operandSegmentSizes = array<i32: 1, 1>}> : (tensor<1x56x56x64xf32>, tensor<1x56x56x64xf32>) -> tensor<1x56x56x64xf32> loc(#loc263)
    %30 = tensor.empty() : tensor<1x56x56x256xf32> loc(#loc264)
    %31 = "ttir.conv2d"(%29, %arg110, %30) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x56x56x64xf32>, tensor<256x64x1x1xf32>, tensor<1x56x56x256xf32>) -> tensor<1x56x56x256xf32> loc(#loc264)
    %32 = tensor.empty() : tensor<1x56x56x256xf32> loc(#loc265)
    %33 = "ttir.multiply"(%31, %arg7, %32) <{operandSegmentSizes = array<i32: 2, 1>}> : (tensor<1x56x56x256xf32>, tensor<1x1x1x256xf32>, tensor<1x56x56x256xf32>) -> tensor<1x56x56x256xf32> loc(#loc265)
    %34 = tensor.empty() : tensor<1x56x56x256xf32> loc(#loc266)
    %35 = "ttir.add"(%33, %arg8, %34) <{operandSegmentSizes = array<i32: 2, 1>}> : (tensor<1x56x56x256xf32>, tensor<1x1x1x256xf32>, tensor<1x56x56x256xf32>) -> tensor<1x56x56x256xf32> loc(#loc266)
    %36 = tensor.empty() : tensor<1x56x56x256xf32> loc(#loc267)
    %37 = "ttir.conv2d"(%13, %arg111, %36) <{dilation = array<i32: 1, 1>, groups = 1 : i32, padding = array<i32: 0, 0, 0, 0>, stride = array<i32: 1, 1>}> {channel_last = 1 : si32} : (tensor<1x56x56x64xf32>, tensor<256x64x1x1xf32>, tensor<1x56x56x256xf32>) -> tensor<1x56x56x256xf32> loc(#loc267)
    %38 = tensor.empty() : tensor<1x56x56x256xf32> loc(#loc268)
    %39 = "ttir.multiply"(%37, %arg9, %38) <{operandSegmentSizes = array<i32: 2, 1>}> : (tensor<1x56x56x256xf32>, tensor<1x1x1x256xf32>, tensor<1x56x56x256xf32>) -> tensor<1x56x56x256xf32> loc(#loc268)
    %40 = tensor.empty() : tensor<1x56x56x256xf32> loc(#loc269)
    %41 = "ttir.add"(%39, %arg10, %40) <{operandSegmentSizes = array<i32: 2, 1>}> : (tensor<1x56x56x256xf32>, tensor<1x1x1x256xf32>, tensor<1x56x56x256xf32>) -> tensor<1x56x56x256xf32> loc(#loc269)
    %42 = tensor.empty() : tensor<1x56x56x256xf32> loc(#loc270)
    %43 = "ttir.add"(%35, %41, %42) <{operandSegmentSizes = array<i32: 2, 1>}> : (tensor<1x56x56x256xf32>, tensor<1x56x56x256xf32>, tensor<1x56x56x256xf32>) -> tensor<1x56x56x256xf32> loc(#loc270)
    return %43 : tensor<1x56x56x256xf32> loc(#loc248)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("forward":4294967295:3880)
#loc2 = loc("forward":4294967295:3881)
#loc3 = loc("forward":4294967295:3883)
#loc4 = loc("forward":4294967295:3885)
#loc5 = loc("forward":4294967295:3887)
#loc6 = loc("forward":4294967295:3888)
#loc7 = loc("forward":4294967295:3889)
#loc8 = loc("forward":4294967295:3891)
#loc9 = loc("forward":4294967295:3893)
#loc10 = loc("forward":4294967295:3895)
#loc11 = loc("forward":4294967295:3896)
#loc12 = loc("forward":4294967295:3898)
#loc13 = loc("forward":4294967295:3900)
#loc14 = loc("forward":4294967295:3902)
#loc15 = loc("forward":4294967295:3903)
#loc16 = loc("forward":4294967295:3905)
#loc17 = loc("forward":4294967295:3907)
#loc18 = loc("forward":4294967295:3909)
#loc19 = loc("forward":4294967295:3911)
#loc20 = loc("forward":4294967295:3913)
#loc21 = loc("forward":4294967295:3915)
#loc22 = loc("forward":4294967295:3916)
#loc23 = loc("forward":4294967295:3917)
#loc24 = loc("forward":4294967295:3919)
#loc25 = loc("forward":4294967295:3921)
#loc26 = loc("forward":4294967295:3923)
#loc27 = loc("forward":4294967295:3924)
#loc28 = loc("forward":4294967295:3926)
#loc29 = loc("forward":4294967295:3928)
#loc30 = loc("forward":4294967295:3930)
#loc31 = loc("forward":4294967295:3931)
#loc32 = loc("forward":4294967295:3933)
#loc33 = loc("forward":4294967295:3935)
#loc34 = loc("forward":4294967295:3937)
#loc35 = loc("forward":4294967295:3938)
#loc36 = loc("forward":4294967295:3939)
#loc37 = loc("forward":4294967295:3941)
#loc38 = loc("forward":4294967295:3943)
#loc39 = loc("forward":4294967295:3945)
#loc40 = loc("forward":4294967295:3946)
#loc41 = loc("forward":4294967295:3948)
#loc42 = loc("forward":4294967295:3950)
#loc43 = loc("forward":4294967295:3952)
#loc44 = loc("forward":4294967295:3953)
#loc45 = loc("forward":4294967295:3955)
#loc46 = loc("forward":4294967295:3957)
#loc47 = loc("forward":4294967295:3959)
#loc48 = loc("forward":4294967295:3960)
#loc49 = loc("forward":4294967295:3961)
#loc50 = loc("forward":4294967295:3963)
#loc51 = loc("forward":4294967295:3965)
#loc52 = loc("forward":4294967295:3967)
#loc53 = loc("forward":4294967295:3968)
#loc54 = loc("forward":4294967295:3970)
#loc55 = loc("forward":4294967295:3972)
#loc56 = loc("forward":4294967295:3974)
#loc57 = loc("forward":4294967295:3975)
#loc58 = loc("forward":4294967295:3977)
#loc59 = loc("forward":4294967295:3979)
#loc60 = loc("forward":4294967295:3981)
#loc61 = loc("forward":4294967295:3983)
#loc62 = loc("forward":4294967295:3985)
#loc63 = loc("forward":4294967295:3987)
#loc64 = loc("forward":4294967295:3988)
#loc65 = loc("forward":4294967295:3989)
#loc66 = loc("forward":4294967295:3991)
#loc67 = loc("forward":4294967295:3993)
#loc68 = loc("forward":4294967295:3995)
#loc69 = loc("forward":4294967295:3996)
#loc70 = loc("forward":4294967295:3998)
#loc71 = loc("forward":4294967295:4000)
#loc72 = loc("forward":4294967295:4002)
#loc73 = loc("forward":4294967295:4003)
#loc74 = loc("forward":4294967295:4005)
#loc75 = loc("forward":4294967295:4007)
#loc76 = loc("forward":4294967295:4009)
#loc77 = loc("forward":4294967295:4010)
#loc78 = loc("forward":4294967295:4011)
#loc79 = loc("forward":4294967295:4013)
#loc80 = loc("forward":4294967295:4015)
#loc81 = loc("forward":4294967295:4017)
#loc82 = loc("forward":4294967295:4018)
#loc83 = loc("forward":4294967295:4020)
#loc84 = loc("forward":4294967295:4022)
#loc85 = loc("forward":4294967295:4024)
#loc86 = loc("forward":4294967295:4025)
#loc87 = loc("forward":4294967295:4027)
#loc88 = loc("forward":4294967295:4029)
#loc89 = loc("forward":4294967295:4031)
#loc90 = loc("forward":4294967295:4032)
#loc91 = loc("forward":4294967295:4033)
#loc92 = loc("forward":4294967295:4035)
#loc93 = loc("forward":4294967295:4037)
#loc94 = loc("forward":4294967295:4039)
#loc95 = loc("forward":4294967295:4040)
#loc96 = loc("forward":4294967295:4042)
#loc97 = loc("forward":4294967295:4044)
#loc98 = loc("forward":4294967295:4046)
#loc99 = loc("forward":4294967295:4047)
#loc100 = loc("forward":4294967295:4049)
#loc101 = loc("forward":4294967295:4051)
#loc102 = loc("forward":4294967295:4053)
#loc103 = loc("forward":4294967295:4054)
#loc104 = loc("forward":4294967295:4055)
#loc105 = loc("forward":4294967295:4057)
#loc106 = loc("forward":4294967295:4059)
#loc107 = loc("forward":4294967295:4061)
#loc108 = loc("forward":4294967295:4062)
#loc109 = loc("forward":4294967295:4064)
#loc110 = loc("forward":4294967295:4066)
#loc111 = loc("forward":4294967295:4068)
#loc112 = loc("forward":4294967295:4069)
#loc113 = loc("forward":4294967295:4071)
#loc114 = loc("forward":4294967295:4073)
#loc115 = loc("forward":4294967295:4075)
#loc116 = loc("forward":4294967295:4077)
#loc117 = loc("forward":4294967295:4079)
#loc118 = loc("forward":4294967295:4081)
#loc119 = loc("forward":4294967295:4082)
#loc120 = loc("forward":4294967295:4083)
#loc121 = loc("forward":4294967295:4085)
#loc122 = loc("forward":4294967295:4087)
#loc123 = loc("forward":4294967295:4089)
#loc124 = loc("forward":4294967295:4090)
#loc125 = loc("forward":4294967295:4092)
#loc126 = loc("forward":4294967295:4094)
#loc127 = loc("forward":4294967295:4096)
#loc128 = loc("forward":4294967295:4097)
#loc129 = loc("forward":4294967295:4099)
#loc130 = loc("forward":4294967295:4101)
#loc131 = loc("forward":4294967295:4103)
#loc132 = loc("forward":4294967295:4104)
#loc133 = loc("forward":4294967295:4105)
#loc134 = loc("forward":4294967295:4107)
#loc135 = loc("forward":4294967295:4109)
#loc136 = loc("forward":4294967295:4111)
#loc137 = loc("forward":4294967295:4112)
#loc138 = loc("forward":4294967295:4114)
#loc139 = loc("forward":4294967295:4116)
#loc140 = loc("forward":4294967295:4118)
#loc141 = loc("forward":4294967295:4119)
#loc142 = loc("forward":4294967295:4121)
#loc143 = loc("forward":4294967295:4123)
#loc144 = loc("forward":4294967295:4125)
#loc145 = loc("forward":4294967295:4126)
#loc146 = loc("forward":4294967295:4127)
#loc147 = loc("forward":4294967295:4129)
#loc148 = loc("forward":4294967295:4131)
#loc149 = loc("forward":4294967295:4133)
#loc150 = loc("forward":4294967295:4134)
#loc151 = loc("forward":4294967295:4136)
#loc152 = loc("forward":4294967295:4138)
#loc153 = loc("forward":4294967295:4140)
#loc154 = loc("forward":4294967295:4141)
#loc155 = loc("forward":4294967295:4143)
#loc156 = loc("forward":4294967295:4145)
#loc157 = loc("forward":4294967295:4147)
#loc158 = loc("forward":4294967295:4148)
#loc159 = loc("forward":4294967295:4149)
#loc160 = loc("forward":4294967295:4151)
#loc161 = loc("forward":4294967295:4153)
#loc162 = loc("forward":4294967295:4155)
#loc163 = loc("forward":4294967295:4156)
#loc164 = loc("forward":4294967295:4158)
#loc165 = loc("forward":4294967295:4160)
#loc166 = loc("forward":4294967295:4162)
#loc167 = loc("forward":4294967295:4163)
#loc168 = loc("forward":4294967295:4165)
#loc169 = loc("forward":4294967295:4167)
#loc170 = loc("forward":4294967295:4169)
#loc171 = loc("forward":4294967295:4170)
#loc172 = loc("forward":4294967295:4171)
#loc173 = loc("forward":4294967295:4173)
#loc174 = loc("forward":4294967295:4175)
#loc175 = loc("forward":4294967295:4177)
#loc176 = loc("forward":4294967295:4178)
#loc177 = loc("forward":4294967295:4180)
#loc178 = loc("forward":4294967295:4182)
#loc179 = loc("forward":4294967295:4184)
#loc180 = loc("forward":4294967295:4185)
#loc181 = loc("forward":4294967295:4187)
#loc182 = loc("forward":4294967295:4189)
#loc183 = loc("forward":4294967295:4191)
#loc184 = loc("forward":4294967295:4192)
#loc185 = loc("forward":4294967295:4193)
#loc186 = loc("forward":4294967295:4195)
#loc187 = loc("forward":4294967295:4197)
#loc188 = loc("forward":4294967295:4199)
#loc189 = loc("forward":4294967295:4200)
#loc190 = loc("forward":4294967295:4202)
#loc191 = loc("forward":4294967295:4204)
#loc192 = loc("forward":4294967295:4206)
#loc193 = loc("forward":4294967295:4207)
#loc194 = loc("forward":4294967295:4209)
#loc195 = loc("forward":4294967295:4210)
#loc196 = loc("forward":4294967295:4211)
#loc197 = loc("forward":4294967295:4213)
#loc198 = loc("forward":4294967295:4215)
#loc199 = loc("forward":4294967295:4217)
#loc200 = loc("forward":4294967295:4218)
#loc201 = loc("forward":4294967295:4219)
#loc202 = loc("forward":4294967295:4221)
#loc203 = loc("forward":4294967295:4223)
#loc204 = loc("forward":4294967295:4224)
#loc205 = loc("forward":4294967295:4225)
#loc206 = loc("forward":4294967295:4226)
#loc207 = loc("forward":4294967295:4227)
#loc208 = loc("forward":4294967295:4229)
#loc209 = loc("forward":4294967295:4231)
#loc210 = loc("forward":4294967295:4233)
#loc211 = loc("forward":4294967295:4234)
#loc212 = loc("forward":4294967295:4236)
#loc213 = loc("forward":4294967295:4238)
#loc214 = loc("forward":4294967295:4240)
#loc215 = loc("forward":4294967295:4241)
#loc216 = loc("forward":4294967295:4243)
#loc217 = loc("forward":4294967295:4244)
#loc218 = loc("forward":4294967295:4245)
#loc219 = loc("forward":4294967295:4247)
#loc220 = loc("forward":4294967295:4249)
#loc221 = loc("forward":4294967295:4250)
#loc222 = loc("forward":4294967295:4251)
#loc223 = loc("forward":4294967295:4252)
#loc224 = loc("forward":4294967295:4253)
#loc225 = loc("forward":4294967295:4255)
#loc226 = loc("forward":4294967295:4257)
#loc227 = loc("forward":4294967295:4259)
#loc228 = loc("forward":4294967295:4260)
#loc229 = loc("forward":4294967295:4262)
#loc230 = loc("forward":4294967295:4264)
#loc231 = loc("forward":4294967295:4266)
#loc232 = loc("forward":4294967295:4267)
#loc233 = loc("forward":4294967295:4269)
#loc234 = loc("forward":4294967295:4270)
#loc235 = loc("forward":4294967295:4271)
#loc236 = loc("forward":4294967295:4273)
#loc237 = loc("forward":4294967295:4275)
#loc238 = loc("forward":4294967295:4276)
#loc239 = loc("forward":4294967295:4277)
#loc240 = loc("forward":4294967295:4278)
#loc241 = loc("forward":4294967295:4279)
#loc242 = loc("forward":4294967295:4280)
#loc243 = loc("forward":4294967295:4281)
#loc244 = loc("forward":4294967295:4282)
#loc245 = loc("forward":4294967295:4283)
#loc246 = loc("forward":4294967295:4285)
#loc247 = loc("forward":4294967295:4287)
#loc248 = loc(unknown)
#loc249 = loc("conv2d_1.dc.transpose.0"(#loc1))
#loc250 = loc("conv2d_1.dc.transpose.1"(#loc2))
#loc251 = loc("conv2d_1.dc.conv2d.2"(#loc3))
#loc252 = loc("multiply_9"(#loc4))
#loc253 = loc("add_15"(#loc5))
#loc254 = loc("relu_16"(#loc6))
#loc255 = loc("max_pool2d_17.dc.max_pool2d.2"(#loc7))
#loc256 = loc("conv2d_18.dc.conv2d.2"(#loc8))
#loc257 = loc("multiply_26"(#loc9))
#loc258 = loc("add_32"(#loc10))
#loc259 = loc("relu_33"(#loc11))
#loc260 = loc("conv2d_34.dc.conv2d.2"(#loc12))
#loc261 = loc("multiply_42"(#loc13))
#loc262 = loc("add_48"(#loc14))
#loc263 = loc("relu_49"(#loc15))
#loc264 = loc("conv2d_50.dc.conv2d.2"(#loc16))
#loc265 = loc("multiply_58"(#loc17))
#loc266 = loc("add_64"(#loc18))
#loc267 = loc("conv2d_65.dc.conv2d.2"(#loc19))
#loc268 = loc("multiply_73"(#loc20))
#loc269 = loc("add_79"(#loc21))
#loc270 = loc("add_80"(#loc22))
#loc271 = loc("relu_81"(#loc23))
#loc272 = loc("conv2d_82.dc.conv2d.2"(#loc24))
#loc273 = loc("multiply_90"(#loc25))
#loc274 = loc("add_96"(#loc26))
#loc275 = loc("relu_97"(#loc27))
#loc276 = loc("conv2d_98.dc.conv2d.2"(#loc28))
#loc277 = loc("multiply_106"(#loc29))
#loc278 = loc("add_112"(#loc30))
#loc279 = loc("relu_113"(#loc31))
#loc280 = loc("conv2d_114.dc.conv2d.2"(#loc32))
#loc281 = loc("multiply_122"(#loc33))
#loc282 = loc("add_128"(#loc34))
#loc283 = loc("add_129"(#loc35))
#loc284 = loc("relu_130"(#loc36))
#loc285 = loc("conv2d_131.dc.conv2d.2"(#loc37))
#loc286 = loc("multiply_139"(#loc38))
#loc287 = loc("add_145"(#loc39))
#loc288 = loc("relu_146"(#loc40))
#loc289 = loc("conv2d_147.dc.conv2d.2"(#loc41))
#loc290 = loc("multiply_155"(#loc42))
#loc291 = loc("add_161"(#loc43))
#loc292 = loc("relu_162"(#loc44))
#loc293 = loc("conv2d_163.dc.conv2d.2"(#loc45))
#loc294 = loc("multiply_171"(#loc46))
#loc295 = loc("add_177"(#loc47))
#loc296 = loc("add_178"(#loc48))
#loc297 = loc("relu_179"(#loc49))
#loc298 = loc("conv2d_180.dc.conv2d.2"(#loc50))
#loc299 = loc("multiply_188"(#loc51))
#loc300 = loc("add_194"(#loc52))
#loc301 = loc("relu_195"(#loc53))
#loc302 = loc("conv2d_196.dc.conv2d.2"(#loc54))
#loc303 = loc("multiply_204"(#loc55))
#loc304 = loc("add_210"(#loc56))
#loc305 = loc("relu_211"(#loc57))
#loc306 = loc("conv2d_212.dc.conv2d.2"(#loc58))
#loc307 = loc("multiply_220"(#loc59))
#loc308 = loc("add_226"(#loc60))
#loc309 = loc("conv2d_227.dc.conv2d.2"(#loc61))
#loc310 = loc("multiply_235"(#loc62))
#loc311 = loc("add_241"(#loc63))
#loc312 = loc("add_242"(#loc64))
#loc313 = loc("relu_243"(#loc65))
#loc314 = loc("conv2d_244.dc.conv2d.2"(#loc66))
#loc315 = loc("multiply_252"(#loc67))
#loc316 = loc("add_258"(#loc68))
#loc317 = loc("relu_259"(#loc69))
#loc318 = loc("conv2d_260.dc.conv2d.2"(#loc70))
#loc319 = loc("multiply_268"(#loc71))
#loc320 = loc("add_274"(#loc72))
#loc321 = loc("relu_275"(#loc73))
#loc322 = loc("conv2d_276.dc.conv2d.2"(#loc74))
#loc323 = loc("multiply_284"(#loc75))
#loc324 = loc("add_290"(#loc76))
#loc325 = loc("add_291"(#loc77))
#loc326 = loc("relu_292"(#loc78))
#loc327 = loc("conv2d_293.dc.conv2d.2"(#loc79))
#loc328 = loc("multiply_301"(#loc80))
#loc329 = loc("add_307"(#loc81))
#loc330 = loc("relu_308"(#loc82))
#loc331 = loc("conv2d_309.dc.conv2d.2"(#loc83))
#loc332 = loc("multiply_317"(#loc84))
#loc333 = loc("add_323"(#loc85))
#loc334 = loc("relu_324"(#loc86))
#loc335 = loc("conv2d_325.dc.conv2d.2"(#loc87))
#loc336 = loc("multiply_333"(#loc88))
#loc337 = loc("add_339"(#loc89))
#loc338 = loc("add_340"(#loc90))
#loc339 = loc("relu_341"(#loc91))
#loc340 = loc("conv2d_342.dc.conv2d.2"(#loc92))
#loc341 = loc("multiply_350"(#loc93))
#loc342 = loc("add_356"(#loc94))
#loc343 = loc("relu_357"(#loc95))
#loc344 = loc("conv2d_358.dc.conv2d.2"(#loc96))
#loc345 = loc("multiply_366"(#loc97))
#loc346 = loc("add_372"(#loc98))
#loc347 = loc("relu_373"(#loc99))
#loc348 = loc("conv2d_374.dc.conv2d.2"(#loc100))
#loc349 = loc("multiply_382"(#loc101))
#loc350 = loc("add_388"(#loc102))
#loc351 = loc("add_389"(#loc103))
#loc352 = loc("relu_390"(#loc104))
#loc353 = loc("conv2d_391.dc.conv2d.2"(#loc105))
#loc354 = loc("multiply_399"(#loc106))
#loc355 = loc("add_405"(#loc107))
#loc356 = loc("relu_406"(#loc108))
#loc357 = loc("conv2d_407.dc.conv2d.2"(#loc109))
#loc358 = loc("multiply_415"(#loc110))
#loc359 = loc("add_421"(#loc111))
#loc360 = loc("relu_422"(#loc112))
#loc361 = loc("conv2d_423.dc.conv2d.2"(#loc113))
#loc362 = loc("multiply_431"(#loc114))
#loc363 = loc("add_437"(#loc115))
#loc364 = loc("conv2d_438.dc.conv2d.2"(#loc116))
#loc365 = loc("multiply_446"(#loc117))
#loc366 = loc("add_452"(#loc118))
#loc367 = loc("add_453"(#loc119))
#loc368 = loc("relu_454"(#loc120))
#loc369 = loc("conv2d_455.dc.conv2d.2"(#loc121))
#loc370 = loc("multiply_463"(#loc122))
#loc371 = loc("add_469"(#loc123))
#loc372 = loc("relu_470"(#loc124))
#loc373 = loc("conv2d_471.dc.conv2d.2"(#loc125))
#loc374 = loc("multiply_479"(#loc126))
#loc375 = loc("add_485"(#loc127))
#loc376 = loc("relu_486"(#loc128))
#loc377 = loc("conv2d_487.dc.conv2d.2"(#loc129))
#loc378 = loc("multiply_495"(#loc130))
#loc379 = loc("add_501"(#loc131))
#loc380 = loc("add_502"(#loc132))
#loc381 = loc("relu_503"(#loc133))
#loc382 = loc("conv2d_504.dc.conv2d.2"(#loc134))
#loc383 = loc("multiply_512"(#loc135))
#loc384 = loc("add_518"(#loc136))
#loc385 = loc("relu_519"(#loc137))
#loc386 = loc("conv2d_520.dc.conv2d.2"(#loc138))
#loc387 = loc("multiply_528"(#loc139))
#loc388 = loc("add_534"(#loc140))
#loc389 = loc("relu_535"(#loc141))
#loc390 = loc("conv2d_536.dc.conv2d.2"(#loc142))
#loc391 = loc("multiply_544"(#loc143))
#loc392 = loc("add_550"(#loc144))
#loc393 = loc("add_551"(#loc145))
#loc394 = loc("relu_552"(#loc146))
#loc395 = loc("conv2d_553.dc.conv2d.2"(#loc147))
#loc396 = loc("multiply_561"(#loc148))
#loc397 = loc("add_567"(#loc149))
#loc398 = loc("relu_568"(#loc150))
#loc399 = loc("conv2d_569.dc.conv2d.2"(#loc151))
#loc400 = loc("multiply_577"(#loc152))
#loc401 = loc("add_583"(#loc153))
#loc402 = loc("relu_584"(#loc154))
#loc403 = loc("conv2d_585.dc.conv2d.2"(#loc155))
#loc404 = loc("multiply_593"(#loc156))
#loc405 = loc("add_599"(#loc157))
#loc406 = loc("add_600"(#loc158))
#loc407 = loc("relu_601"(#loc159))
#loc408 = loc("conv2d_602.dc.conv2d.2"(#loc160))
#loc409 = loc("multiply_610"(#loc161))
#loc410 = loc("add_616"(#loc162))
#loc411 = loc("relu_617"(#loc163))
#loc412 = loc("conv2d_618.dc.conv2d.2"(#loc164))
#loc413 = loc("multiply_626"(#loc165))
#loc414 = loc("add_632"(#loc166))
#loc415 = loc("relu_633"(#loc167))
#loc416 = loc("conv2d_634.dc.conv2d.2"(#loc168))
#loc417 = loc("multiply_642"(#loc169))
#loc418 = loc("add_648"(#loc170))
#loc419 = loc("add_649"(#loc171))
#loc420 = loc("relu_650"(#loc172))
#loc421 = loc("conv2d_651.dc.conv2d.2"(#loc173))
#loc422 = loc("multiply_659"(#loc174))
#loc423 = loc("add_665"(#loc175))
#loc424 = loc("relu_666"(#loc176))
#loc425 = loc("conv2d_667.dc.conv2d.2"(#loc177))
#loc426 = loc("multiply_675"(#loc178))
#loc427 = loc("add_681"(#loc179))
#loc428 = loc("relu_682"(#loc180))
#loc429 = loc("conv2d_683.dc.conv2d.2"(#loc181))
#loc430 = loc("multiply_691"(#loc182))
#loc431 = loc("add_697"(#loc183))
#loc432 = loc("add_698"(#loc184))
#loc433 = loc("relu_699"(#loc185))
#loc434 = loc("conv2d_700.dc.conv2d.2"(#loc186))
#loc435 = loc("multiply_708"(#loc187))
#loc436 = loc("add_714"(#loc188))
#loc437 = loc("relu_715"(#loc189))
#loc438 = loc("conv2d_716.dc.conv2d.2"(#loc190))
#loc439 = loc("multiply_724"(#loc191))
#loc440 = loc("add_730"(#loc192))
#loc441 = loc("relu_731"(#loc193))
#loc442 = loc("conv2d_732.dc.conv2d.2"(#loc194))
#loc443 = loc("conv2d_732.dc.transpose.3"(#loc195))
#loc444 = loc("conv2d_732.dc.transpose.4"(#loc196))
#loc445 = loc("multiply_740"(#loc197))
#loc446 = loc("add_746"(#loc198))
#loc447 = loc("conv2d_747.dc.conv2d.2"(#loc199))
#loc448 = loc("conv2d_747.dc.transpose.3"(#loc200))
#loc449 = loc("conv2d_747.dc.transpose.4"(#loc201))
#loc450 = loc("multiply_755"(#loc202))
#loc451 = loc("add_761"(#loc203))
#loc452 = loc("add_762"(#loc204))
#loc453 = loc("relu_763"(#loc205))
#loc454 = loc("conv2d_764.dc.transpose.0"(#loc206))
#loc455 = loc("conv2d_764.dc.transpose.1"(#loc207))
#loc456 = loc("conv2d_764.dc.conv2d.2"(#loc208))
#loc457 = loc("multiply_772"(#loc209))
#loc458 = loc("add_778"(#loc210))
#loc459 = loc("relu_779"(#loc211))
#loc460 = loc("conv2d_780.dc.conv2d.2"(#loc212))
#loc461 = loc("multiply_788"(#loc213))
#loc462 = loc("add_794"(#loc214))
#loc463 = loc("relu_795"(#loc215))
#loc464 = loc("conv2d_796.dc.conv2d.2"(#loc216))
#loc465 = loc("conv2d_796.dc.transpose.3"(#loc217))
#loc466 = loc("conv2d_796.dc.transpose.4"(#loc218))
#loc467 = loc("multiply_804"(#loc219))
#loc468 = loc("add_810"(#loc220))
#loc469 = loc("add_811"(#loc221))
#loc470 = loc("relu_812"(#loc222))
#loc471 = loc("conv2d_813.dc.transpose.0"(#loc223))
#loc472 = loc("conv2d_813.dc.transpose.1"(#loc224))
#loc473 = loc("conv2d_813.dc.conv2d.2"(#loc225))
#loc474 = loc("multiply_821"(#loc226))
#loc475 = loc("add_827"(#loc227))
#loc476 = loc("relu_828"(#loc228))
#loc477 = loc("conv2d_829.dc.conv2d.2"(#loc229))
#loc478 = loc("multiply_837"(#loc230))
#loc479 = loc("add_843"(#loc231))
#loc480 = loc("relu_844"(#loc232))
#loc481 = loc("conv2d_845.dc.conv2d.2"(#loc233))
#loc482 = loc("conv2d_845.dc.transpose.3"(#loc234))
#loc483 = loc("conv2d_845.dc.transpose.4"(#loc235))
#loc484 = loc("multiply_853"(#loc236))
#loc485 = loc("add_859"(#loc237))
#loc486 = loc("add_860"(#loc238))
#loc487 = loc("relu_861"(#loc239))
#loc488 = loc("avg_pool2d_862.dc.reshape.0"(#loc240))
#loc489 = loc("avg_pool2d_862.dc.transpose.1.dc.transpose.0"(#loc241))
#loc490 = loc("avg_pool2d_862.dc.reduce_avg.2"(#loc242))
#loc491 = loc("avg_pool2d_862.dc.transpose.3.dc.transpose.0"(#loc243))
#loc492 = loc("avg_pool2d_862.dc.transpose.3.dc.transpose.0_squeeze_865_squeeze3_4088"(#loc244))
#loc493 = loc("squeeze_865"(#loc245))
#loc494 = loc("matmul_867"(#loc246))
#loc495 = loc("add_868"(#loc247))
