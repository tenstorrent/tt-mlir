// RUN: ttmlir-opt --canonicalize %s | FileCheck %s

// Test 1: Pooling a 2D float tensor with only ones.
//
// The input tensor is a full tensor of 1's. The window dimensions are 2x2.
// So the output tensor must be filled with 4's.

module attributes {mhlo.cross_program_prefetches = [], mhlo.input_output_alias = [], mhlo.is_dynamic = false, mhlo.use_auto_spmd_partitioning = false, ttcore.meshes = #ttcore.meshes<[<"mesh" = 1x1>]>} {
    func.func @fold_pooling_op_test_1() -> (tensor<30x30xbf16> {ttcore.shard_status = #ttcore.shard_status<unsharded>}) {
        // CHECK: %[[FULL:.*]] = "ttir.full"
        // CHECK: fill_value = 4.000000e+00 : f32
        // CHECK: -> tensor<30x30xbf16>
        // CHECK: return %[[FULL]]
        %0 = "ttir.constant"() <{value = dense<1.000000e+00> : tensor<31x31xbf16>}> : () -> tensor<31x31xbf16>
        %3 = ttir.empty() : tensor<30x30xbf16>
        %4 = "ttir.pooling"(%0, %3) <{base_dilations = array<i64: 1, 1>, operandSegmentSizes = array<i32: 1, 1>, padding = array<i64: 0, 0, 0, 0>, pooling_method = #ttir<pooling_method Sum>, window_dilations = array<i64: 1, 1>, window_dimensions = array<i64: 2, 2>, window_strides = array<i64: 1, 1>}> : (tensor<31x31xbf16>, tensor<30x30xbf16>) -> tensor<30x30xbf16>
        return %4 : tensor<30x30xbf16>
    }
}

// ----
// Test 2: Pooling a 2D float tensor with some ones and some zeros (padding)
//
// The input tensor is a 31x31 tensor of 1's, padded with an extra row and column of zeros,
// ultimately with shape 32x32.
//
// The pool has a stride of 2x2 and window of size 2x2. So, the output should be a tensor
// of size 16x16, the top-right 15x15 slice shall be all 4's, whilst the right-most column
// and bottom-most row shall be all 2's, with the bottom-right corner being 1.

module attributes {mhlo.cross_program_prefetches = [], mhlo.input_output_alias = [], mhlo.is_dynamic = false, mhlo.use_auto_spmd_partitioning = false, ttcore.meshes = #ttcore.meshes<[<"mesh" = 1x1>]>} {
    func.func @fold_pooling_op_test_2() -> (tensor<16x16xbf16> {ttcore.shard_status = #ttcore.shard_status<unsharded>}) {
        // CHECK: %[[CONSTANT:.*]] = "ttir.constant"
        // CHECK: value = dense<"0x
        // CHECK: -> tensor<16x16xbf16>
        // CHECK: return %[[CONSTANT]]
        %0 = "ttir.constant"() <{value = dense<"0xtensor<32x32xbf16>}> : () -> tensor<32x32xbf16>
        %1 = ttir.empty() : tensor<16x16xbf16>
        %2 = "ttir.pooling"(%0, %1) <{base_dilations = array<i64: 1, 1>, operandSegmentSizes = array<i32: 1, 1>, padding = array<i64: 0, 0, 0, 0>, pooling_method = #ttir<pooling_method Sum>, window_dilations = array<i64: 1, 1>, window_dimensions = array<i64: 2, 2>, window_strides = array<i64: 2, 2>}> : (tensor<32x32xbf16>, tensor<16x16xbf16>) -> tensor<16x16xbf16>
        return %2 : tensor<16x16xbf16>
    }
}

// ----
// Test 3: Pooling a 2D integer tensor with only ones
//
// The input tensor is full of 1's. The window dimensions are 3x3.
// So, the output tensor should be full of 9's

module {
    func.func @fold_pooling_op_test_3() -> tensor<35x35xi32> {
        // CHECK: %[[FULL:.*]] = "ttir.full"
        // CHECK: fill_value = 9 : i32
        // CHECK: -> tensor<35x35xi32>
        // CHECK: return %[[FULL]]
        %0 = "ttir.full"() <{fill_value = 1 : i32, shape = array<i32: 37, 37>}> : () -> tensor<37x37xi32>
        %1 = ttir.empty() : tensor<35x35xi32>
        %2 = "ttir.pooling"(%0, %1) <{base_dilations = array<i64: 1, 1>, operandSegmentSizes = array<i32: 1, 1>, padding = array<i64: 0, 0, 0, 0>, pooling_method = #ttir<pooling_method Sum>, window_dilations = array<i64: 1, 1>, window_dimensions = array<i64: 3, 3>, window_strides = array<i64: 1, 1>}> : (tensor<37x37xi32>, tensor<35x35xi32>) -> tensor<35x35xi32>
        return %2 : tensor<35x35xi32>
    }
}

// ----
// Test 4: Pooling a 2D integer tensor with some ones and some zeros (padding)
//
// The input tensor is a 35x35 tensor full of 1's padded all around with 0's with a thickness of 1,
// ultimately with shape 37x37.
//
// The pool has a window size of 3x3. Thus the output a 6 along the edges of the output, where the
// corners of the output have value 4. All interior values should be 9.

module {
    func.func @fold_pooling_op_test_4(%arg0: tensor<1x384x35x35xi32>) -> tensor<35x35xi32> {
        // CHECK: %[[CONSTANT:.*]] = "ttir.constant"
        // CHECK: value = dense<"
        // CHECK: -> tensor<35x35xi32>
        // CHECK: return %[[CONSTANT]]
        %0 = "ttir.constant"() <{value = dense<"tensor<37x37xi32>}> : () -> tensor<37x37xi32>
        %1 = ttir.empty() : tensor<35x35xi32>
        %2 = "ttir.pooling"(%0, %1) <{base_dilations = array<i64: 1, 1>, operandSegmentSizes = array<i32: 1, 1>, padding = array<i64: 0, 0, 0, 0>, pooling_method = #ttir<pooling_method Sum>, window_dilations = array<i64: 1, 1>, window_dimensions = array<i64: 3, 3>, window_strides = array<i64: 1, 1>}> : (tensor<37x37xi32>, tensor<35x35xi32>) -> tensor<35x35xi32>
        return %2 : tensor<35x35xi32>
    }
}
