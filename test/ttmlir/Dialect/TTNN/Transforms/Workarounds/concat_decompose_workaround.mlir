// RUN: ttmlir-opt --ttcore-register-device --ttnn-layout --convert-ttir-to-ttnn --ttnn-workaround --canonicalize -o %t %s
 // RUN: FileCheck %s --input-file=%t

module {
  func.func public @test_concat_decompose_workaround(%arg0: tensor<1x3x128x128xbf16>, %arg1: tensor<1x3x128x128xbf16>, %arg2: tensor<1x3x128x128xbf16>, %arg3: tensor<1x3x128x128xbf16>, %arg4: tensor<1x3x128x128xbf16>, %arg5: tensor<1x3x128x128xbf16>, %arg6: tensor<1x3x128x128xbf16>, %arg7: tensor<1x3x128x128xbf16>, %arg8: tensor<1x3x128x128xbf16>, %arg9: tensor<1x3x128x128xbf16>, %arg10: tensor<1x3x128x128xbf16>, %arg11: tensor<1x3x128x128xbf16>, %arg12: tensor<1x3x128x128xbf16>, %arg13: tensor<1x3x128x128xbf16>, %arg14: tensor<1x3x128x128xbf16>, %arg15: tensor<1x3x128x128xbf16>, %arg16: tensor<1x3x128x128xbf16>, %arg17: tensor<1x3x128x128xbf16>, %arg18: tensor<1x3x128x128xbf16>, %arg19: tensor<1x3x128x128xbf16>, %arg20: tensor<1x3x128x128xbf16>, %arg21: tensor<1x3x128x128xbf16>, %arg22: tensor<1x3x128x128xbf16>, %arg23: tensor<1x3x128x128xbf16>, %arg24: tensor<1x3x128x128xbf16>, %arg25: tensor<1x3x128x128xbf16>, %arg26: tensor<1x3x128x128xbf16>, %arg27: tensor<1x3x128x128xbf16>, %arg28: tensor<1x3x128x128xbf16>, %arg29: tensor<1x3x128x128xbf16>, %arg30: tensor<1x3x128x128xbf16>, %arg31: tensor<1x3x128x128xbf16>, %arg32: tensor<1x3x128x128xbf16>, %arg33: tensor<1x3x128x128xbf16>, %arg34: tensor<1x3x128x128xbf16>, %arg35: tensor<1x3x128x128xbf16>, %arg36: tensor<1x3x128x128xbf16>, %arg37: tensor<1x3x128x128xbf16>, %arg38: tensor<1x3x128x128xbf16>, %arg39: tensor<1x3x128x128xbf16>, %arg40: tensor<1x3x128x128xbf16>, %arg41: tensor<1x3x128x128xbf16>, %arg42: tensor<1x3x128x128xbf16>, %arg43: tensor<1x3x128x128xbf16>, %arg44: tensor<1x3x128x128xbf16>, %arg45: tensor<1x3x128x128xbf16>, %arg46: tensor<1x3x128x128xbf16>, %arg47: tensor<1x3x128x128xbf16>, %arg48: tensor<1x3x128x128xbf16>, %arg49: tensor<1x3x128x128xbf16>, %arg50: tensor<1x3x128x128xbf16>, %arg51: tensor<1x3x128x128xbf16>, %arg52: tensor<1x3x128x128xbf16>, %arg53: tensor<1x3x128x128xbf16>, %arg54: tensor<1x3x128x128xbf16>, %arg55: tensor<1x3x128x128xbf16>, %arg56: tensor<1x3x128x128xbf16>, %arg57: tensor<1x3x128x128xbf16>, %arg58: tensor<1x3x128x128xbf16>, %arg59: tensor<1x3x128x128xbf16>, %arg60: tensor<1x3x128x128xbf16>, %arg61: tensor<1x3x128x128xbf16>, %arg62: tensor<1x3x128x128xbf16>, %arg63: tensor<1x3x128x128xbf16>, %arg64: tensor<1x4x128x128xbf16>) -> tensor<1x196x128x128xbf16> {
    // CHECK-LABEL: @test_concat_decompose_workaround
    %0 = ttir.empty() : tensor<1x196x128x128xbf16>
    // CHECK: %[[CONCAT0:[0-9]+]] = "ttnn.concat"
    // CHECK-SAME: ->  tensor<1x150x128x128xbf16,
    // CHECK: %{{[0-9]+}} = "ttnn.concat"(%[[CONCAT0]],
    // CHECK-SAME: ->  tensor<1x196x128x128xbf16,
    %1 = "ttir.concat"(%arg0, %arg1, %arg2, %arg3, %arg4, %arg5, %arg6, %arg7, %arg8, %arg9, %arg10, %arg11, %arg12, %arg13, %arg14, %arg15, %arg16, %arg17, %arg18, %arg19, %arg20, %arg21, %arg22, %arg23, %arg24, %arg25, %arg26, %arg27, %arg28, %arg29, %arg30, %arg31, %arg32, %arg33, %arg34, %arg35, %arg36, %arg37, %arg38, %arg39, %arg40, %arg41, %arg42, %arg43, %arg44, %arg45, %arg46, %arg47, %arg48, %arg49, %arg50, %arg51, %arg52, %arg53, %arg54, %arg55, %arg56, %arg57, %arg58, %arg59, %arg60, %arg61, %arg62, %arg63, %arg64, %0) <{dim = 1 : si32}> : (tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x3x128x128xbf16>, tensor<1x4x128x128xbf16>, tensor<1x196x128x128xbf16>) -> tensor<1x196x128x128xbf16>
    return %1 : tensor<1x196x128x128xbf16>
  }
}
