FROM ubuntu:22.04
SHELL ["/bin/bash", "-c"]

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies
RUN <<EOT
apt-get update
apt-get install -y \
    software-properties-common \
    build-essential \
    python3-pip \
    git \
    libhwloc-dev \
    pandoc \
    libtbb-dev \
    libcapstone-dev \
    pkg-config \
    linux-tools-generic \
    ninja-build \
    wget \
    libgtest-dev \
    cmake \
    ccache \
    doxygen \
    graphviz \
    libyaml-cpp-dev \
    libboost-all-dev \
    curl \
    jq \
    sudo \
    gh \
    lcov \
    unzip

# Install Python 3.11
add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y python3.11 python3.11-dev python3.11-venv python3.11-distutils

# Setup / install metal dependencies
wget https://raw.githubusercontent.com/tenstorrent/tt-metal/7aee9a53eac0023e3660668448e1fbb105038d63/{install_dependencies.sh,tt_metal/sfpi-version.sh}
bash install_dependencies.sh --docker
EOT

# Install clang 17
RUN wget https://apt.llvm.org/llvm.sh && \
    chmod u+x llvm.sh && \
    ./llvm.sh 17 && \
    apt install -y libc++-17-dev libc++abi-17-dev && \
    ln -s /usr/bin/clang-17 /usr/bin/clang && \
    ln -s /usr/bin/clang++-17 /usr/bin/clang++ && \
    ln -s /usr/bin/clangd-17 /usr/bin/clangd

# Set working directory and clone repository
WORKDIR /workspace
RUN <<EOT
# Clone tt-mlir repository
git clone https://github.com/tenstorrent/tt-mlir.git .
git submodule update --init --recursive

# Create toolchain directory
export TTMLIR_TOOLCHAIN_DIR=/opt/ttmlir-toolchain/
sudo mkdir -p "${TTMLIR_TOOLCHAIN_DIR}"
sudo chown -R "${USER}" "${TTMLIR_TOOLCHAIN_DIR}"

# Compile and generate toolchain
cmake -B env/build env
cmake --build env/build
source env/activate

# Build tt-explorer
cmake -G Ninja -B build \
   -DTT_RUNTIME_ENABLE_PERF_TRACE=ON \
   -DTTMLIR_ENABLE_RUNTIME=ON \
   -DTT_RUNTIME_DEBUG=ON \
   -DTTMLIR_ENABLE_STABLEHLO=ON

# build explorer
cmake --build build -- explorer

# Create entrypoint script that activates environment and runs tt-explorer
cat > /usr/local/bin/start-explorer.sh << 'SCRIPT'
#!/bin/bash
cd /workspace
source env/activate
exec /workspace/build/bin/tt-explorer "$@"
SCRIPT

chmod +x /usr/local/bin/start-explorer.sh
EOT

ENTRYPOINT ["/usr/local/bin/start-explorer.sh", "-x"]