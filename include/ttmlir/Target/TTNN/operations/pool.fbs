include "ttmlir/Target/Common/types.fbs";
include "ttmlir/Target/TTNN/types.fbs";

namespace tt.target.ttnn;

enum Pool2dOpType: uint32 {
  AvgPool2d,
  MaxPool2d,
}

table Pool2dOp {
  type: Pool2dOpType;
  in: tt.target.ttnn.TensorRef;
  out: tt.target.ttnn.TensorRef;
  batch_size: uint32;
  input_height: uint32;
  input_width: uint32;
  channels: uint32;
  kernel_size: [int32];
  stride: [int32];
  padding: [int32];
  dilation: [int32];
  memory_config: tt.target.ttnn.MemoryConfig;
  applied_shard_scheme: tt.target.ttnn.TensorMemoryLayout = null;
  ceil_mode: bool = false;
  in_place_halo: bool = false;
}

table UniformScale2D {
  scale: int32;
}

table NonUniformScale2D {
  scale: [int32];
}

union Scale2D {
  UniformScale2D,
  NonUniformScale2D,
}

table UpsampleOp {
  in: tt.target.ttnn.TensorRef;
  scale_factor: Scale2D;
  mode: string;
  memory_config: tt.target.ttnn.MemoryConfig;
  out: tt.target.ttnn.TensorRef;
}
