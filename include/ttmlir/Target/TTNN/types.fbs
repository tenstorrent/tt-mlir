include "ttmlir/Target/Common/types.fbs";

namespace tt.target.ttnn;

enum TensorMemoryLayout: ushort {
  Interleaved,
  HeightSharded,
  WidthSharded,
  BlockSharded,
}

enum StorageType: ushort {
    Host,
    Device,
}

enum ShardOrientation: uint32 {
  RowMajor,
  ColMajor,
}

struct CoreCoord {
  x: uint64;
  y: uint64;
}

struct CoreRange {
  start_coord: CoreCoord;
  end_coord: CoreCoord;
}

table CoreRangeSet {
  core_ranges: [CoreRange];
}

table ReplicateTensor {
  replication_factor: uint32;
}

table ShardTensor {
  shard_dim: uint32;
}

table ShardTensor2D {
  shard_mesh: Dim2d;
}

table AllGatherTensor {

}

table ShardSpec {
  core_range_set: CoreRangeSet;
  shape: [int32];
  orientation: ShardOrientation;
}

table MemoryConfig {
  tensor_memory_layout: TensorMemoryLayout;
  buffer_type: BufferType;
  shard_spec: ShardSpec;
}

table MemoryDesc {
  storage_type: StorageType;
  tile_shape: Dim2d;
  data_type: DataType;
  memory_config: MemoryConfig;
}

table LayoutDesc {
  oob_val: OOBVal;
  memory_desc: MemoryDesc;
}

table TensorDesc {
  shape: [int];
  mesh_shape: [int32];
  layout: LayoutDesc;
}

table TensorRef {
  global_id: uint32;
  desc: TensorDesc;
}
