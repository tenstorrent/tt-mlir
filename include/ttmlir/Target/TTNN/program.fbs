include "Common/types.fbs";
include "Common/debug_info.fbs";

namespace tt.target.ttnn;

table OpenDeviceOp {
  mesh: Dim2d;
  chip_ids: [uint32];
  out: tt.target.DeviceRef;
}

table CloseDeviceOp {
  in0: tt.target.DeviceRef;
}

table ToMemoryConfigOp {
  in0: tt.target.TensorRef;
  out: tt.target.TensorRef;
}

table FullOp {
  device: tt.target.DeviceRef;
  fill_value: float;
  out: tt.target.TensorRef;
}

enum EltwiseOpType: uint32 {
  Add = 0,
  Multiply = 1,
}

table EltwiseOp {
  type: EltwiseOpType;
  ins: [tt.target.TensorRef];
  out: tt.target.TensorRef;
}

// ANCHOR: adding_an_op_matmul_fbs
table MatmulOp {
  in0: tt.target.TensorRef;
  in1: tt.target.TensorRef;
  out: tt.target.TensorRef;
}
// ANCHOR_END: adding_an_op_matmul_fbs

union OpType {
  OpenDeviceOp,
  CloseDeviceOp,
  ToMemoryConfigOp,
  FullOp,
  EltwiseOp,
  MatmulOp,
}

table Operation {
  type: OpType;
  debug_info: string;
}

table Program {
  name: string;
  inputs: [TensorRef];
  outputs: [TensorRef];
  operations: [Operation];
  debug_info: DebugInfo;
}
